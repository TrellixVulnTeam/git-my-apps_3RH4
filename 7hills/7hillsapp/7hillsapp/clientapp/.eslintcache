[{"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\index.js":"1","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\App.js":"2","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\reportWebVitals.js":"3","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainContext.js":"4","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesContext.js":"5","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\MockContext.js":"6","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Consumer.js":"7","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\ProductList.js":"8","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Details.js":"9","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Cart.js":"10","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Footer.js":"11","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Home.js":"12","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemsNewForm.js":"13","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Product.js":"14","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\SignUpContainer.js":"15","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Modal.js":"16","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemsContainer.js":"17","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\Table.js":"18","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\SortingColumns.js":"19","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\Card.js":"20","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\PagginationTable.js":"21","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\SignupContainer.js":"22","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\SignupForm.js":"23","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\VegSnacksContext\\VegSnacksContext.js":"24","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\DummyCart\\AddCartList.js":"25","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerContactContainers.js":"26","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemDetails.js":"27","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\actions\\api.js":"28","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartList.js":"29","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartColumn.js":"30","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\EmptyCart.js":"31","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartTotals.js":"32","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Nav.js":"33","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\SignupForm.js":"34","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\HomeSideSpan.js":"35","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\HomeMainSpan.js":"36","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Contacts.js":"37","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndHome.js":"38","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\UserCart.js":"39","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ItemsSection.js":"40","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\VegSnacksSection.js":"41","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\OwnersSection.js":"42","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MenuSection.js":"43","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MuttonSnacksSection.js":"44","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\VegCurriesSection.js":"45","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\FishPrawnsSnacksSection.js":"46","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MuttonCurriesSection.js":"47","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Signup.js":"48","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BiryaniSection.js":"49","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ChickenCurriesSection.js":"50","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MainSection.js":"51","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\TandooriSection.js":"52","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\RotiNaanSection.js":"53","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Default.js":"54","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainProductDetails.js":"55","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndSuccess.js":"56","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainOrderDetails.js":"57","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BestOfSevenHillsSection.js":"58","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\GlobalFiltering.js":"59","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndLogin.js":"60","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\ColumnFiltering.js":"61","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ItemTable.js":"62","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ChickenSnacksSection.js":"63","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\PrintOrderForm.js":"64","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\ItemDetail5.js":"65","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\Data.js":"66","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\DummyCart\\AddCart.js":"67","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\Columns.js":"68","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerContainer.js":"69","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\Cart.js":"70","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\IndexDOM.js":"71","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllProducts.js":"72","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestOfSevenHillsList.js":"73","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\MainData.js":"74","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartItem.js":"75","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerForm.js":"76","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\OwnerTable.js":"77","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\OrderDetails.js":"78","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\TableHeaderColumn.js":"79","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestContainer.js":"80","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksContainer.js":"81","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksDetails.js":"82","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksForm.js":"83","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuContainer.js":"84","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksList.js":"85","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksContainer.js":"86","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuForm.js":"87","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesContainer.js":"88","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesList.js":"89","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksContainer.js":"90","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksDetails.js":"91","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniContainer.js":"92","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksList.js":"93","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksList.js":"94","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniDetails.js":"95","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesContainer.js":"96","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniList.js":"97","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RootiNaanList.js":"98","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksContainer.js":"99","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesList.js":"100","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksList.js":"101","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuDetails.js":"102","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaanContainer.js":"103","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriContainer.js":"104","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesContainer.js":"105","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesList.js":"106","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartEmpty.js":"107","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartColumn.js":"108","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartList.js":"109","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartProceed.js":"110","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartTotals.js":"111","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllTandooriProducts.js":"112","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\MainCard.js":"113","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllFishPrawnsSnacksProducts.js":"114","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllMuttonCurryProducts.js":"115","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllMuttonSnacksProducts.js":"116","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllRotiNaanProducts.js":"117","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllVegSnacksProducts.js":"118","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllVegCurriesProducts.js":"119","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriList.js":"120","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllChickenCurriesProducts.js":"121","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllBiryaniProducts.js":"122","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestOfSevenHills.js":"123","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllChickenSnacksProducts.js":"124","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartEmpty.js":"125","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartTotal.js":"126","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartList.js":"127","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestForm.js":"128","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartItems.js":"129","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacks.js":"130","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksForm.js":"131","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriForm.js":"132","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesForm.js":"133","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaanForm.js":"134","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksForm.js":"135","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacks.js":"136","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\Biryani.js":"137","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurries.js":"138","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacks.js":"139","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesForm.js":"140","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacks.js":"141","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniForm.js":"142","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaan.js":"143","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurries.js":"144","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesForm.js":"145","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsCart\\ItemsCart.js":"146","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\Tandoori.js":"147","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurries.js":"148","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksForm.js":"149","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartItem.js":"150"},{"size":923,"mtime":1608113930686,"results":"151","hashOfConfig":"152"},{"size":1345,"mtime":1608114732763,"results":"153","hashOfConfig":"152"},{"size":362,"mtime":499162500000,"results":"154","hashOfConfig":"152"},{"size":39705,"mtime":1608112138562,"results":"155","hashOfConfig":"152"},{"size":4749,"mtime":1608112138072,"results":"156","hashOfConfig":"152"},{"size":4796,"mtime":1608112133531,"results":"157","hashOfConfig":"152"},{"size":522,"mtime":1608112133466,"results":"158","hashOfConfig":"152"},{"size":554,"mtime":1608112133644,"results":"159","hashOfConfig":"152"},{"size":1132,"mtime":1608112133482,"results":"160","hashOfConfig":"152"},{"size":1178,"mtime":1608112133350,"results":"161","hashOfConfig":"152"},{"size":900,"mtime":1608112134610,"results":"162","hashOfConfig":"152"},{"size":5848,"mtime":1608116683819,"results":"163","hashOfConfig":"152"},{"size":4199,"mtime":1608112136837,"results":"164","hashOfConfig":"152"},{"size":1206,"mtime":1608112133612,"results":"165","hashOfConfig":"152"},{"size":2246,"mtime":1608112135517,"results":"166","hashOfConfig":"152"},{"size":1449,"mtime":1608112133556,"results":"167","hashOfConfig":"152"},{"size":3831,"mtime":1608112136812,"results":"168","hashOfConfig":"152"},{"size":2219,"mtime":1608112131042,"results":"169","hashOfConfig":"152"},{"size":3170,"mtime":1608112131036,"results":"170","hashOfConfig":"152"},{"size":1693,"mtime":1608112132567,"results":"171","hashOfConfig":"152"},{"size":5149,"mtime":1608112131022,"results":"172","hashOfConfig":"152"},{"size":2338,"mtime":1608112132716,"results":"173","hashOfConfig":"152"},{"size":4904,"mtime":1608112132760,"results":"174","hashOfConfig":"152"},{"size":970,"mtime":1608112133703,"results":"175","hashOfConfig":"152"},{"size":591,"mtime":1608112138192,"results":"176","hashOfConfig":"152"},{"size":1406,"mtime":1608112129828,"results":"177","hashOfConfig":"152"},{"size":2557,"mtime":1608112136771,"results":"178","hashOfConfig":"152"},{"size":9060,"mtime":1608112131916,"results":"179","hashOfConfig":"152"},{"size":403,"mtime":1608112133426,"results":"180","hashOfConfig":"152"},{"size":429,"mtime":1608112133368,"results":"181","hashOfConfig":"152"},{"size":197,"mtime":1608112133503,"results":"182","hashOfConfig":"152"},{"size":568,"mtime":1608112133450,"results":"183","hashOfConfig":"152"},{"size":8218,"mtime":1608112135345,"results":"184","hashOfConfig":"152"},{"size":4307,"mtime":1608112135607,"results":"185","hashOfConfig":"152"},{"size":4343,"mtime":1608112134876,"results":"186","hashOfConfig":"152"},{"size":7570,"mtime":1608112134810,"results":"187","hashOfConfig":"152"},{"size":2584,"mtime":1608112134529,"results":"188","hashOfConfig":"152"},{"size":5791,"mtime":1608112134264,"results":"189","hashOfConfig":"152"},{"size":616,"mtime":1608112135787,"results":"190","hashOfConfig":"152"},{"size":1369,"mtime":1608112134994,"results":"191","hashOfConfig":"152"},{"size":1284,"mtime":1608112135822,"results":"192","hashOfConfig":"152"},{"size":1243,"mtime":1608112135420,"results":"193","hashOfConfig":"152"},{"size":701,"mtime":1608112135201,"results":"194","hashOfConfig":"152"},{"size":1252,"mtime":1608112135325,"results":"195","hashOfConfig":"152"},{"size":1236,"mtime":1608112135799,"results":"196","hashOfConfig":"152"},{"size":1281,"mtime":1608112134561,"results":"197","hashOfConfig":"152"},{"size":1259,"mtime":1608112135274,"results":"198","hashOfConfig":"152"},{"size":163,"mtime":1608112135545,"results":"199","hashOfConfig":"152"},{"size":1171,"mtime":1608112134437,"results":"200","hashOfConfig":"152"},{"size":1289,"mtime":1608112134471,"results":"201","hashOfConfig":"152"},{"size":3172,"mtime":1608112135177,"results":"202","hashOfConfig":"152"},{"size":1217,"mtime":1608112135662,"results":"203","hashOfConfig":"152"},{"size":1218,"mtime":1608112135443,"results":"204","hashOfConfig":"152"},{"size":407,"mtime":1608112134542,"results":"205","hashOfConfig":"152"},{"size":2092,"mtime":1608117047577,"results":"206","hashOfConfig":"152"},{"size":1477,"mtime":1608112134386,"results":"207","hashOfConfig":"152"},{"size":670,"mtime":1608112138591,"results":"208","hashOfConfig":"152"},{"size":1186,"mtime":1608112134420,"results":"209","hashOfConfig":"152"},{"size":543,"mtime":1608112131019,"results":"210","hashOfConfig":"152"},{"size":3080,"mtime":1608112134373,"results":"211","hashOfConfig":"152"},{"size":324,"mtime":1608112130975,"results":"212","hashOfConfig":"152"},{"size":3409,"mtime":1608112134895,"results":"213","hashOfConfig":"152"},{"size":1260,"mtime":1608112134507,"results":"214","hashOfConfig":"152"},{"size":2061,"mtime":1608112138742,"results":"215","hashOfConfig":"152"},{"size":169,"mtime":1608112136357,"results":"216","hashOfConfig":"152"},{"size":445,"mtime":1608112132571,"results":"217","hashOfConfig":"152"},{"size":1248,"mtime":1608112138142,"results":"218","hashOfConfig":"152"},{"size":987,"mtime":1608112131005,"results":"219","hashOfConfig":"152"},{"size":3584,"mtime":1608112129831,"results":"220","hashOfConfig":"152"},{"size":2554,"mtime":1608112138236,"results":"221","hashOfConfig":"152"},{"size":5292,"mtime":1608112136354,"results":"222","hashOfConfig":"152"},{"size":2242,"mtime":1608112137720,"results":"223","hashOfConfig":"152"},{"size":1536,"mtime":1608112132187,"results":"224","hashOfConfig":"152"},{"size":1811,"mtime":1608112136497,"results":"225","hashOfConfig":"152"},{"size":869,"mtime":1608112133406,"results":"226","hashOfConfig":"152"},{"size":10435,"mtime":1608112129834,"results":"227","hashOfConfig":"152"},{"size":2430,"mtime":1608112135405,"results":"228","hashOfConfig":"152"},{"size":5324,"mtime":1608117062817,"results":"229","hashOfConfig":"152"},{"size":507,"mtime":1608112135650,"results":"230","hashOfConfig":"152"},{"size":3327,"mtime":1608112132081,"results":"231","hashOfConfig":"152"},{"size":3304,"mtime":1608112131637,"results":"232","hashOfConfig":"152"},{"size":5157,"mtime":1608112131670,"results":"233","hashOfConfig":"152"},{"size":4162,"mtime":1608112131694,"results":"234","hashOfConfig":"152"},{"size":3279,"mtime":1608112138889,"results":"235","hashOfConfig":"152"},{"size":1210,"mtime":1608117286542,"results":"236","hashOfConfig":"152"},{"size":3356,"mtime":1608112139390,"results":"237","hashOfConfig":"152"},{"size":4055,"mtime":1608112138937,"results":"238","hashOfConfig":"152"},{"size":3310,"mtime":1608112131336,"results":"239","hashOfConfig":"152"},{"size":1283,"mtime":1608117274852,"results":"240","hashOfConfig":"152"},{"size":3395,"mtime":1608112133993,"results":"241","hashOfConfig":"152"},{"size":5137,"mtime":1608112134038,"results":"242","hashOfConfig":"152"},{"size":3291,"mtime":1608112132348,"results":"243","hashOfConfig":"152"},{"size":1321,"mtime":1608117184611,"results":"244","hashOfConfig":"152"},{"size":1279,"mtime":1608117235650,"results":"245","hashOfConfig":"152"},{"size":5477,"mtime":1608112132363,"results":"246","hashOfConfig":"152"},{"size":3376,"mtime":1608112132976,"results":"247","hashOfConfig":"152"},{"size":1504,"mtime":1608117139710,"results":"248","hashOfConfig":"152"},{"size":1253,"mtime":1608117364840,"results":"249","hashOfConfig":"152"},{"size":3351,"mtime":1608112133157,"results":"250","hashOfConfig":"152"},{"size":1315,"mtime":1608117155532,"results":"251","hashOfConfig":"152"},{"size":1306,"mtime":1608117166698,"results":"252","hashOfConfig":"152"},{"size":1802,"mtime":1608112138918,"results":"253","hashOfConfig":"152"},{"size":3317,"mtime":1608112129997,"results":"254","hashOfConfig":"152"},{"size":3317,"mtime":1608112131150,"results":"255","hashOfConfig":"152"},{"size":3367,"mtime":1608112139204,"results":"256","hashOfConfig":"152"},{"size":1296,"mtime":1608117218549,"results":"257","hashOfConfig":"152"},{"size":233,"mtime":1608112138269,"results":"258","hashOfConfig":"152"},{"size":3309,"mtime":1608117511504,"results":"259","hashOfConfig":"152"},{"size":625,"mtime":1608112138307,"results":"260","hashOfConfig":"152"},{"size":3800,"mtime":1608112138378,"results":"261","hashOfConfig":"152"},{"size":1172,"mtime":1608112138413,"results":"262","hashOfConfig":"152"},{"size":1789,"mtime":1608112137824,"results":"263","hashOfConfig":"152"},{"size":774,"mtime":1608112136419,"results":"264","hashOfConfig":"152"},{"size":1805,"mtime":1608112137603,"results":"265","hashOfConfig":"152"},{"size":1795,"mtime":1608112137651,"results":"266","hashOfConfig":"152"},{"size":1797,"mtime":1608112137677,"results":"267","hashOfConfig":"152"},{"size":1789,"mtime":1608112137763,"results":"268","hashOfConfig":"152"},{"size":1791,"mtime":1608112137894,"results":"269","hashOfConfig":"152"},{"size":1791,"mtime":1608112137861,"results":"270","hashOfConfig":"152"},{"size":1252,"mtime":1608117262378,"results":"271","hashOfConfig":"152"},{"size":1786,"mtime":1608112137042,"results":"272","hashOfConfig":"152"},{"size":1922,"mtime":1608112137003,"results":"273","hashOfConfig":"152"},{"size":1528,"mtime":1608112132143,"results":"274","hashOfConfig":"152"},{"size":1799,"mtime":1608112137560,"results":"275","hashOfConfig":"152"},{"size":249,"mtime":1608112137907,"results":"276","hashOfConfig":"152"},{"size":949,"mtime":1608112137988,"results":"277","hashOfConfig":"152"},{"size":696,"mtime":1608112137970,"results":"278","hashOfConfig":"152"},{"size":4182,"mtime":1608112132096,"results":"279","hashOfConfig":"152"},{"size":1503,"mtime":1608112138285,"results":"280","hashOfConfig":"152"},{"size":1386,"mtime":1608112131609,"results":"281","hashOfConfig":"152"},{"size":4170,"mtime":1608112139402,"results":"282","hashOfConfig":"152"},{"size":4161,"mtime":1608112131160,"results":"283","hashOfConfig":"152"},{"size":4177,"mtime":1608112139208,"results":"284","hashOfConfig":"152"},{"size":4162,"mtime":1608112130000,"results":"285","hashOfConfig":"152"},{"size":4176,"mtime":1608112133187,"results":"286","hashOfConfig":"152"},{"size":1542,"mtime":1608112133141,"results":"287","hashOfConfig":"152"},{"size":2033,"mtime":1608112132311,"results":"288","hashOfConfig":"152"},{"size":1543,"mtime":1608112132890,"results":"289","hashOfConfig":"152"},{"size":1545,"mtime":1608112133949,"results":"290","hashOfConfig":"152"},{"size":4180,"mtime":1608112133004,"results":"291","hashOfConfig":"152"},{"size":1541,"mtime":1608112139368,"results":"292","hashOfConfig":"152"},{"size":4190,"mtime":1608112132386,"results":"293","hashOfConfig":"152"},{"size":1537,"mtime":1608112129948,"results":"294","hashOfConfig":"152"},{"size":1542,"mtime":1608112139192,"results":"295","hashOfConfig":"152"},{"size":4167,"mtime":1608112131358,"results":"296","hashOfConfig":"152"},{"size":311,"mtime":1608112136591,"results":"297","hashOfConfig":"152"},{"size":1537,"mtime":1608112131137,"results":"298","hashOfConfig":"152"},{"size":1539,"mtime":1608112131301,"results":"299","hashOfConfig":"152"},{"size":4186,"mtime":1608112134061,"results":"300","hashOfConfig":"152"},{"size":1759,"mtime":1608112137925,"results":"301","hashOfConfig":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"305"},"16m20fo",{"filePath":"306","messages":"307","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"305"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"305"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"305"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"305"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"305"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"305"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"305"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"305"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"305"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"305"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"305"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"305"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"305"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"305"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"305"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"305"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"305"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"305"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"305"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"305"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"305"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"305"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"305"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"305"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"305"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"305"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"305"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"305"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"305"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"305"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"305"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"305"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"305"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"305"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"305"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"305"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"305"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"305"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"305"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"305"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"305"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"305"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"305"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"305"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"305"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"305"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"305"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"305"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"305"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"305"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"305"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"305"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"305"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"305"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"305"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"305"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"305"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"305"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"305"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"305"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"305"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"305"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"305"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"305"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"305"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"305"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"305"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"305"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"305"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"305"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"305"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"305"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"305"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"305"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"305"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"305"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"305"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"305"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"305"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"305"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"305"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"305"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"305"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"305"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"305"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"305"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"305"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"305"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"305"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"305"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"305"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"305"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"305"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"305"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"305"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"305"},"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\index.js",["700"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { ProductProvider } from './context/MockContext'\nimport {MainContextProvider} from './MainContext/MainContext'\nimport { ChickenCurriesContextProvider } from './MainContext/ChickenCurriesContext';\n\nReactDOM.render(\n  <MainContextProvider>\n    <ProductProvider>\n          <Router>\n            <React.StrictMode>\n              <App />\n            </React.StrictMode>\n          </Router>\n    </ProductProvider>\n  </MainContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["701","702"],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\App.js",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport ItemsNewForm from './ItemsComponents/ItemsNewForm';\nimport ItemsContainer from './ItemsComponents/ItemsContainer';\nimport { Table } from './Table/Table';\nimport { SortingColumns } from './Table/SortingColumns';\nimport { PagginationTable } from './Table/PagginationTable';\nimport { Card } from './CardComponents/Card';\nimport OwnerContactContainers from './OwnerContact/OwnerContactContainers';\nimport Home from './Home/Home';\nimport ItemDetails from './ItemsComponents/ItemDetails'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport SignupForm from './CardComponents/SignupForm';\nimport SignUpContainer from './Home/SignUpContainer';\nimport Footer from './Home/Footer';\nimport Consumer from './context/Consumer'\nimport {VegSnacksContextProvider} from './context/VegSnacksContext/VegSnacksContext'\nimport ProductList from './context/ProductList';\nimport Product from './context/Product'\nimport Details from './context/Details';\nimport Cart from './context/Cart'\nimport Modal from './context/Modal'\nimport SignupContainer from './CardComponents/SignupContainer'\nimport AddCartList from './MainContext/DummyCart/AddCartList'\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\reportWebVitals.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainContext.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"import React, { Component } from 'react'\r\nimport api from '../actions/api'\r\nimport axios from 'axios'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport {Link} from 'react-router-dom'\r\nimport AddCartList from './DummyCart/AddCartList'\r\n\r\nconst AllContext = React.createContext()\r\nconst initialvalues = {\r\n    user:\"\",\r\n    password:\"\",\r\n}\r\n\r\nclass MainContextProvider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    this.state = {\r\n        isLoggedIn:false,\r\n        onSuccess:false,\r\n        openBackEnd:false,\r\n\r\n        BackEndInitialValues:initialvalues,\r\n\r\n        allProductsList:[],\r\n\r\n        search:\"\",\r\n        loading:false,\r\n\r\n        sortPrice:\"\",\r\n\r\n        showCheckOut:false,\r\n\r\n        showOrder:false,\r\n        orderDetails:[],\r\n\r\n        userList:[],\r\n        userDetails:[],\r\n\r\n        menuList:[],\r\n        menuNames:[],\r\n\r\n        openProduct:false,\r\n        productsDetail:[],\r\n\r\n        vegSnacksList:[],\r\n        vegSnacksProducts:[],\r\n\r\n        vegCurryList:[],\r\n        vegCurryProducts:[],\r\n\r\n        biryaniList:[],\r\n        biryaniProducts:[],\r\n        biryaniProductDetail:[],\r\n        biryaniDummyProducts:[],\r\n\r\n        chickenSnacksList:[],\r\n        chickenSnacksProducts:[],\r\n\r\n        muttonSnacksList:[],\r\n        muttonSnacksProducts:[],\r\n\r\n        fishPrawnsSnacksList:[],\r\n        fishPrawnsSnacksProducts:[],\r\n\r\n        chickenCurryList:[],\r\n        chickenCurryProducts:[],\r\n\r\n        muttonCurryList:[],\r\n        muttonCurryProducts:[],\r\n\r\n        tandooriList:[],\r\n        tandooriProducts:[],\r\n\r\n        rotiNaanList:[],\r\n        rotiNaanProducts:[],\r\n\r\n        bestOfSevenHillsList:[],\r\n        bestOfSevenHillsProducts:[],\r\n\r\n        cart:[],\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n    this.cancel='';\r\n}\r\n    // handleSearch=e=>{\r\n    //     const search = e.target.value\r\n    //     this.setState({search,loading:true},()=>{\r\n    //         // this.fetchBiryaniList(search)\r\n    //     })\r\n    // }\r\n    // fetchSearchResult = (search)=>{\r\n    //     if(this.cancel)\r\n    //     {\r\n    //         this.cancel.cancel()\r\n    //     }\r\n    //     this.cancel = axios.CancelToken.source()\r\n    //     axios.get(`http://localhost:64823/api/${search}/`,{CancelToken:this.cancel.token})\r\n    //     .then(res=>console.log(res))\r\n    // }\r\n    componentDidMount=()=>{\r\n        this.fetchMenuList()\r\n        this.fetchVegSnacksList()\r\n        this.fetchVegCurryList()\r\n        this.fetchBiryaniList()\r\n        this.fetchChickenSnacksList()\r\n        this.fetchMuttonSnacksList()\r\n        this.fetchFishPrawnsSnacksList()\r\n        this.fetchChickenCurryList()\r\n        this.fetchMuttonCurryList()\r\n        this.fetchTandooriList()\r\n        this.fetchRotiNaanList()\r\n        this.fetchUserList()\r\n        this.fetchBestOfSevenHillsList()\r\n        \r\n    }\r\n    \r\n    handleSearch=(e)=>{\r\n        const value = e.target.value\r\n        let search = [];\r\n        if(value.length>0)\r\n        {\r\n            const regex = new RegExp(`^${value}`,'i')\r\n            search = this.state.menuNames.sort().filter(v=>regex.test(v))\r\n        }\r\n        this.setState(()=>({search}))\r\n    }\r\n    renderSearchList=(items)=>{\r\n        const {search} = this.state\r\n        // if(search !== \"\" && items.toString().toLowerCase().indexOf(search.toString().toLowerCase())===-1)\r\n        // {\r\n        //     return null\r\n        // }\r\n        return (\r\n            <Link to={`./MainSection${items}`}>\r\n                <label className=\"home-items-label\">{items}</label>\r\n            </Link>)\r\n    }\r\n    renderSearch=()=>{\r\n        const {search} = this.state\r\n        if(search.length===0){\r\n            return null\r\n        }\r\n        return (\r\n            <ul className=\"home-items-ul\">\r\n                <div>\r\n                    {\r\n                        search && search.map((items,index)=>{\r\n                        return (<div key={index}>{this.renderSearchList(items)}</div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </ul>\r\n        )\r\n\r\n    }\r\n    checkOutForm=()=>{\r\n        this.setState({\r\n            showCheckOut:true\r\n        })\r\n    }\r\n    createOrder=(order)=>{\r\n        alert(\"Need to Save your order \" + order.name)\r\n    }\r\n\r\n    filterPoductPrice=(e)=>{\r\n        console.log(e.target.value)\r\n        const sortPrice = e.target.value\r\n        const tempProducts= [...this.state.biryaniProducts] \r\n        this.setState(()=>({\r\n            sortPrice:sortPrice,\r\n            tempProducts: tempProducts.slice().sort((a,b)=>(\r\n                sortPrice === \"lowest\" ?\r\n                ((a.price < b.price)? 1:-1):\r\n                sortPrice === \"highest\" ?\r\n                ((a.price > b.price) ? 1:-1):\r\n                ((a.id > b.id)?1:-1),\r\n                console.log(a.price)\r\n            ))\r\n        }))\r\n        console.log(tempProducts)\r\n        // if(e.target.value===\"\")\r\n        // {\r\n        //     this.setState({filterPrice:e.target.value, product:tempProducts})\r\n        // }\r\n        // this.setState({\r\n        //     filterPrice:e.target.value,\r\n        //     index: tempProducts.filter(product=>product.price.indexOf(e.target.value)>=0)\r\n        // })\r\n        // console.log(index)\r\n    }\r\n\r\n    fetchUserList=()=>{\r\n        api.usersignUPAPI().fetchAll().then(res=>{\r\n            this.setState({userList:[...res.data]},()=>{\r\n                this.setUserDetails()\r\n            })\r\n        })\r\n    }\r\n    setUserDetails=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.userList]\r\n        product.forEach(user=>{\r\n            const singleUser = {...user}\r\n            tempProducts = [...tempProducts,singleUser]\r\n        })\r\n        this.setState(()=>{\r\n            return {userDetails:tempProducts}\r\n        })\r\n    }\r\n    fetchBestOfSevenHillsList=()=>{\r\n        api.bestofsevenhillsAPI().fetchAll().then(res=>{\r\n            this.setState({bestOfSevenHillsList:[...res.data]},()=>{\r\n                this.setBestOfSevenHillsNames()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    setBestOfSevenHillsNames=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.bestOfSevenHillsList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {bestOfSevenHillsProducts:tempProducts}\r\n        })\r\n    }\r\n\r\n    fetchMenuList=()=>{\r\n        api.menuAPI().fetchAll().then(res=>{\r\n            this.setState({menuList:[...res.data]},()=>{\r\n                this.setMenuNames()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    setMenuNames=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.menuList]\r\n        product.forEach(item=>{\r\n            const singleItem = item.name\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {menuNames:tempProducts}\r\n        })\r\n    }\r\n    fetchVegSnacksList=()=>{\r\n        api.vegsnacksAPI().fetchAll().then(res=>{\r\n            this.setState({vegSnacksList:[...res.data]},()=>{\r\n                this.setVegSnacksProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchVegCurryList=()=>{\r\n        api.vegcurriesAPI().fetchAll().then(res=>{\r\n            this.setState({vegCurryList:[...res.data]},()=>{\r\n                this.setVegCurryProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchBiryaniList =()=>{\r\n        api.biryaniAPI().fetchAll().then(res=>\r\n            {this.setState({biryaniList:[...res.data]},()=>{\r\n                this.setBiryaniProducts()\r\n            });\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n    fetchChickenSnacksList=()=>{\r\n        api.chickensnacksAPI().fetchAll().then(res=>{\r\n            this.setState({chickenSnacksList:[...res.data]},()=>{\r\n                this.setChickenSnacksProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchMuttonSnacksList=()=>{\r\n        api.muttonsnacksAPI().fetchAll().then(res=>{\r\n            this.setState({muttonSnacksList:[...res.data]},()=>{\r\n                this.setMuttonSnacksProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchFishPrawnsSnacksList=()=>{\r\n        api.fishprawnssnacksAPI().fetchAll().then(res=>{\r\n            this.setState({fishPrawnsSnacksList:[...res.data]},()=>{\r\n                this.setFishPrawnsSnacksProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchChickenCurryList=()=>{\r\n        api.chickencurriesAPI().fetchAll().then(res=>{\r\n            this.setState({chickenCurryList:[...res.data]},()=>{\r\n                this.setChickenCurryProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchMuttonCurryList=()=>{\r\n        api.muttoncurriesAPI().fetchAll().then(res=>{\r\n            this.setState({muttonCurryList:[...res.data]},()=>{\r\n                this.setMuttonCurryProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchTandooriList=()=>{\r\n        api.tandooriAPI().fetchAll().then(res=>{\r\n            this.setState({tandooriList:[...res.data]},()=>{\r\n                this.setTandooriProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetchRotiNaanList=()=>{\r\n        api.rotinaanAPI().fetchAll().then(res=>{\r\n            this.setState({rotiNaanList:[...res.data]},()=>{\r\n                this.setRotiNaanProducts()\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    setVegSnacksProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.vegSnacksList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {vegSnacksProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setVegCurryProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.vegCurryList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {vegCurryProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setBiryaniProducts=()=>{\r\n        let tempProducts = []\r\n        let tempDummyProducts = []\r\n        let product = [...this.state.biryaniList]\r\n        let dummyProduct = [...this.state.biryaniList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        dummyProduct.forEach(item=>{\r\n            const singleItem = {...item}\r\n            tempDummyProducts = [...tempDummyProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {biryaniDummyProducts:tempDummyProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n        this.setState(()=>{\r\n            return {biryaniProducts:tempProducts}\r\n        })\r\n        // console.log(tempProducts)\r\n    }\r\n    setChickenSnacksProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.chickenSnacksList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {chickenSnacksProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setMuttonSnacksProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.muttonSnacksList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {muttonSnacksProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setFishPrawnsSnacksProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.fishPrawnsSnacksList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n        this.setState(()=>{\r\n            return {fishPrawnsSnacksProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    \r\n    setChickenCurryProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.chickenCurryList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {chickenCurryProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setMuttonCurryProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.muttonCurryList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {muttonCurryProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setTandooriProducts=()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.tandooriList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {tandooriProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })\r\n    }\r\n    setRotiNaanProducts=()=>{let tempProducts = []\r\n        let product = [...this.state.rotiNaanList]\r\n        product.forEach(item=>{\r\n            const singleItem = {...item,inCart:false,count:0,total:0,cartId: Math.floor(100000 + Math.random() * 900000)}\r\n            tempProducts = [...tempProducts,singleItem]\r\n        })\r\n        this.setState(()=>{\r\n            return {rotiNaanProducts:tempProducts}\r\n        },()=>{\r\n            return this.SetAllProducts()\r\n        })}\r\n\r\n\r\n\r\n    getItem=(cartId)=>{\r\n        const vegSnacksproduct = this.state.vegSnacksProducts.find(item=>item.cartId === cartId)\r\n        const vegCurryproduct = this.state.vegCurryProducts.find(item=>item.cartId === cartId)\r\n        const BiryaniProduct = this.state.biryaniProducts.find(item => item.cartId===cartId)\r\n        const chickenSnacksProduct = this.state.chickenSnacksProducts.find(item=>item.cartId === cartId)\r\n        const muttonSnacksProduct = this.state.muttonSnacksProducts.find(item=>item.cartId === cartId)\r\n        const fishPrawnsSnacksProduct = this.state.fishPrawnsSnacksProducts.find(item=>item.cartId === cartId)\r\n        const chickenCurryProduct = this.state.chickenCurryProducts.find(item=>item.cartId===cartId)\r\n        const muttonCurryProduct = this.state.muttonCurryProducts.find(item=>item.cartId === cartId)\r\n        const tandooriProduct = this.state.tandooriProducts.find(item=>item.cartId===cartId)\r\n        const rootiNaanProduct = this.state.rotiNaanProducts.find(item=>item.cartId===cartId)\r\n        const bestOfSevenHillsProduct = this.state.bestOfSevenHillsProducts.find(item=>item.cartId===cartId)\r\n        if(bestOfSevenHillsProduct){return bestOfSevenHillsProduct}\r\n        if(BiryaniProduct){return BiryaniProduct}\r\n        if(vegSnacksproduct){return vegSnacksproduct}\r\n        if(fishPrawnsSnacksProduct){return fishPrawnsSnacksProduct}\r\n        if(chickenSnacksProduct){return chickenSnacksProduct}\r\n        if(vegCurryproduct){return vegCurryproduct}\r\n        if(chickenCurryProduct){return chickenCurryProduct}\r\n        if(muttonSnacksProduct){return muttonSnacksProduct}\r\n        if(muttonCurryProduct){return muttonCurryProduct}\r\n        if(tandooriProduct){return tandooriProduct}\r\n        if(rootiNaanProduct){return rootiNaanProduct}\r\n    }\r\n\r\n\r\n\r\n\r\n    handelDetail=(id)=>{}\r\n\r\n\r\n    SetAllProducts=()=>{\r\n        let tempVegSnacksProducts = [...this.state.vegSnacksProducts]\r\n        let tempVegCurryProducts = [...this.state.vegCurryProducts]\r\n        let tempBiryaniProducts = [...this.state.biryaniProducts]\r\n        let tempChickenSnacksProducts = [...this.state.chickenSnacksProducts]\r\n        let tempMuttonSnacksProducts = [...this.state.muttonSnacksProducts]\r\n        let tempFishPrawnsSnacksProducts = [...this.state.fishPrawnsSnacksProducts]\r\n        let tempChickenCurryProducts = [...this.state.chickenCurryProducts]\r\n        let tempMuttonCurryProducts = [...this.state.muttonCurryProducts]\r\n        let tempTandooriProducts = [...this.state.tandooriProducts]\r\n        let tempRotiNaanProducts = [...this.state.rotiNaanProducts]\r\n        let tempDummyProducts = [...this.state.biryaniDummyProducts]\r\n\r\n        // const tempAllProductsList = [tempVegSnacksProducts,tempVegCurryProducts,tempBiryaniProducts,tempChickenSnacksProducts,tempMuttonSnacksProducts,tempFishPrawnsSnacksProducts,tempChickenCurryProducts,tempMuttonCurryProducts,tempTandooriProducts,tempRotiNaanProducts]\r\n        // this.setState(()=>{\r\n        //     return {allProductsList:tempAllProductsList}\r\n        // })\r\n        // console.log(tempAllProductsList)\r\n    }\r\n\r\n\r\n    addToCart=(cartId)=>{\r\n        let tempVegSnacksProducts = [...this.state.vegSnacksProducts]\r\n        let tempVegCurryProducts = [...this.state.vegCurryProducts]\r\n        let tempBiryaniProducts = [...this.state.biryaniProducts]\r\n        let tempChickenSnacksProducts = [...this.state.chickenSnacksProducts]\r\n        let tempMuttonSnacksProducts = [...this.state.muttonSnacksProducts]\r\n        let tempFishPrawnsSnacksProducts = [...this.state.fishPrawnsSnacksProducts]\r\n        let tempChickenCurryProducts = [...this.state.chickenCurryProducts]\r\n        let tempMuttonCurryProducts = [...this.state.muttonCurryProducts]\r\n        let tempTandooriProducts = [...this.state.tandooriProducts]\r\n        let tempRotiNaanProducts = [...this.state.rotiNaanProducts]\r\n        let tempDummyProducts = [...this.state.biryaniDummyProducts]\r\n        let tempBestOfSevenHillsProducts = [...this.state.bestOfSevenHillsProducts]\r\n\r\n        const indexBestOfSevenHills = tempBestOfSevenHillsProducts.indexOf(this.getItem(cartId))\r\n        const productBestOfSevenHills = tempBestOfSevenHillsProducts[indexBestOfSevenHills]\r\n\r\n        const indexVegSnacks = tempVegSnacksProducts.indexOf(this.getItem(cartId))\r\n        const productVegSnacks = tempVegSnacksProducts[indexVegSnacks]\r\n\r\n        const indexVegCurry = tempVegCurryProducts.indexOf(this.getItem(cartId))\r\n        const productVegCurry = tempVegCurryProducts[indexVegCurry]\r\n\r\n        const indexBiryani = tempBiryaniProducts.indexOf(this.getItem(cartId))\r\n        const productBiryani = tempBiryaniProducts[indexBiryani]\r\n\r\n        const indexChickenSnacks = tempChickenSnacksProducts.indexOf(this.getItem(cartId))\r\n        const productChickenSnacks = tempChickenSnacksProducts[indexChickenSnacks]\r\n\r\n        const indexMuttonSnacks = tempMuttonSnacksProducts.indexOf(this.getItem(cartId))\r\n        const productMuttonSnacks = tempMuttonSnacksProducts[indexMuttonSnacks]\r\n\r\n        const indexFishPrawnsSnacks = tempFishPrawnsSnacksProducts.indexOf(this.getItem(cartId))\r\n        const productFishPrawnsSnacks = tempFishPrawnsSnacksProducts[indexFishPrawnsSnacks]\r\n\r\n        const indexChickenCurry = tempChickenCurryProducts.indexOf(this.getItem(cartId))\r\n        const productChickenCurry = tempChickenCurryProducts[indexChickenCurry]\r\n\r\n        const indexMuttonCurry = tempMuttonCurryProducts.indexOf(this.getItem(cartId))\r\n        const productMuttonCurry = tempMuttonCurryProducts[indexMuttonCurry]\r\n\r\n        const indexTandoori = tempTandooriProducts.indexOf(this.getItem(cartId))\r\n        const productTandoori = tempTandooriProducts[indexTandoori]\r\n\r\n        const indexRotiNaan = tempRotiNaanProducts.indexOf(this.getItem(cartId))\r\n        const productRotiNaan = tempRotiNaanProducts[indexRotiNaan]\r\n\r\n        if(productBestOfSevenHills)\r\n        {\r\n            productBestOfSevenHills.inCart=true\r\n            productBestOfSevenHills.count=1\r\n            const price = productBestOfSevenHills.price\r\n            productBestOfSevenHills.total = price\r\n            this.setState(()=>{\r\n                return {bestOfSevenHillsProducts:tempBestOfSevenHillsProducts,cart:[...this.state.cart,productBestOfSevenHills]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productRotiNaan)\r\n        {\r\n            productRotiNaan.inCart=true\r\n            productRotiNaan.count=1\r\n            const price = productRotiNaan.price\r\n            productRotiNaan.total = price\r\n            this.setState(()=>{\r\n                return {rotiNaanProducts:tempRotiNaanProducts,cart:[...this.state.cart,productRotiNaan]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productTandoori)\r\n        {\r\n            productTandoori.inCart=true\r\n            productTandoori.count=1\r\n            const price = productTandoori.price\r\n            productTandoori.total = price\r\n            this.setState(()=>{\r\n                return {tandooriProducts:tempTandooriProducts,cart:[...this.state.cart,productTandoori]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productMuttonCurry)\r\n        {\r\n            productMuttonCurry.inCart=true\r\n            productMuttonCurry.count=1\r\n            const price = productMuttonCurry.price\r\n            productMuttonCurry.total = price\r\n            this.setState(()=>{\r\n                return {muttonCurryProducts:tempMuttonCurryProducts,cart:[...this.state.cart,productMuttonCurry]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productMuttonSnacks)\r\n        {\r\n            productMuttonSnacks.inCart=true\r\n            productMuttonSnacks.count=1\r\n            const price = productMuttonSnacks.price\r\n            productMuttonSnacks.total = price\r\n            this.setState(()=>{\r\n                return {muttonSnacksProducts:tempMuttonSnacksProducts,cart:[...this.state.cart,productMuttonSnacks]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productBiryani)\r\n        {\r\n            productBiryani.inCart=true\r\n            productBiryani.count=1\r\n            const price = productBiryani.price\r\n            productBiryani.total = price\r\n            this.setState(()=>{\r\n                return {biryaniProducts:tempBiryaniProducts,cart:[...this.state.cart,productBiryani]}\r\n            },()=>{\r\n                this.addTotals()\r\n                this.add(tempDummyProducts)\r\n            })\r\n        }\r\n        if(productVegSnacks)\r\n        {\r\n            productVegSnacks.inCart=true\r\n            productVegSnacks.count=1\r\n            const price = productVegSnacks.price\r\n            productVegSnacks.total = price\r\n            this.setState(()=>{\r\n                return {vegSnacksProducts:tempVegSnacksProducts,cart:[...this.state.cart,productVegSnacks]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productFishPrawnsSnacks)\r\n        {\r\n            productFishPrawnsSnacks.inCart=true\r\n            productFishPrawnsSnacks.count=1\r\n            const price = productFishPrawnsSnacks.price\r\n            productFishPrawnsSnacks.total = price\r\n            this.setState(()=>{\r\n                return {fishPrawnsSnacksProducts:tempFishPrawnsSnacksProducts,cart:[...this.state.cart,productFishPrawnsSnacks]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productChickenSnacks)\r\n        {\r\n            productChickenSnacks.inCart=true\r\n            productChickenSnacks.count=1\r\n            const price = productChickenSnacks.price\r\n            productChickenSnacks.total = price\r\n            this.setState(()=>{\r\n                return {chickenSnacksProducts:tempChickenSnacksProducts,cart:[...this.state.cart,productChickenSnacks]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productVegCurry)\r\n        {\r\n            productVegCurry.inCart=true\r\n            productVegCurry.count=1\r\n            const price = productVegCurry.price\r\n            productVegCurry.total = price\r\n            this.setState(()=>{\r\n                return {vegCurryProducts:tempVegCurryProducts,cart:[...this.state.cart,productVegCurry]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(productChickenCurry)\r\n        {\r\n            productChickenCurry.inCart=true\r\n            productChickenCurry.count=1\r\n            const price = productChickenCurry.price\r\n            productChickenCurry.total = price\r\n            this.setState(()=>{\r\n                return {chickenCurryProducts:tempChickenCurryProducts,cart:[...this.state.cart,productChickenCurry]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    add=(data)=>{\r\n        console.log(data)\r\n        \r\n        // api.addtocartAPI().create(data).then(res=>{\r\n        //     console.log(res.data)\r\n        // })\r\n    }\r\n    handleBackEndLoginSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(this.state.BackEndInitialValues.user===\"user\" && this.state.BackEndInitialValues.password === \"root\")\r\n        {\r\n            // window.alert(\"logged in successfully\");\r\n            this.setState(()=>{\r\n                return{\r\n                    isLoggedIn:true,\r\n                }\r\n            },()=>{\r\n                this.openBackEndSuccess()\r\n                this.closeBackEndLogin()\r\n            })\r\n        }\r\n        else{\r\n            window.alert(\"username or password is wrong\")\r\n        }\r\n    }\r\n    closeIsLoggedIn=()=>{\r\n        this.setState(()=>{\r\n                return{\r\n                    isLoggedIn:false,\r\n                }\r\n            }\r\n        )\r\n    }\r\n    handleBackendFormChange=(e)=>{\r\n        this.setState(()=>{return{BackEndInitialValues:{...this.state.BackEndInitialValues,[e.target.name]:e.target.value}}})\r\n    }\r\n    openBackEndLogin=()=>{\r\n        this.setState(()=>{\r\n            return { openBackEnd:true}\r\n        })\r\n    }\r\n    openBackEndSuccess=()=>{\r\n        this.setState(()=>{\r\n            return {onSuccess:true}\r\n        })\r\n    }\r\n    closeBackEndLogin=()=>{\r\n        this.setState(()=>{\r\n            return { openBackEnd:false}\r\n        })\r\n    }\r\n    closeBackEndSuccess=()=>{\r\n        this.setState(()=>{\r\n            return {onSuccess:false}\r\n        })\r\n    }\r\n\r\n    openOrderDetails=(id)=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.cart]\r\n        product.forEach(item=>{\r\n            const singleId = {...item,orderId:id}\r\n            tempProducts = [...tempProducts,singleId]\r\n        }) \r\n        this.setState(()=>{\r\n            return {orderDetails:tempProducts,showOrder:true}\r\n        })\r\n    }\r\n    closeOrderDetails=()=>{\r\n        this.setState(()=>{\r\n            return { showOrder:false}\r\n        })\r\n    }\r\n\r\n    openProductDetail=(cartId)=>{\r\n        const product = this.getItem(cartId)\r\n        this.setState(()=>{\r\n            return {productsDetail:product,openProduct:true}\r\n        })\r\n    }\r\n    closeProductsDetail=()=>{\r\n        this.setState(()=>{\r\n            return {openProduct:false}\r\n        })\r\n    }\r\n\r\n    increment=(cartId)=>{\r\n        let tempCart = [...this.state.cart]\r\n        const selecteditem=tempCart.find(item=>item.cartId===cartId)\r\n        const index = tempCart.indexOf(selecteditem)\r\n        const product = tempCart[index]\r\n        product.count = product.count+1\r\n        product.total = product.price * product.count\r\n        this.setState(()=>{\r\n            return {cart:[...tempCart]}\r\n        },()=>{\r\n            return this.addTotals()\r\n        })\r\n    }\r\n    decrement=(cartId)=>{\r\n        let tempCart = [...this.state.cart]\r\n        const selecteditem=tempCart.find(item=>item.cartId===cartId)\r\n        const index = tempCart.indexOf(selecteditem)\r\n        const product = tempCart[index]\r\n        product.count = product.count-1\r\n        if(product.count===0)\r\n        {\r\n            this.removeItem(cartId)\r\n        }\r\n        else{\r\n            product.total = product.price * product.count\r\n            this.setState(()=>{\r\n                return {cart:[...tempCart]}\r\n            },()=>{\r\n                return this.addTotals()\r\n            })\r\n        }\r\n    }\r\n    removeItem=(cartId)=>{\r\n        let tempVegSnacksProducts = [...this.state.vegSnacksProducts]\r\n        let tempVegCurryProducts = [...this.state.vegCurryProducts]\r\n        let tempBiryaniProducts = [...this.state.biryaniProducts]\r\n        let tempChickenSnacksProducts = [...this.state.chickenSnacksProducts]\r\n        let tempMuttonSnacksProducts = [...this.state.muttonSnacksProducts]\r\n        let tempFishPrawnsSnacksProducts = [...this.state.fishPrawnsSnacksProducts]\r\n        let tempChickenCurryProducts = [...this.state.chickenCurryProducts]\r\n        let tempMuttonCurryProducts = [...this.state.muttonCurryProducts]\r\n        let tempTandooriProducts = [...this.state.tandooriProducts]\r\n        let tempRotiNaanProducts = [...this.state.rotiNaanProducts]\r\n        let tempBestOfSevenHillsProducts = [...this.state.bestOfSevenHillsProducts]\r\n\r\n        let tempCart = [...this.state.cart]\r\n        tempCart = tempCart.filter(item=>item.cartId!==cartId)\r\n\r\n        const indexBestOfSevenHills = tempBestOfSevenHillsProducts.indexOf(this.getItem(cartId))\r\n        let removedBestOfSevenHillsProduct = tempBestOfSevenHillsProducts[indexBestOfSevenHills]\r\n\r\n        const indexRotiNaan = tempRotiNaanProducts.indexOf(this.getItem(cartId))\r\n        let removedRotiNaanProduct = tempRotiNaanProducts[indexRotiNaan]\r\n\r\n        const indexTandoori = tempTandooriProducts.indexOf(this.getItem(cartId))\r\n        let removedTandooriProduct = tempTandooriProducts[indexTandoori]\r\n\r\n        const indexMuttonCurry = tempMuttonCurryProducts.indexOf(this.getItem(cartId))\r\n        let removedMuttonCurryProduct = tempMuttonCurryProducts[indexMuttonCurry]\r\n\r\n        const indexMuttonSnacks = tempMuttonSnacksProducts.indexOf(this.getItem(cartId))\r\n        let removedMuttonSnacksProduct = tempMuttonSnacksProducts[indexMuttonSnacks]\r\n\r\n        const indexBiryani = tempBiryaniProducts.indexOf(this.getItem(cartId))\r\n        let removedBiryaniProduct = tempBiryaniProducts[indexBiryani]\r\n\r\n        const indexVegSnacks = tempVegSnacksProducts.indexOf(this.getItem(cartId))\r\n        let removedVegSnacksProduct = tempVegSnacksProducts[indexVegSnacks]\r\n\r\n        const indexFishPrawnsSnacks = tempFishPrawnsSnacksProducts.indexOf(this.getItem(cartId))\r\n        let removedFishPrawnsSnacksProduct = tempFishPrawnsSnacksProducts[indexFishPrawnsSnacks]\r\n\r\n        const indexChickenSnacks = tempChickenSnacksProducts.indexOf(this.getItem(cartId))\r\n        let removedChickenSnacksProduct = tempChickenSnacksProducts[indexChickenSnacks]\r\n\r\n        const indexVegCurry = tempVegCurryProducts.indexOf(this.getItem(cartId))\r\n        let removedVegCurryProduct = tempVegCurryProducts[indexVegCurry]\r\n\r\n        const indexChickenCurry = tempChickenCurryProducts.indexOf(this.getItem(cartId))\r\n        let removedChickenCurryProduct = tempChickenCurryProducts[indexChickenCurry]\r\n\r\n        if(removedBestOfSevenHillsProduct)\r\n        {\r\n            removedBestOfSevenHillsProduct.inCart=false\r\n            removedBestOfSevenHillsProduct.count=0\r\n            removedBestOfSevenHillsProduct.total=0\r\n            this.setState(()=>{\r\n                return {bestOfSevenHillsProducts:[...tempBestOfSevenHillsProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedRotiNaanProduct)\r\n        {\r\n            removedRotiNaanProduct.inCart=false\r\n            removedRotiNaanProduct.count=0\r\n            removedRotiNaanProduct.total=0\r\n            this.setState(()=>{\r\n                return {rotiNaanProducts:[...tempRotiNaanProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedTandooriProduct)\r\n        {\r\n            removedTandooriProduct.inCart=false\r\n            removedTandooriProduct.count=0\r\n            removedTandooriProduct.total=0\r\n            this.setState(()=>{\r\n                return {tandooriProducts:[...tempTandooriProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedMuttonCurryProduct)\r\n        {\r\n            removedMuttonCurryProduct.inCart=false\r\n            removedMuttonCurryProduct.count=0\r\n            removedMuttonCurryProduct.total=0\r\n            this.setState(()=>{\r\n                return {muttonSnacksproducts:[...tempMuttonCurryProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedMuttonSnacksProduct)\r\n        {\r\n            removedMuttonSnacksProduct.inCart=false\r\n            removedMuttonSnacksProduct.count=0\r\n            removedMuttonSnacksProduct.total=0\r\n            this.setState(()=>{\r\n                return {muttonSnacksproducts:[...tempMuttonSnacksProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedBiryaniProduct)\r\n        {\r\n            removedBiryaniProduct.inCart=false\r\n            removedBiryaniProduct.count=0\r\n            removedBiryaniProduct.total=0\r\n            this.setState(()=>{\r\n                return {biryaniProducts:[...tempBiryaniProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedVegSnacksProduct){\r\n            removedVegSnacksProduct.inCart=false\r\n            removedVegSnacksProduct.count=0\r\n            removedVegSnacksProduct.total=0\r\n            this.setState(()=>{\r\n                return {vegSnacksProducts:[...tempVegSnacksProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedFishPrawnsSnacksProduct){\r\n            removedFishPrawnsSnacksProduct.inCart=false\r\n            removedFishPrawnsSnacksProduct.count=0\r\n            removedFishPrawnsSnacksProduct.total=0\r\n            this.setState(()=>{\r\n                return {fishPrawnsSnacksProducts:[...tempFishPrawnsSnacksProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedChickenSnacksProduct)\r\n        {\r\n            removedChickenSnacksProduct.inCart=false\r\n            removedChickenSnacksProduct.count=0\r\n            removedChickenSnacksProduct.total=0\r\n            this.setState(()=>{\r\n                return {chickenSnacksProducts:[...tempChickenSnacksProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedVegCurryProduct)\r\n        {\r\n            removedVegCurryProduct.inCart=false\r\n            removedVegCurryProduct.count=0\r\n            removedVegCurryProduct.total=0\r\n            this.setState(()=>{\r\n                return {vegCurryproducts:[...tempVegCurryProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        if(removedChickenCurryProduct)\r\n        {\r\n            removedChickenCurryProduct.inCart=false\r\n            removedChickenCurryProduct.count=0\r\n            removedChickenCurryProduct.total=0\r\n            this.setState(()=>{\r\n                return {chickenCurryProducts:[...tempChickenCurryProducts],cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        \r\n    }\r\n    clearCart=()=>{\r\n        this.setState(()=>{\r\n            return {cart:[]}\r\n        },()=>{\r\n            return (\r\n                this.setBiryaniProducts(),\r\n                this.setVegSnacksProducts(),\r\n                this.setFishPrawnsSnacksProducts(),\r\n                this.setChickenSnacksProducts(),\r\n                this.setMuttonSnacksProducts(),\r\n                this.setVegCurryProducts(),\r\n                this.setChickenCurryProducts(),\r\n                this.setMuttonCurryProducts(),\r\n                this.setTandooriProducts(),\r\n                this.setRotiNaanProducts(),\r\n                this.setBestOfSevenHillsNames(),\r\n                this.addTotals()\r\n            )\r\n        })\r\n    }\r\n    addTotals=()=>{\r\n        let subTotal = 0\r\n        this.state.cart.map(item=>(subTotal += item.total))\r\n        const tempTax = subTotal *0.1\r\n        const Tax = parseFloat(tempTax.toFixed(2))\r\n        const total = subTotal + Tax\r\n        this.setState(()=>{\r\n            return {\r\n                cartSubTotal:subTotal,\r\n                cartTax:Tax,\r\n                cartTotal:total\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <AllContext.Provider value={{\r\n                ...this.state,\r\n                handleSearch:this.handleSearch,\r\n                renderSearch:this.renderSearch,\r\n                filterPoductPrice:this.filterPoductPrice,\r\n                checkOutForm:this.checkOutForm,\r\n                createOrder:this.createOrder,\r\n                closeIsLoggedIn:this.closeIsLoggedIn,\r\n                openBackEndLogin:this.openBackEndLogin,\r\n                closeBackEndLogin:this.closeBackEndLogin,\r\n                openBackEndSuccess:this.openBackEndSuccess,\r\n                closeBackEndSuccess:this.closeBackEndSuccess,\r\n                handleBackEndLoginSubmit:this.handleBackEndLoginSubmit,\r\n                handleBackendFormChange:this.handleBackendFormChange,\r\n                handelDetail:this.handelDetail,\r\n                addToCart:this.addToCart,\r\n                openOrderDetails:this.openOrderDetails,\r\n                closeOrderDetails:this.closeOrderDetails,\r\n                openProductDetail:this.openProductDetail,\r\n                closeProductsDetail:this.closeProductsDetail,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n            }}>\r\n                {this.props.children}\r\n            </AllContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst MainContextConsumer = AllContext.Consumer\r\n\r\nexport {MainContextProvider, MainContextConsumer}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesContext.js",["742"],"import { parseSync } from '@babel/core'\r\nimport React, { Component } from 'react'\r\nimport api from '../actions/api'\r\n\r\nconst ChickenCurriesContext = React.createContext()\r\nclass ChickenCurriesContextProvider extends Component {\r\n    state = {\r\n        chickenCurriesList:[],\r\n        chickenCurriesProduct:[],\r\n        cart:[],\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n    componentDidMount=()=>{\r\n        this.fetchChickenCurriesList()\r\n    }\r\n    fetchChickenCurriesList =()=>{\r\n        api.chickencurriesAPI().fetchAll().then(res=>\r\n            {this.setState({chickenCurriesList:[...res.data]},()=>{\r\n                this.setProducts()\r\n            });\r\n        })\r\n        \r\n            .catch(err => console.log(err))\r\n    }\r\n    setProducts = ()=>{\r\n        let tempProducts = []\r\n        let product = [...this.state.chickenCurriesList]\r\n        product.forEach(item=>{\r\n            const singleProduct = {...item,inCart:false,count:0,total:0,cartId:Date().toLocaleString()}\r\n            tempProducts = [...tempProducts,singleProduct]\r\n        })\r\n        this.setState(()=>{\r\n            return {chickenCurriesProduct:tempProducts}\r\n        })\r\n    }\r\n    getItem=(id)=>{\r\n        const product = this.state.chickenCurriesProduct.find(item=>item.id===id)\r\n        return product\r\n    }\r\n    addToCart=(id)=>{\r\n        let tempProducts = [...this.state.chickenCurriesProduct]\r\n        const index = tempProducts.indexOf(this.getItem(id))\r\n        const product = tempProducts[index]\r\n        product.inCart = true\r\n        product.count = 1\r\n        const price = product.price\r\n        product.total = price\r\n        this.setState(()=>{\r\n            return {chickenCurriesProduct:tempProducts,cart:[...this.state.cart,product]}\r\n        },()=>{\r\n            this.addTotals()\r\n        })\r\n    }\r\n    increment=(id)=>{\r\n        let tempCart = [...this.state.cart]\r\n        const selectedItem = tempCart.find(item=>item.id===id)\r\n        const index = tempCart.indexOf(selectedItem)\r\n        const product = tempCart[index]\r\n        product.count = product.count + 1\r\n        product.total = product.price * product.count\r\n        this.setState(()=>{\r\n            return {cart:[...tempCart]}\r\n        },()=>{\r\n            this.addTotals()\r\n        })\r\n    }\r\n    removeItem=(id)=>{\r\n        let tempProducts = [...this.state.chickenCurriesProduct]\r\n        let tempCart = [...this.state.cart]\r\n        tempCart = tempCart.filter(item=>item.id!==id)\r\n        const index = tempProducts.indexOf(this.getItem(id))\r\n        let removedProduct = tempProducts[index]\r\n        removedProduct.inCart = false\r\n        removedProduct.count = 0\r\n        removedProduct.total =0\r\n        this.setState(()=>{\r\n            return {chickenCurriesProduct:[...tempProducts],cart:[...tempCart]}\r\n        },()=>{\r\n            return this.addTotals()\r\n        })\r\n    }\r\n    decrement=(id)=>{\r\n        let tempCart = [...this.state.cart]\r\n        const selectedItem = tempCart.find(item=>item.id===id)\r\n        const index = tempCart.indexOf(selectedItem)\r\n        const product = tempCart[index]\r\n        product.count = product.count - 1\r\n        if(product.count === 0)\r\n        {\r\n            this.removeItem(id)\r\n        }\r\n        else{\r\n            product.total = product.count * product.price\r\n            this.setState(()=>{\r\n                return {cart:[...tempCart]}\r\n            },()=>{\r\n                this.addTotals()\r\n            })\r\n        }\r\n        \r\n    }\r\n    clearCart=()=>{\r\n        this.setState(()=>{\r\n            return {cart:[]}\r\n        },()=>{\r\n            return (\r\n                this.setProducts(),\r\n                this.addTotals()\r\n            )\r\n        })\r\n    }\r\n    addTotals=()=>{\r\n        let subTotal=0\r\n        this.state.cart.map(item=>(subTotal += item.total))\r\n        const tempTax = subTotal * 0.1\r\n        const Tax = parseFloat(tempTax.toFixed(2))\r\n        const total = subTotal + Tax\r\n        this.setState(()=>{\r\n            return {\r\n                cartSubTotal:subTotal,\r\n                cartTax:Tax,\r\n                cartTotal:total\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <ChickenCurriesContext.Provider value={{\r\n                ...this.state,\r\n                addToCart:this.addToCart,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n            }}>\r\n                {this.props.children}\r\n            </ChickenCurriesContext.Provider>\r\n        )\r\n    }\r\n}\r\nconst ChickenCurriesContextConsumer = ChickenCurriesContext.Consumer\r\n\r\nexport {ChickenCurriesContextProvider,ChickenCurriesContextConsumer}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\MockContext.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Consumer.js",["743","744"],"import React from 'react'\r\nimport {ProductConsumer} from './MockContext'\r\nimport ProductList from './ProductList'\r\n\r\nconst Consumer = () => {\r\n    return (\r\n        <div>\r\n            {/* <ProductConsumer>\r\n                {(value)=>{\r\n                    return value.products.map(product=>{\r\n                        return <ProductList key={product.id} product={product}></ProductList>\r\n                    })\r\n                }}\r\n            </ProductConsumer> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consumer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\ProductList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Details.js",["745"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {ProductConsumer} from './MockContext'\r\n\r\nexport default class Details extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductConsumer>\r\n                {value=>{\r\n                    console.log(value)\r\n                    const { id,image,price,inCart} = value.detailProduct\r\n                    return (\r\n                        <div className=\"container\">\r\n                            <img src={image}></img>\r\n                            <h2>{price}</h2>\r\n                            <Link to='/'>\r\n                            <button>Back to produts</button>\r\n                            </Link>\r\n                            <button disabled={inCart?true:false} onClick={()=>{value.addToCart(id);value.openModal(id)}}>\r\n                                {inCart?<p disabled>In Cart</p>:<p>Add to Cart</p>}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }}\r\n                </ProductConsumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Cart.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Footer.js",["746"],"import React from 'react'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport {Link} from 'react-router-dom'\r\nimport { MainContextConsumer } from '../MainContext/MainContext'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <MainContextConsumer>\r\n            {\r\n                value=>{\r\n                    return (\r\n                        <div className=\"footer-div\">\r\n                            Footer Page\r\n                            <div className=\"footer-backend-div\">\r\n                            {/* <Link to='./BackEndLogin'> */}\r\n                                <button className=\"btn btn-light\" onClick={()=>value.openBackEndLogin()}>BackEnd</button>\r\n                            {/* </Link> */}\r\n                </div>\r\n            </div>\r\n                    )\r\n                }\r\n            }\r\n            \r\n            \r\n        </MainContextConsumer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Home.js",["747","748","749","750","751","752","753"],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemsNewForm.js",["754","755","756"],"import React, { useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\n\r\nconst initialvalues={\r\n    itemId:0,\r\n    itemName:\"\",\r\n    price:0,\r\n    itemImage:\"\",\r\n    imageFile:null,\r\n    imageSrc:defaultImageSrc\r\n}\r\n\r\nexport default function ItemsNewForm(props) {\r\n    \r\n    const {addOrEdit, recordForEdit} = props\r\n    const [ values, setValues] = useState(initialvalues)\r\n    const [ errors, setErrors] = useState({})\r\n\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null){\r\n        setValues(recordForEdit);\r\n        }\r\n    },[recordForEdit])\r\n\r\n    const handleInput = (e)=>{\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n\r\n    }\r\n\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0]){\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        // console.log(values)\r\n        // if(validate()){\r\n            const formData = new FormData()\r\n            formData.append(\"itemId\", values.itemId)\r\n            formData.append(\"itemName\", values.itemName)\r\n            formData.append(\"price\",values.price)\r\n            formData.append(\"itemImage\",values.itemImage)\r\n            formData.append(\"imageFile\",values.imageFile)\r\n            addOrEdit(formData,resetForm)\r\n        // }\r\n    }\r\n    const validate = ()=>{\r\n        let temp = {}\r\n        temp.itemName = values.itemName===\"\"?false:true\r\n        temp.price = values.price===0?false:true\r\n        temp.imageSrc = values.imageSrc===defaultImageSrc?false:true\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x=>x===true)\r\n    }\r\n    const applyErrorClass = field =>((field in errors && errors[field]===false)?\" invalid-field\":\"\")\r\n\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n        setErrors({})\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        {/* <div className=\"text-center\">\r\n            <h3>Items Forms</h3>\r\n        </div> */}\r\n        <div style={{position:\"relative\"}}>\r\n        <form autoComplete='off' noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n            <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                        <label>Upload Image</label>\r\n                        <input type=\"file\" accept=\"image/*\" name=\"imageFile\" className={\"form-control-file\"+applyErrorClass('imageSrc')} onChange={showPreview} id=\"image-uploader\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Item Name</label>\r\n                        <input type=\"text\" name=\"itemName\" className={\"form-control\" + applyErrorClass('itemName')} placeholder=\"Item Name\" onChange={handleInput} value={values.itemName}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Price</label>\r\n                        <input type=\"text\" name=\"price\" className={\"form-control\"+ applyErrorClass('price')} placeholder=\"Item Price\" onChange={handleInput} value={values.price}></input>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Product.js",["757"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport{ProductConsumer} from './MockContext'\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        const {id,image,price,inCart} = this.props.product\r\n        return (\r\n            <div className=\"container\">\r\n                <ProductConsumer>\r\n                    {\r\n                        value=>(\r\n                        <div className=\"image-container\" onClick={()=>{value.handleDetail(id)}}>\r\n                            <Link to='./Details'>\r\n                                <img src={image}></img>\r\n                            </Link>\r\n                            <h2>{price}</h2>\r\n                            <button className=\"cart-btn btn\" disabled={inCart ? true:false}\r\n                            onClick={()=>{value.addToCart(id);value.openModal(id)}}>\r\n                                {inCart?<h2 disabled>In Cart</h2>:<i className=\"fa fa-cart-plus\"></i>}\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        )\r\n                    }\r\n                </ProductConsumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\SignUpContainer.js",["758","759"],"import React,{useState,useEffect,useReducer} from 'react'\r\nimport '../StyleCss/HomeStyle.scss'\r\n\r\nfunction SignUpContainer() {\r\n    const [values, setValues] = useState([])\r\n    const handleInput =(e)=>{\r\n        const {name, value} = e.target;\r\n        const feildValue = { [name]: value };\r\n        setValues({\r\n            ...values,\r\n            ...feildValue,\r\n        })\r\n    }\r\n    function handleSignupSubmit(e){\r\n        e.preventDefault()\r\n        // dispatch({type:ACTIONS.CREATE,payload: {values:values}})\r\n    }\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSignupSubmit}>\r\n                <div className=\"home-signup\" id=\"home-signup-id\">\r\n                    <h2 className=\"name-h2\">SignUp Form</h2>\r\n                    <div className=\"signup-form\">\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" onChange={handleInput} value={values.email}></input>\r\n                        </div>\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobile\" className=\"form-control\" onChange={handleInput}value={values.mobile} ></input>\r\n                        </div>\r\n                        <div className=\"form-group user-div\">\r\n                            <input type=\"text\" placeholder=\"UserName\" name=\"userName\" className=\"form-control\" \r\n                            onChange={handleInput} value={values.userName}></input>\r\n                        </div>\r\n                        <div className=\"form-group password-div\">\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"passWord\" className=\"form-control password-input\" onChange={handleInput} value={values.passWord}></input>\r\n                        </div>\r\n                        <div className=\"form-group submit-div\">\r\n                            <button type=\"submit\" className=\"form-control btn-success\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\Modal.js",["760"],"import React, { Component } from 'react'\r\nimport {ProductConsumer} from './MockContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductConsumer>\r\n                    {value=>{\r\n                        const {modalOpen,closeModal} = value\r\n                        const {image,price,id,} = value.modalProduct\r\n                        if(!modalOpen)\r\n                        {\r\n                            return null;\r\n                        }\r\n                        else{\r\n                            return(\r\n                            <div className=\"container\">\r\n                                <h5>Item Add To Cart</h5>\r\n                                <img src={image}></img>\r\n                                <h2>{id}</h2>\r\n                                <h2>{price}</h2>\r\n                                <Link to='/'>\r\n                                <button onClick={()=>closeModal()}>Store</button>\r\n                                </Link>\r\n                                <Link to='/Cart'>\r\n                                <button onClick={()=>closeModal()}>Go To Cart</button>\r\n                                </Link>\r\n                            </div>\r\n                            )\r\n                        }\r\n                    }}\r\n                </ProductConsumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemsContainer.js",["761","762"],"import React, {useState, useEffect} from 'react'\r\nimport api from '../actions/api'\r\nimport ItemsNewForm from './ItemsNewForm'\r\nimport  Card  from '../CardComponents/Card'\r\nimport '../StyleCss/ItemContainer.scss'\r\n\r\n\r\nexport default function ItemsContainer(){\r\n\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit,setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess) =>{\r\n            if(formData.get('itemId')===\"0\")\r\n            {\r\n                api.itemsAPI().create(formData).then(res=>{\r\n                    onSuccess();\r\n                    fetchList();\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n            else{\r\n                api.itemsAPI().update(formData.get('itemId'),formData).then(res=>{\r\n                    onSuccess();\r\n                    fetchList();\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n        }\r\n\r\nfunction fetchList(){\r\n    api.itemsAPI().fetchAll().then(res=>{\r\n        setList(res.data)\r\n        }\r\n    )\r\n    .catch(err=>console.log(err))\r\n}\r\n// const fetchListById=(formData)=>{\r\n//     api.itemsAPI().fecthById(formData.get('itemId')).then(res=>{\r\n//         setList(res.data)\r\n//         }\r\n//     )\r\n//     .catch(err=>console.log(err))\r\n// }\r\nuseEffect(()=>{\r\n    fetchList();\r\n},[])\r\nconst showRecordDetails = data =>{\r\nsetRecordForEdit(data);\r\n}\r\nconst handleDelete = (e,id)=>{\r\n    e.stopPropagation();\r\n    if(window.confirm('Are you Sure to Delete?'))\r\n    {\r\n        api.itemsAPI().delete(id).then(res=>fetchList())\r\n        .catch(err=>console.log(err))\r\n    }\r\n}\r\nconst imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"6rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h5>{data.itemName}</h5>\r\n            <span>{data.price} Rs/-</span>\r\n            <button  onClick={()=>{showRecordDetails(data)}} className=\"btn btn-light\" >Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.itemId))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n    return (\r\n        <div>\r\n            {/* <div className=\"card-component\">\r\n            <Card></Card>\r\n            </div> */}\r\n            <div>\r\n                <ItemsNewForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></ItemsNewForm>\r\n            </div>\r\n            {/* <div className=\"col=md-8\"> */}\r\n                <div>List of Items</div>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/7))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[7*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[7*index+1]?imageCard(list[7*index+1]):null}</td>\r\n                                <td>{list[7*index+2]?imageCard(list[7*index+2]):null}</td>\r\n                                <td>{list[7*index+3]?imageCard(list[7*index+3]):null}</td>\r\n                                <td>{list[7*index+4]?imageCard(list[7*index+4]):null}</td>\r\n                                <td>{list[7*index+5]?imageCard(list[7*index+5]):null}</td>\r\n                                <td>{list[7*index+6]?imageCard(list[7*index+6]):null}</td>\r\n                            </tr>\r\n                            )}\r\n                    </tbody>\r\n                </table>\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\Table.js",["763"],"import React,{useMemo} from 'react'\r\nimport {useTable} from 'react-table'\r\nimport MOCK_DATA from '../CardComponents/MOCK_DATA.json'\r\nimport {Columns, GroupedColumns} from './Columns'\r\n\r\n\r\nexport const Table = () => {\r\n\r\n    const columns = useMemo(()=>GroupedColumns,[])\r\n    const data = useMemo(()=> MOCK_DATA,[])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n    const {getTableProps,getTableBodyProps,headerGroups,rows,prepareRow, footerGroups} = tableInstance\r\n    // console.log(tableInstance)\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {\r\n                    headerGroups.map((headerGroup)=>(\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map((column)=>(\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render(\"Header\")}\r\n                                </th>\r\n                            ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row)=>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell)=>{\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                        })}\r\n                            </tr>\r\n                        )})}\r\n            </tbody>\r\n            <tfoot>\r\n                {\r\n                    footerGroups.map((footer)=>(\r\n                        <tr {...footer.getFooterGroupProps()}>\r\n                            {\r\n                                footer.headers.map((column)=>(\r\n                                <th {...column.getFooterProps()}>{column.render(\"Footer\")}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tfoot>\r\n        </table>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\SortingColumns.js",["764","765"],"import React,{useMemo} from 'react'\r\nimport {useTable, useSortBy, useGlobalFilter,useFilters} from 'react-table'\r\nimport MOCK_DATA from '../CardComponents/MOCK_DATA.json'\r\nimport {Columns, GroupedColumns} from './Columns'\r\nimport { GlobalFiltering } from './GlobalFiltering'\r\nimport {ColumnFiltering} from './ColumnFiltering'\r\n\r\n\r\nexport const SortingColumns = () => {\r\n\r\n    const columns = useMemo(()=>GroupedColumns,[])\r\n    const data = useMemo(()=> MOCK_DATA,[])\r\n    const defaultColumn = useMemo(()=>{\r\n        return {\r\n            Filter: ColumnFiltering\r\n        }\r\n    },[])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n        defaultColumn\r\n    },useFilters,useGlobalFilter,useSortBy)\r\n    const {getTableProps,getTableBodyProps,headerGroups,rows,prepareRow,state,setGlobalFilter, footerGroups,getSortByToggleProps} = tableInstance\r\n    const {globalFilter} = state\r\n    console.log(state)\r\n    return (\r\n        <>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter}></GlobalFiltering>\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {\r\n                    headerGroups.map((headerGroup)=>(\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map((column)=>(\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render(\"Header\")}\r\n                                    <div>\r\n                                        {column.canFilter ? column.render('Filter'):null}\r\n                                    </div>\r\n                                    <span>\r\n                                        {column.isSorted ? (column.isSortedDesc ? 'desc':'asc'):''}\r\n                                    </span>\r\n                                    \r\n                                </th>\r\n                            ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row)=>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell)=>{\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                        })}\r\n                            </tr>\r\n                        )})}\r\n            </tbody>\r\n            <tfoot>\r\n                {\r\n                    footerGroups.map((footer)=>(\r\n                        <tr {...footer.getFooterGroupProps()}>\r\n                            {\r\n                                footer.headers.map((column)=>(\r\n                                <th {...column.getFooterProps()}>{column.render(\"Footer\")}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tfoot>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\Card.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\PagginationTable.js",["766","767"],"import React,{useMemo} from 'react'\r\nimport {useTable, useSortBy, useGlobalFilter,useFilters,usePagination} from 'react-table'\r\nimport MOCK_DATA from '../CardComponents/MOCK_DATA.json'\r\nimport {Columns, GroupedColumns} from './Columns'\r\nimport { GlobalFiltering } from './GlobalFiltering'\r\nimport {ColumnFiltering} from './ColumnFiltering'\r\n\r\n\r\nexport const PagginationTable = () => {\r\n\r\n    const columns = useMemo(()=>GroupedColumns,[])\r\n    const data = useMemo(()=> MOCK_DATA,[])\r\n    const defaultColumn = useMemo(()=>{\r\n        return {\r\n            Filter: ColumnFiltering\r\n        }\r\n    },[])\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n        defaultColumn\r\n    },useFilters,useGlobalFilter,useSortBy,usePagination)\r\n    const {getTableProps,getTableBodyProps,headerGroups,page,nextPage,previousPage,canPreviousPage,canNextPage,pageOptions,gotoPage,pageCount,setPageSize,prepareRow,state,setGlobalFilter,getSortByToggleProps} = tableInstance\r\n    const {globalFilter} = state\r\n    const { pageIndex, pageSize } = state\r\n    // console.log(state)\r\n\r\n    return (\r\n        <>\r\n        <GlobalFiltering filter={globalFilter} setFilter={setGlobalFilter}></GlobalFiltering>\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {\r\n                    headerGroups.map((headerGroup)=>(\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {\r\n                            headerGroup.headers.map((column)=>(\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render(\"Header\")}\r\n                                    <div>\r\n                                        {column.canFilter ? column.render('Filter'):null}\r\n                                    </div>\r\n                                    <span>\r\n                                        {column.isSorted ? (column.isSortedDesc ? 'desc':'asc'):''}\r\n                                    </span>\r\n                                    \r\n                                </th>\r\n                            ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    page.map((row)=>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n                                    row.cells.map((cell)=>{\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                        })}\r\n                            </tr>\r\n                        )})}\r\n            </tbody>\r\n            {/* <tfoot>\r\n                {\r\n                    footerGroups.map((footer)=>(\r\n                        <tr {...footer.getFooterGroupProps()}>\r\n                            {\r\n                                footer.headers.map((column)=>(\r\n                                <th {...column.getFooterProps()}>{column.render(\"Footer\")}</th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tfoot> */}\r\n            <div>\r\n                <span>\r\n                    Go TO Page: {' '}\r\n                    <input type=\"number\" defaultValue={pageIndex+1} \r\n                    onChange={(e)=>{\r\n                    const pageNumber= e.target.value? Number(e.target.value):0 \r\n                    if(pageNumber>99)\r\n                    (\r\n                        window.alert(\"You have entered number does not exist\")\r\n                    )\r\n                        gotoPage(pageNumber)\r\n                }}\r\n                    ></input>\r\n                </span>\r\n                <span>\r\n                    | Show Top :{' '}\r\n                    <select value={pageSize} onChange={(e)=> setPageSize(Number(e.target.value))}>\r\n                        {\r\n                            [10,20,40,60].map(pageSize=>(\r\n                            <option value={pageSize} key={pageSize}>Showing {pageSize}</option>\r\n                            ))\r\n                        }\r\n                        </select>{' '}|\r\n                </span>\r\n                <span>\r\n                    Page:{' '}\r\n                <strong>{pageIndex +1} of {pageOptions.length}</strong>{' '}\r\n                <span>\r\n                    {pageOptions.map((e,index)=>\r\n                    <button onClick={()=> gotoPage(index)}>{pageOptions[index]}</button>\r\n                    )}\r\n                </span>\r\n                </span>\r\n                    <button onClick={()=>gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n                <button onClick={()=>previousPage()} disabled={!canPreviousPage}>previous</button>\r\n                <button onClick={()=>nextPage()} disabled={!canNextPage}>Next</button>\r\n                    <button onClick={()=> gotoPage(pageCount-1)} disabled={!canNextPage}>{'>>'}</button>\r\n            </div>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\SignupContainer.js",["768","769","770","771"],"import React,{useState,useEffect} from 'react'\r\nimport SignupForm from './SignupForm'\r\nimport api from '../actions/api'\r\n\r\nconst SignupContainer = () => {\r\n    const [list,setList]=useState([{}])\r\n    const [recordForEdit, setRecordForEdit]=useState(null)\r\n    const addOrEdit = (data,onSuccess)=>{\r\n        api.usersignUPAPI().create(data).then(res=>{\r\n            onSuccess();\r\n            fetchList();\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    const fetchList=()=>{\r\n        api.usersignUPAPI().fetchAll().then(res=>setList(res.data))\r\n        .catch(err=>console.log(err))\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const handleEdit=(data)=>{\r\n        // setRecordForEdit(data)\r\n    }\r\n    const handleDelete=(event,id)=>{\r\n        event.stopPropagation();\r\n        if(window.confirm(\"Are you sure to Delete ?\"))\r\n        {\r\n            api.usersignupAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                // console.log(list)\r\n            }\r\n            <SignupForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></SignupForm>\r\n            {/* <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>User Name</th>\r\n                        <th>Email</th>\r\n                        <th>mobile</th>\r\n                        <th>Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        list && list.map((e,index)=>(\r\n                            <tr key={index}>\r\n                                <td>{e.id}</td>\r\n                                <td>{e.userName}</td>\r\n                                <td>{e.email}</td>\r\n                                <td>{e.mobile}</td>\r\n                                <td>{e.address}</td>\r\n                                <td><button onClick={()=>handleEdit(e)}>Edit</button></td>\r\n                                <td><button  onClick={(event)=>handleDelete(event,parseInt(e.id))}>Delete</button></td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\SignupForm.js",["772","773","774","775","776","777"],"import React,{useState,useEffect} from 'react'\r\nimport { MainContextConsumer } from '../MainContext/MainContext'\r\n\r\nconst initialvalues = {\r\n    userId:Math.floor(100000 + Math.random()* 900000),\r\n    name:\"\",\r\n    email:\"\",\r\n    mobile:1,\r\n    // address:\"\",\r\n}\r\n// const express = require('express')\r\n// const emailValidator = require('deep-email-validator');\r\nconst SignupForm = (props) => {\r\n    const {addOrEdit} = props\r\n    const [values,setValues]= useState(initialvalues)\r\n    const [errors,setErrors] =useState({})\r\n    // useEffect(()=>{\r\n    //     if(recordForEdit!=null)\r\n    //     {\r\n    //         setValues(initialvalues)\r\n    //     }\r\n    // })\r\n    const handleInput = (e)=>{\r\n        // const fieldValue = {[e.target.name]:e.target.value}\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n        // validate(fieldValue)\r\n    }\r\n    const validate = ()=>{\r\n        let temp = {}\r\n        temp.name = values.name==\"\"?false:true\r\n        temp.mobile = values.mobile==0?false:true\r\n        temp.email = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(values.email)==\"\"?false:true\r\n        // emailValidator.validate(values.email)\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x=>x==true)\r\n    }\r\n    \r\n    const handleSignupSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n        const formData = new FormData()\r\n        formData.append(\"userid\",values.userId)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"mobile\",values.mobile)\r\n        formData.append(\"email\",values.email)\r\n        // formData.append(\"passWord\",values.passWord)\r\n        // formData.append(\"address\",values.address)\r\n        addOrEdit(formData,resetForm)\r\n        }\r\n    }\r\n    \r\n    const applyErrorClass = field =>((field in errors && errors[field]==false)?\" invalid-field\":\"\")\r\n    const resetForm=()=>{\r\n        setValues(initialvalues)\r\n    }\r\n    return (\r\n        <MainContextConsumer>\r\n            {\r\n                value=>(\r\n                    <form autoComplete=\"off\" noValidate onSubmit={(e)=>handleSignupSubmit(e)}>\r\n                        <div className=\"home-signup1\" id=\"home-signup-id\">\r\n                            <h2 className=\"name-h2\">Please Fill The Form To Place An Order</h2>\r\n                            <div className=\"signup-form\" style={{position:\"relative\", left:\"30rem\"}}>\r\n                                <div className=\"form-group email-div\">\r\n                                    <input type=\"text\" name=\"userId\" placeholder=\"Id\" className=\"form-control\" value={values.userId} disabled></input>\r\n                                </div>\r\n                                <div className=\"form-group email-div\">\r\n                                    <input type=\"email\" name=\"email\" placeholder=\"Email\" className={\"form-control\" + applyErrorClass('email')}  onChange={(e)=>handleInput(e)} value={values.email}></input>\r\n                                </div>\r\n                                <div className=\"form-group email-div\">\r\n                                    <input type=\"text\" placeholder=\"Mobile No\" name=\"mobile\" className={\"form-control\" + applyErrorClass('mobile')}  onChange={(e)=>handleInput(e)} value={values.mobile} disabled></input>\r\n                                </div>\r\n                                <div className=\"form-group user-div\">\r\n                                    <input type=\"text\" placeholder=\"UserName\" name=\"name\" className={\"form-control\" + applyErrorClass('name')}  \r\n                                    onChange={(e)=>handleInput(e)} value={values.name}></input>\r\n                                </div>\r\n                                {/* <div className=\"form-group password-div\">\r\n                                    <input type=\"password\" placeholder=\"Password\" name=\"passWord\" className=\"form-control password-input\" onChange={(e)=>handleInput(e)} value={values.passWord}></input>\r\n                                </div> */}\r\n                                {/* <div className=\"form-group password-div\">\r\n                                    <input type=\"text\" placeholder=\"Address\" name=\"address\" className=\"form-control\" onChange={(e)=>handleInput(e)} value={values.address}></input>\r\n                                </div> */}\r\n                                <div className=\"form-group\" style={{position:\"relative\", left:\"-1rem\"}}>\r\n                                    <button type=\"submit\" className=\"form-control btn-success\" onClick={()=>validate() && value.openOrderDetails(values.userId)}>Place An order</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                )\r\n            }\r\n            {/* {console.log(values)} */}\r\n            \r\n        </MainContextConsumer>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\VegSnacksContext\\VegSnacksContext.js",["778","779"],"import React,{useState,useEffect} from 'react'\r\nimport api from '../../actions/api'\r\n\r\nconst productContext = React.createContext();\r\n\r\nconst VegSnacksContextProvider = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [products,setProducts] = useState([])\r\n    useEffect(()=>{\r\n        fetchList()\r\n        // setItems()\r\n    })\r\n    const fetchList =()=>{\r\n        api.vegsnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    const setItems=()=>{\r\n        let tempProducts = [];\r\n        list.forEach(item=>{\r\n            const singleItem = {...item,incart:false};\r\n            tempProducts = [...tempProducts,{...singleItem}];\r\n        });\r\n        setProducts(tempProducts)\r\n    }\r\n    return (\r\n        <productContext.Provider value={{...list}}>\r\n        </productContext.Provider>\r\n    )\r\n}\r\nconst VegSnacksContextConsumer = productContext.Consumer\r\nexport {VegSnacksContextProvider,VegSnacksContextConsumer}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\DummyCart\\AddCartList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerContactContainers.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsComponents\\ItemDetails.js",["780","781","782","783","784","785"],"import React ,{useState,useEffect}from 'react'\r\nimport api from '../actions/api'\r\n\r\nconst ItemDetails = ({match}) => {\r\n    const [list,setList] = useState([{}])\r\n    const [items,setItems] = useState([{}])\r\n    // console.log(match)\r\n    // const [id,setId]= useState(0);\r\n    const ids= match.params.id;\r\n    console.log(ids)\r\n    \r\n    const fetchListById= async()=>{\r\n        // setId(match.params.id)\r\n        if(ids==7)\r\n        {api.ownersAPI().fetchAll().then(res=>setList(res.data))}\r\n            // else{document.getElementById('card-id').style.display=\"none\"}}\r\n            if(ids==8)\r\n            {\r\n                api.itemsAPI().fetchAll().then(res=>setItems(res.data))\r\n            }else{document.getElementById('card-id').style.display=\"none\"}}\r\n        // api.itemsAPI().fecthById(match.params.id).then(res=>setList(res.data))}\r\n    // const fetchListById= async()=>{\r\n    // const fetchListId = await fetch(`http://localhost:64823/api/DB7HillsInsertItems/${match.params.id}`);\r\n    // const items = await fetchListId.json();\r\n    // console.log(items)\r\n    // setList(items)\r\n    // }\r\n    useEffect(()=>{\r\n        fetchListById();\r\n    },[ids])\r\n    function check(){\r\n        if(ids==7){\r\n            return true\r\n        }\r\n        // else{document.getElementById('card-id').style.display=\"none\"}\r\n    }\r\n    // const {a:{itemName}} = {list}\r\n    // console.log(itemName)\r\n    return (\r\n        <div id=\"card-id\">\r\n            {items.map((e,index)=>\r\n            <div key={index}>\r\n                <h2>{e.itemName}</h2>\r\n            </div>\r\n            )}\r\n            {\r\n                list.map((e,index)=>\r\n                // {switch(ids){\r\n                //     case 7:\r\n                //         return (\r\n                //             <div key={index} id={`card-${index}`}>\r\n                //             <h2>{e.ownerName}</h2>\r\n                //             <img src={e.ownerImageSrc}></img>\r\n                //         </div>\r\n                //         )\r\n                //         default:\r\n                //         return (\r\n                //             <h2>dsjnvjadfnv</h2>\r\n                //         )\r\n                // }\r\n                {\r\n                    return(\r\n                        <div key={index} id={`card-${index}`}>\r\n                            <h2>{e.ownerName}</h2>\r\n                            <img src={e.ownerImageSrc}></img>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetails\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\actions\\api.js",["786"],"import axios from \"axios\";\r\n\r\nconst baseurl = \"http://localhost:64823/api/\";\r\n\r\nexport default {\r\n  UserActions(url = baseurl + \"DB7Hills/\") {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fecthById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    };\r\n  },\r\n  addtocartAPI(url = baseurl + \"AddToCartModels/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  userloginAPI(url = baseurl + \"UserLoginModels/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  usersignupAPI(url = baseurl + \"SignUpUser/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  usersignUPAPI(url = baseurl + \"SignUpUserNew/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  savecartAPI(url = baseurl + \"AddCartItems/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  menuAPI(url = baseurl + \"Menu/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  vegsnacksAPI(url = baseurl + \"VegSnacks/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  vegcurriesAPI(url = baseurl + \"VegCurries/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  biryaniAPI(url = baseurl + \"Biryani/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  bestofsevenhillsAPI(url = baseurl + \"BestOfSevenHillsModels/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  chickensnacksAPI(url = baseurl + \"ChickenSnacks/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  muttonsnacksAPI(url = baseurl + \"MuttonSnacks/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  fishprawnssnacksAPI(url = baseurl + \"FishPrawnsSnacks/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  chickencurriesAPI(url = baseurl + \"ChickenCurries/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  muttoncurriesAPI(url = baseurl + \"MuttonCurries/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  tandooriAPI(url = baseurl + \"Tandoori/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  rotinaanAPI(url = baseurl + \"RotiNaan/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url,newRecord,{\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          'Content-Disposition': 'form-data'\r\n        }\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  itemsAPI(url = baseurl + \"DB7HillsInsertItems/\"){\r\n      return {\r\n          fetchAll: () => axios.get(url),\r\n          fecthById: (id)=> axios.get(url+id),\r\n          create: (newRecord) => axios.post(url, newRecord,{\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Content-Disposition': 'form-data'}\r\n          }),\r\n          update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n          delete: (id) => axios.delete(url+id)\r\n        }\r\n    },\r\n  ownersAPI(url=baseurl+\"OwnerDetailsModels/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url, newRecord,{\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Content-Disposition': 'form-data'}\r\n      }),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  },\r\n  signupAPI(url=baseurl+\"Signup/\"){\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      create: (newRecord) => axios.post(url, newRecord\r\n      //   ,{\r\n      //     headers: {\r\n      //       'Accept': 'application/json',\r\n      //           'Content-Type': 'application/json'}\r\n      // },\r\n      ),\r\n      update: (id, updatedRecord) => axios.put(url+id,updatedRecord),\r\n      delete: (id) => axios.delete(url+id)\r\n    }\r\n  }\r\n};\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartColumn.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\EmptyCart.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartTotals.js",["787"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CartTotals = ({value}) => {\r\n    const {cartSubTotal,cartTax,cartTotal,clearCart} = value\r\n    console.log(cartSubTotal)\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <button className=\"btn\" onClick={()=>clearCart()}>Clear Cart</button>\r\n                <div> SubTotal :{cartSubTotal}</div>\r\n                <div>Tax : {cartTax}</div>\r\n                <div>Total : {cartTotal}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartTotals\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Nav.js",["788","789","790","791","792","793","794","795","796"],"import React,{useState,useEffect} from 'react'\r\nimport Contacts from './Contacts'\r\nimport api from '../actions/api'\r\nimport {Link}from 'react-router-dom'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport axios from 'axios'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\nconst initialvalues ={\r\n    // id:0,\r\n    email:\"\",\r\n    mobile:0,\r\n    userName:\"\",\r\n    passWord:\"\"\r\n}\r\n\r\nconst Nav = () => {\r\n    const [count,setCount]=useState(0)\r\n    const [values, setValues] = useState(initialvalues)\r\n    const [list,setList]=useState([{}])\r\n    const [search,setSearch] = useState([])\r\n    \r\n    const handleLoginForm=()=>{\r\n        if(count%2===0){\r\n            document.getElementById('home-login-id').style.display=\"block\"\r\n            document.getElementById('home-signup-id').style.display=\"none\"\r\n            setCount(count+1)\r\n        }\r\n        else{\r\n            document.getElementById('home-login-id').style.display=\"none\"\r\n            setCount(count+1)\r\n        }\r\n    }\r\n    const handleLoginFormBlur = ()=> {\r\n        // document.getElementById('home-login-id').style.display=\"none\"\r\n    }\r\n    useEffect(()=>{\r\n        fetchValues()},[])\r\n    const handleSignupForm = ()=> {\r\n        if((count-1)%2===0){\r\n            document.getElementById('home-signup-id').style.display=\"block\"\r\n            document.getElementById('home-login-id').style.display=\"none\"\r\n            setCount(count+1)\r\n        }\r\n        else{\r\n            document.getElementById('home-signup-id').style.display=\"none\"\r\n            setCount(count+1)\r\n        }\r\n    }\r\n    \r\n    const handleInput =(e)=>{\r\n        const {name, value} = e.target;\r\n        const feildValue = { [name]: value };\r\n        setValues({\r\n            ...values,\r\n            ...feildValue,\r\n        })\r\n    }\r\n    \r\n    function resetfrom(){\r\n        setValues(initialvalues)\r\n    }\r\n    function fetchValues(){\r\n        api.signupAPI().fetchAll().then(res=>setList(res.data)).catch((err)=>console.log(err))\r\n    }\r\n    \r\n    const handleSignupSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        const fd = new FormData()\r\n        fd.append(\"email\",values.email)\r\n        fd.append(\"mobile\",values.mobile)\r\n        fd.append(\"userName\",values.userName)\r\n        fd.append(\"passWord\",values.passWord)\r\n        addValues(values);\r\n    }\r\n    function addValues(data){\r\n        api.signupAPI().create(data).then(res=>{\r\n            fetchValues();\r\n            resetfrom()\r\n        }).catch((err)=>console.log(err))\r\n    }\r\n    const handleLoginSubmit =()=>{}\r\n    return (\r\n        <div className=\"nav-index\">\r\n            <nav className=\"home-nav\">\r\n                <ul>\r\n                    <li><select className=\"home-location options\">\r\n                        <option value=\"Hyderabad\">Hyderabad</option>\r\n                        </select>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"home-info\">\r\n                            <i className=\"fa fa-info\" aria-hidden=\"true\"></i><label>Info</label>\r\n                        </div>\r\n                    </li>\r\n                    {/* <li>\r\n                        <div className=\"home-user\" onClick={handleLoginForm} onBlur={handleLoginFormBlur}>\r\n                            <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><label>Log in</label>\r\n                        </div>\r\n                    </li> */}\r\n                    <li>\r\n                        <div className=\"home-cart\">\r\n                            <Link to='./Cart'>\r\n                                <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i><label>Cart</label>\r\n                            </Link>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"home-cart\">\r\n                        <Link to='./Contacts'>\r\n                            <label>Contact</label>\r\n                        </Link>\r\n                        </div>\r\n                    </li>\r\n                    {/* <li>\r\n                        <div className=\"home-cart\">\r\n                        <Link to =\"../IndexDOM/MainData\">\r\n                            <label>Items</label>\r\n                        </Link>\r\n                        </div>\r\n                    </li> */}\r\n                </ul>\r\n            </nav>\r\n            <div className=\"home-search\">\r\n                        <MainContextConsumer>\r\n                                        {\r\n                                            value=>{\r\n                                                return (\r\n                                                    <>\r\n                                                        <input type=\"text\" name=\"search\" placeholder=\"Search Menu Items\" className=\"input-group-prepend\" style={{border:\"none\"}} onChange={(e)=>value.handleSearch(e)}></input>\r\n                                                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                                                        <i className=\"fa fa-close\"></i>\r\n                                                        {value.renderSearch()}\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    \r\n                        </MainContextConsumer>\r\n                        </div>\r\n\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleLoginSubmit} >\r\n                <div className=\"home-login\" id=\"home-login-id\">\r\n                <h2 className=\"name-h2\">Login Form</h2>\r\n                <div className=\"login-form\">\r\n                    <div className=\"form-group email-div\">\r\n                        <input type=\"text\" placeholder=\"UserName\" className=\"form-control\"></input>\r\n                    </div>\r\n                    <div className=\"form-group password-div\">\r\n                        <input type=\"password\" placeholder=\"Password\" className=\"form-control password-input\"></input>\r\n                    </div>\r\n                    <div className=\"form-group submit-div\">\r\n                        <input type=\"submit\" className=\"form-control btn-success\" value=\"Login\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group signup-div\">\r\n                    <a>Forgot Password ?</a>{\" or \"}<a onClick={handleSignupForm}>Sign Up</a>\r\n                </div>\r\n            </div>\r\n            </form>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSignupSubmit}>\r\n                <div className=\"home-signup\" id=\"home-signup-id\">\r\n                    <h2 className=\"name-h2\">SignUp Form</h2>\r\n                    <div className=\"signup-form\">\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" onChange={handleInput} value={values.email}></input>\r\n                        </div>\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobile\" className=\"form-control\" onChange={handleInput}value={values.mobile} ></input>\r\n                        </div>\r\n                        <div className=\"form-group user-div\">\r\n                            <input type=\"text\" placeholder=\"UserName\" name=\"userName\" className=\"form-control\" \r\n                            onChange={handleInput} value={values.userName}></input>\r\n                        </div>\r\n                        <div className=\"form-group password-div\">\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"passWord\" className=\"form-control password-input\" onChange={handleInput} value={values.passWord}></input>\r\n                        </div>\r\n                        <div className=\"form-group submit-div\">\r\n                            <button type=\"submit\" className=\"form-control btn-success\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\SignupForm.js",["797","798","799"],"import React,{useState,useEffect,useReducer} from 'react'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport api from '../actions/api'\r\nimport { actions } from 'react-table';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initialState = {\r\n  list: [],\r\n};\r\nconst initialvalues ={\r\n//     email:\"\",\r\n//     mobile:0,\r\n//     userName:\"\",\r\n// passWord:\"\"\r\n}\r\nconst ACTIONS={\r\n    CREATE:\"CREATE\",\r\n    FETCHALL:\"FETCHALL\",\r\n    UPDATE:\"UPDATE\",\r\n    DELETE:\"DELETE\"\r\n}\r\nfunction reducer(state,action){\r\n    switch(action.type)\r\n    {\r\n        case ACTIONS.FETCHALL:\r\n        return {\r\n            ...state,\r\n            list:[...action.payload]\r\n        }\r\n        case ACTIONS.CREATE:\r\n        // return [...state,newState(action.payload.values)]\r\n        return {\r\n            ...state,\r\n            list:[...state.list,action.payload]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nfunction newState(values){\r\n    return {id:Date.now() ,values:values,complete:false}\r\n}\r\n\r\n\r\nconst SignupForm = () => {\r\n    const [state,dispatch] = useReducer(reducer,initialState)\r\n    const [values, setValues] = useState({email:\"\",\r\n    mobile:0,\r\n    userName:\"\",\r\n    passWord:\"\"\r\n})\r\n    const handleInput =(e)=>{\r\n        // const {name, value} = e.target;\r\n        // const feildValue = { [name]: value };\r\n        setValues({...values,[e.target.name]: e.target.value});\r\n    }\r\n    useEffect(()=>{\r\n        fetchAllList();\r\n    },[])\r\n    // const fetchAllList = async()=>{\r\n    //     const result = await axios.post()\r\n    // }\r\n    function fetchAllList(){\r\n        api.signupAPI().fetchAll()\r\n        .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: ACTIONS.FETCHALL,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n    }\r\n    const addoredit=(values)=>{\r\n    api.signupAPI().create(values)\r\n        .then((response) => {\r\n      console.log(response);\r\n      dispatch({\r\n        type: ACTIONS.CREATE,\r\n        payload: response.data,\r\n      });\r\n      resetform();\r\n    })\r\n    .catch((err) => console.log(err));\r\n        // dispatch({type:ACTIONS.CREATE,payload: {values:values}})\r\n    }\r\n    function resetform(){\r\n        setValues(initialvalues)\r\n    }\r\n    const handleSignupSubmit= async e=>{\r\n        e.preventDefault()\r\n        await axios.post(\"http://localhost:64823/api/Signup/\",values)\r\n    }\r\n    console.log(values)\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSignupSubmit}>\r\n                <div className=\"home-signup1\" id=\"home-signup-id\">\r\n                    <h2 className=\"name-h2\">SignUp Form</h2>\r\n                    <div className=\"signup-form\">\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\" onChange={handleInput} value={values.email}></input>\r\n                        </div>\r\n                        <div className=\"form-group email-div\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobile\" className=\"form-control\" onChange={handleInput} value={values.mobile} ></input>\r\n                        </div>\r\n                        <div className=\"form-group user-div\">\r\n                            <input type=\"text\" placeholder=\"UserName\" name=\"userName\" className=\"form-control\" \r\n                            onChange={handleInput} value={values.userName}></input>\r\n                        </div>\r\n                        <div className=\"form-group password-div\">\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"passWord\" className=\"form-control password-input\" onChange={handleInput} value={values.passWord}></input>\r\n                        </div>\r\n                        <div className=\"form-group submit-div\">\r\n                            <button type=\"submit\" className=\"form-control btn-success\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                {\r\n                    state.list.map(e=>\r\n                        <div key={e.id}>{e.email}</div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\HomeSideSpan.js",["800","801","802","803"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport {Link} from 'react-router-dom'\r\nimport AllProducts from '../MainContext/AllProducts/AllProducts'\r\n\r\nconst veg = \"Veg\"\r\nconst Non = \"Non-Veg\"\r\nconst HomeSideSpan = () => {\r\n    const [i,stI]=useState(0)\r\n    const [clr0,setClr0]=useState(\"\")\r\n    const [bgColor0,setBgcolor0]=useState(\"\")\r\n    const [clr1,setClr1]=useState(\"\")\r\n    const [bgColor1,setBgcolor1]=useState(\"\")\r\n    const [clr2,setClr2]=useState(\"\")\r\n    const [bgColor2,setBgcolor2]=useState(\"\")\r\n    const [clr3,setClr3]=useState(\"\")\r\n    const [bgColor3,setBgcolor3]=useState(\"\")\r\n    useEffect(()=>{\r\n        setBgcolor0(\"rgb(204, 76, 26)\");\r\n        setClr0(\"white\");\r\n    },[])\r\n    const handelClick=(e)=>{\r\n        e.stopPropagation()\r\n        const name=e.target.className\r\n        if(name===\"item-name\")\r\n        {\r\n            setBgcolor0(\"rgb(204, 76, 26)\");\r\n            setClr0(\"white\");\r\n            setBgcolor1(\"\");\r\n            setClr1(\"\");\r\n            setBgcolor2(\"\");\r\n            setClr2(\"\");\r\n            setBgcolor3(\"\");\r\n            setClr3(\"\");\r\n            \r\n        }\r\n        if(name===\"item-name-1\")\r\n        {\r\n            setBgcolor0(\"\")\r\n            setClr0(\"\")\r\n            setBgcolor1(\"rgb(204, 76, 26)\")\r\n            setClr1(\"white\")\r\n            setBgcolor2(\"\")\r\n            setClr2(\"\")\r\n            setBgcolor3(\"\")\r\n            setClr3(\"\");\r\n        }\r\n        if(name===\"item-name-2\")\r\n        {\r\n            setBgcolor0(\"\")\r\n            setClr0(\"\")\r\n            setBgcolor1(\"\")\r\n            setClr1(\"\")\r\n            setBgcolor2(\"rgb(204, 76, 26)\")\r\n            setClr2(\"white\")\r\n            setBgcolor3(\"\")\r\n            setClr3(\"\")\r\n        }\r\n        if(name===\"item-name-3\")\r\n        {\r\n            setBgcolor0(\"\")\r\n            setClr0(\"\")\r\n            setBgcolor1(\"\")\r\n            setClr1(\"\")\r\n            setBgcolor2(\"\")\r\n            setClr2(\"\")\r\n            setBgcolor3(\"rgb(204, 76, 26)\")\r\n            setClr3(\"white\")\r\n        }\r\n            \r\n            // console.log(name)\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"side-span\">\r\n            {/* <div className=\"side-span-items\" style={{backgroundColor:bgColor0}} name=\"zero\" onClick={handelClick}>\r\n                <div className=\"item-pic\"style={{color:bgColor0,backgroundColor:clr0}} ><i className=\"fa fa-fire\" aria-hidden=\"true\"></i></div>\r\n                <div className=\"item-name\" ><label style={{color:clr0}}>TopPicks</label><div className=\"item-options\" style={{color:clr0}}>options</div></div>\r\n            </div> */}\r\n            <Link to=\"./BestOfSevenHills\" style={{color:\"black\",textDecoration:\"none\"}}>\r\n            <div className=\"side-span-items-1\" style={{backgroundColor:bgColor1}} id=\"1\" onClick={handelClick}>\r\n                <div className=\"item-pic-1\" style={{color:bgColor1,backgroundColor:clr1}}><i className=\"fa fa-trophy\" aria-hidden=\"true\"></i></div>\r\n                <div className=\"item-name-1\"><label style={{color:clr1}}>Best of 7 Hills</label><div className=\"item-options-1\" style={{color:clr1}}>options</div></div>\r\n            </div>\r\n            </Link>\r\n            <Link to={`./AllProducts${veg}`} style={{color:\"black\",textDecoration:\"none\"}}>\r\n            <div className=\"side-span-items-2\" style={{backgroundColor:bgColor2}} onClick={handelClick}>\r\n                <div className=\"item-pic-2\" style={{color:bgColor2,backgroundColor:clr2}}><i className=\"fa fa-leaf\" aria-hidden=\"true\"></i></div>\r\n                <div className=\"item-name-2\" ><label style={{color:clr2}}>Vegitarian</label><div className=\"item-options-2\" style={{color:clr2}}>options</div></div>\r\n            </div>\r\n            </Link>\r\n            <Link to={`./AllProducts${Non}`} style={{color:\"black\",textDecoration:\"none\"}}>\r\n            <div className=\"side-span-items-3\" style={{backgroundColor:bgColor3}} onClick={handelClick}>\r\n                <div className=\"item-pic-3\" style={{color:bgColor3,backgroundColor:clr3}}><i className=\"fa fa-cutlery\" aria-hidden=\"true\"></i></div>\r\n                <div className=\"item-name-3\"><label style={{color:clr3}}>Non Vegitarian</label><div className=\"item-options-3\" style={{color:clr3}}>options</div></div>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeSideSpan\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\HomeMainSpan.js",["804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827"],"import React,{useState,useEffect,useMemo} from 'react'\r\nimport Mock from './Mock.json'\r\nimport '../StyleCss/HomeMainSpanCss.scss'\r\nimport UserCart from './UserCart'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PAGE_ITEMS = \"Page_Items\"\r\nconst PAGE_CART = \"Page_Cart\"\r\nconst cartItems = document.querySelector(\".cart-items\");\r\nconst cartTotal = document.querySelector(\".cart-total\");\r\n\r\nconst HomeMainSpan = () => {\r\n    const [search,setSearch]= useState(\"\")\r\n    const [list,setList]=useState([{}])\r\n    const [cart,setCart] = useState([])\r\n    // const [getCart,setGetCart] = useState([{}])\r\n    const [buttonsDOM,setButtonsDOM] =useState([])\r\n    const [buttons,setButtons] =useState([])\r\n    const [page,setPage] = useState(\"Page_Items\")\r\n    const [quantity,setQuantity] = useState(1)\r\n    const [tempTotal,setTempTotal] = useState(0)\r\n    const [itemsTotal,setItemTotal] = useState(0)\r\n    function fetchList(){\r\n        setList(Mock)\r\n    }\r\n    useEffect(()=>{\r\n        fetchList();\r\n        getBagButtons();\r\n    },[])\r\n    const addToCart= (e,data)=>{\r\n        let id= data.id\r\n        let inCart = cart.find((item)=>item.id === id);\r\n        if(inCart)\r\n        {\r\n            e.target.innerText=\"In Cart\"\r\n            e.target.disabled=true\r\n        }\r\n        if(!inCart)\r\n        {\r\n            let cartItem = {...data,amount:1}\r\n            setCart([...cart,{...cartItem}])\r\n        }\r\n            setCartValues(cart)\r\n            SaveCart()\r\n    }\r\n    const SaveCart= ()=>{\r\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\r\n    }\r\n    // const GetCart=()=>{\r\n    //     return localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")):[]\r\n    // }\r\n    // setGetCart()\r\n    // const cartGet = useMemo(()=> JSON.parse(localStorage.getItem(\"cart\")))\r\n    // console.log(cartGet)\r\n    const handleSearch=(e)=>{\r\n        setSearch(e.target.value)\r\n        console.log(search)\r\n    }\r\n    const renderItems = ()=>(\r\n        <>\r\n        <input type=\"search\" icon=\"search\" onChange={(e)=>handleSearch(e)}></input>\r\n        <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            [...Array(Math.ceil(list.length/3))].map((element,index)=>\r\n                            <tr key={index} className=\"home-main-table-row-div\">\r\n                                <td>{imageCard(list[3*index])}</td>\r\n                                <td>{list[3*index+1]?imageCard(list[3*index+1]):null}</td>\r\n                                <td>{list[3*index+2]?imageCard(list[3*index+2]):null}</td>\r\n                            </tr>\r\n                            )}\r\n                            {}\r\n                    </tbody>\r\n                </table>\r\n                </>\r\n    )\r\n    const increaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount= tempItem.amount+1\r\n        SaveCart()\r\n        setCartValues(cart)\r\n    }\r\n    const setCartValues = (cart)=>{\r\n        let tempTotal = 0;\r\n        let itemsTotal = 0;\r\n        cart.map((item)=>{\r\n            setTempTotal(tempTotal += item.price* item.amount)\r\n            setItemTotal(itemsTotal +=item.amount)\r\n        })\r\n        // console.log(tempTotal, itemsTotal);\r\n        // document.querySelector(\".cart-total\").innerText= tempTotal\r\n        // document.querySelector(\".cart-total\").innerText = itemsTotal;\r\n    }\r\n    const decreaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount = tempItem.amount - 1;  \r\n        if(tempItem.amount===0)\r\n        {\r\n            removeItem(id)\r\n        }\r\n        setCartValues(cart)\r\n            SaveCart()\r\n        \r\n    }\r\n    const RemoveFromCart = (item)=>{\r\n        setCart(\r\n            cart.filter(products=>products!==item)\r\n        )\r\n        setCartValues(cart)\r\n    }\r\n    // const renderCarts = ()=>{\r\n    //     <UserCart></UserCart>\r\n    // }\r\n    const renderCart = ()=>(\r\n        <>\r\n        <div className=\"cart-items\">{itemsTotal}</div>\r\n        <table className=\"table\">\r\n            {console.log(cart)}\r\n                    <tbody>\r\n                        {\r\n                            JSON.parse(localStorage.getItem(\"cart\")).map((element,index)=>\r\n                            <tr key={index} className=\"home-main-table-row-div\">\r\n                                <td>\r\n                                    <img src={element.image}></img>\r\n                                    <label>price :{element.price*element.amount}</label>\r\n                                    <button onClick={()=>increaseQuantity(element.id)}>+</button>\r\n                                    {element.amount}\r\n                                    <button onClick={()=>decreaseQuantity(element.id)}>-</button>\r\n                                    <button onClick={()=>RemoveFromCart(element)}>Remove</button>\r\n                                </td>\r\n                            </tr>\r\n                            )}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                        <h3>your total : <span className=\"cart-total\">{tempTotal}</span>Rs/-</h3>\r\n                        {/* <button onClick={()=>SaveCart()}>Proceed</button> */}\r\n                        {/* <button class=\"clear-cart clear-btn\" onClick={()=>clearCart()}>clear cart</button> */}\r\n                </div>\r\n                </>\r\n    )\r\n    // console.log(getCart)\r\n    const clearCart = ()=>{\r\n        let cartItem = cart.map((item)=>item.id);\r\n        cartItem.forEach((id)=>removeItem(id))\r\n    }\r\n    const removeItem = (id)=>{\r\n        cart.filter((item)=>item.id!=id)\r\n        setCartValues(cart)\r\n        setCart()\r\n    }\r\n    \r\n    const navigateTo=(nextPage)=>{\r\n        setPage(nextPage)\r\n    }\r\n    const imageCard= (data)=>{\r\n        if(search !== \"\" && data.price.toString().toLowerCase().indexOf(search.toString().toLowerCase()) === -1)\r\n        {\r\n            return null\r\n        }\r\n        return(\r\n    <div className=\"home-table-image-div\">\r\n        <img src={data.image} className=\"home-table-image\"></img>\r\n        <div className=\"home-table-cart-div\">\r\n            <button className=\"home-table-cart-btn btn btn-light\" onClick={(e)=>addToCart(e,data)}>Add to Cart</button>\r\n        </div>\r\n    </div>\r\n    )}\r\n    // const buttonsDOM =[]\r\n    // const buttons = []\r\n    const getBagButtons=()=>{\r\n        const buttons = [...document.querySelectorAll(\".home-table-cart-btn\")]; // this will turns the nodelist into arrays.\r\n        console.log(buttons)\r\n        const buttonsDOM = [...document.querySelectorAll(\".home-table-cart-btn\")]\r\n        buttons.forEach((button) => {\r\n                        let id = button.dataset.id;\r\n                        let inCart = cart.find((item) => item.id === id);\r\n                        if (inCart) {\r\n                            button.innerText = \"In Cart\";\r\n                            button.disabled = true;\r\n                        }\r\n                    })\r\n    }\r\n    const MainSpan=()=>{\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"home-main-table-first-div\">\r\n                {/* <button onClick={()=>navigateTo(PAGE_CART)}>Cart :{itemsTotal}</button>\r\n                <button onClick={()=>navigateTo(PAGE_ITEMS)}>Items</button>\r\n                {page===PAGE_ITEMS && renderItems()}\r\n                {page===PAGE_CART && renderCart()} */}\r\n                {MainSpan()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeMainSpan\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Contacts.js",["828","829"],"import React,{useState,useEffect} from 'react'\r\nimport api from '../actions/api'\r\nimport Footer from './Footer'\r\nimport '../StyleCss/HomeStyle.scss'\r\n\r\nconst Contacts = () => {\r\n    const [ownerList,setOwnerList] = useState([])\r\n    function fetchAllList(){\r\n        api.ownersAPI().fetchAll().then(res=>{\r\n            setOwnerList(res.data)\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchAllList();\r\n    },[])\r\n    return (\r\n        <>\r\n        {console.log(ownerList)}\r\n            <div className=\"contact-first-div\">\r\n                <h2>7 Hills Restaurant and Bar</h2>\r\n                {\r\n                    ownerList.map((e,index)=>\r\n                    <div className=\"contact-sub-div\" key={index}>\r\n                        <div className=\"contact-image-div\">\r\n                            <img src={e.ownerImageSrc} className=\"owner-image-div\"></img>\r\n                        </div>\r\n                        <h3 className=\"owner-name-div\">{e.ownerName}</h3>\r\n                        <div className=\"owner-email-div\">\r\n                            <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                            <h4 className=\"owner-email-h4\">{e.ownerEmail}</h4>\r\n                        </div>\r\n                        <div className=\"social-media-div\">\r\n                            <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n                            <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n                            <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"developer-first-div\">\r\n                <h1> Developed By </h1>\r\n                <div className=\"developer-second-div\">\r\n                    <div className=\"developer-image-div\">\r\n                        <img src=\"/image/defaultProfile.jpg\" className=\"developer-image\"></img>\r\n                    </div>\r\n                    <div className=\"developer-info\">\r\n                        <h2>Yedla Bharath Reddy</h2>\r\n                        <h3>Web Developer</h3>\r\n                        <h3>Higher Education : Master's Degree</h3>\r\n                        <h4>Contact Details</h4>\r\n                        <h4>Mobile:- +91 8885445442</h4>\r\n                        <h4>Email:- bharathreddy1689@gmail.com</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer></Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndHome.js",["830","831","832","833","834","835"],"import React from 'react'\r\nimport ItemsNewForm from '../ItemsComponents/ItemsNewForm'\r\nimport MenuDetails from '../Menu/MenuDetails'\r\nimport MenuForm from '../Menu/MenuForm'\r\nimport OwnerForm from '../OwnerContact/OwnerForm'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\nimport {Link} from 'react-router-dom'\r\nimport { MainContextConsumer } from '../MainContext/MainContext'\r\nimport BackEndLogin from './BackEndLogin'\r\nconst BackEndHome = () => {\r\n    return(\r\n        <MainContextConsumer>\r\n            {\r\n                value=>\r\n                {\r\n                    console.log(value.isLoggedIn)\r\n                    if(!value.isLoggedIn){\r\n                        return <>\r\n                        <h2>Please Login</h2>\r\n                        <button className=\"btn\" style={{backgroundColor:\"orange\"}}onClick={()=>value.openBackEndLogin()}>Go to Login</button>\r\n                        </>\r\n                    }\r\n                    if(value.isLoggedIn){return (\r\n                        <>\r\n                            <h2>BackEnd Page</h2>\r\n                            <button className=\"btn\" style={{backgroundColor:\"blue\",position:\"realtive\",top:\"-7rem\",position:\"relative\"}} onClick={()=>value.closeIsLoggedIn()}>Log Out</button>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './ItemsSection'>\r\n                                        <label>Items Section</label>\r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './OwnersSection'>\r\n                                        <label>owners Section</label>\r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './MenuSection'>\r\n                                        <label>Menu Section</label>\r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './VegSnacksSection'>\r\n                                        <label>VegSnaks Section</label>\r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './VegCurriesSection'>\r\n                                        <label>VegCurries Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './BiryaniSection'>\r\n                                        <label>Biryani Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './ChickenSnacksSection'>\r\n                                        <label>Chicken Snacks Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './MuttonSnacksSection'>\r\n                                        <label>Mutton Snacks Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './FishPrawnsSnacksSection'>\r\n                                        <label>Fish and Prawns Snacks Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './ChickenCurriesSection'>\r\n                                        <label>Chicken Curries Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './MuttonCurriesSection'>\r\n                                        <label>Mutton Curries Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './TandooriSection'>\r\n                                        <label>Tandoori Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './RotiNaanSection'>\r\n                                        <label>Roti and Naan Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"items-main-div\">\r\n                                    <Link to = './BestOfSevenHillsSection'>\r\n                                        <label>Best of 7 HIlls Section</label>\r\n                                    </Link>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n                \r\n            }\r\n            \r\n        </MainContextConsumer>\r\n    )\r\n}\r\n\r\nexport default BackEndHome\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\UserCart.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ItemsSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\VegSnacksSection.js",["836"],"import React from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\nimport VegSnacksContainer from '../VegSnacks/VegSnacksContainer'\r\nimport VegSnacksForm from '../VegSnacks/VegSnacksForm'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nconst VegSnacksSection = () => {\r\n    return (\r\n        <MainContextConsumer>\r\n            {\r\n                value=>\r\n                {\r\n                    if(!value.isLoggedIn){\r\n                        return <>\r\n                        <h2>Please Login</h2>\r\n                        <button className=\"btn\" style={{backgroundColor:\"orange\"}}onClick={()=>value.openBackEndLogin()}>Go to Login</button>\r\n                        </>\r\n                    }\r\n                    if(value.isLoggedIn){return (\r\n        <>\r\n            <div className=\"vegsnacks-form-main-div\">\r\n                <h2>Veg Snacks Section</h2>\r\n                <div className=\"vegsnacks-form-sub-div\">\r\n                    <div className=\"vegsnacks-from-div\">\r\n                        <VegSnacksContainer></VegSnacksContainer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n                    }\r\n                }\r\n            }\r\n        </MainContextConsumer>\r\n    )\r\n}\r\n\r\nexport default VegSnacksSection\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\OwnersSection.js",["837"],"import React from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\nimport OwnerContainer from '../OwnerContact/OwnerContainer'\r\nimport { OwnerTable } from './OwnerTable'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nconst OwnersSection = () => {\r\n    return (\r\n        <MainContextConsumer>\r\n            {\r\n                value=>\r\n                {\r\n                    if(!value.isLoggedIn){\r\n                        return <>\r\n                        <h2>Please Login</h2>\r\n                        <button className=\"btn\" style={{backgroundColor:\"orange\"}}onClick={()=>value.openBackEndLogin()}>Go to Login</button>\r\n                        </>\r\n                    }\r\n                    if(value.isLoggedIn){return (\r\n        <>\r\n            <div className=\"owner-form-second-div\">\r\n                <h2> Owner Section</h2>\r\n                <div className=\"owner-form-subfirst-div\">\r\n                    <div className=\"owner-form-div\">\r\n                        <OwnerContainer></OwnerContainer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n                    }\r\n                }\r\n            }\r\n        </MainContextConsumer>\r\n    )\r\n}\r\n\r\nexport default OwnersSection\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MenuSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MuttonSnacksSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\VegCurriesSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\FishPrawnsSnacksSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MuttonCurriesSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Signup.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BiryaniSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ChickenCurriesSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\MainSection.js",["838","839","840","841","842","843","844"],"import React,{useEffect} from 'react'\r\nimport BiryaniDetails from '../Biryani/BiryaniDetails'\r\nimport FishPrawnsSnacksDetails from '../FishPrawnsSnacks/FishPrawnsSnacksDetails'\r\nimport ItemDetails from '../ItemsComponents/ItemDetails'\r\nimport MenuDetails from '../Menu/MenuDetails'\r\nimport VegSnacksDetails from '../VegSnacks/VegSnacksDetails'\r\nimport UserCart from './UserCart'\r\nimport BiryaniList from '../Biryani/BiryaniList'\r\nimport ChickenCurriesList from '../ChickenCurries/ChickenCurriesList'\r\nimport VegSnacksList from '../VegSnacks/VegSnacksList'\r\nimport FishPrawnsSnacksList from '../FishPrawnsSnacks/FishPrawnsSnacksList'\r\nimport ChickenSnacksList from '../ChickenSnacks/ChickenSnacksList'\r\nimport VegCurriesList from '../VegCurries/VegCurriesList'\r\nimport MuttonCurriesList from '../MuttonCurries/MuttonCurriesList'\r\nimport MuttonSnacksList from '../MuttonSnacks/MuttonSnacksList'\r\nimport RootiNaanList from '../RotiNaan/RootiNaanList'\r\nimport TandooriList from '../Tandoori/TandooriList'\r\n\r\nconst MainSection = (props) => {\r\n    const UseCart=()=>{\r\n        if(props.match.params.id===\"5\" || props.match.params.id===\"Fish and Prawns Snacks\")\r\n        {\r\n            return (\r\n            <FishPrawnsSnacksList></FishPrawnsSnacksList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"6\" || props.match.params.id=== \"Veg Snacks\")\r\n        {\r\n            return (\r\n                <VegSnacksList></VegSnacksList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"7\" || props.match.params.id=== \"Biryani\")\r\n        {\r\n            return (\r\n            <BiryaniList></BiryaniList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"8\" || props.match.params.id=== \"Chicken Snacks\")\r\n        {\r\n            return (\r\n                <ChickenSnacksList></ChickenSnacksList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"9\" || props.match.params.id === \"Veg Curry\")\r\n        {\r\n            return (\r\n                <VegCurriesList></VegCurriesList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"10\" || props.match.params.id=== \"Chicken Curry\")\r\n        {\r\n            return (\r\n                <ChickenCurriesList></ChickenCurriesList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"11\" || props.match.params.id=== \"Mutton Curry\")\r\n        {\r\n            return (\r\n                <MuttonCurriesList></MuttonCurriesList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"14\" || props.match.params.id=== \"Mutton Snacks & dry\")\r\n        {\r\n            return (\r\n                <MuttonSnacksList></MuttonSnacksList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"16\" || props.match.params.id=== \"Roti Naan\")\r\n        {\r\n            return (\r\n                <RootiNaanList></RootiNaanList>\r\n            )\r\n        }\r\n        if(props.match.params.id===\"17\" || props.match.params.id=== \"Tandoori Items\")\r\n        {\r\n            return (\r\n                <TandooriList></TandooriList>\r\n            )\r\n        }\r\n    }\r\n        \r\n    \r\n    return (\r\n        <>\r\n            {UseCart()}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainSection\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\TandooriSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\RotiNaanSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\Default.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainProductDetails.js",["845"],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndSuccess.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainOrderDetails.js",["846"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {MainContextConsumer} from './MainContext'\r\nimport '../StyleCss/HomeStyle.scss'\r\nimport OrderDetails from './OrderDetails'\r\n\r\nexport default class MainOrderDetails extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {value=>{\r\n                    // console.log(value)\r\n                    return value.orderDetails.map((item,index)=>{\r\n                        return <OrderDetails key={index} item={item}></OrderDetails>\r\n                    })\r\n                    }}\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BestOfSevenHillsSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\GlobalFiltering.js",["847","848"],"import React , {useState}from 'react'\r\nimport {useAsyncDebounce} from 'react-table'\r\n\r\nexport const GlobalFiltering = ({filter,setFilter}) => {\r\n    const [value,setValue] = useState(filter)\r\n    const onChange = useAsyncDebounce(value=>{\r\n        setFilter(value||undefined)\r\n    },1000)\r\n    return (\r\n        <span>\r\n            Search:{' '}\r\n            <input value={value || ''} onChange={(e)=>{\r\n                {setValue(e.target.value)}\r\n                {onChange(e.target.value)}\r\n            }}></input>\r\n        </span>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\BackEndLogin.js",["849","850"],"import React, { useState } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\nimport '../StyleCss/HomeStyle.scss'\r\n\r\nconst initialvalues = {\r\n    user:\"\",\r\n    password:\"\"\r\n}\r\n\r\nconst BackEndLogin=()=> {\r\n    const [BackEndInitialValues,setBackEndInitialValues] = useState(initialvalues)\r\n    const handleBackendFormChange=(e)=>{\r\n        setBackEndInitialValues({\r\n            ...BackEndInitialValues,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const handleBackEndLoginSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(BackEndInitialValues.user===\"user\" && BackEndInitialValues.password === \"root\")\r\n        {\r\n            window.alert(\"logged in successfully\")\r\n        }\r\n        else{\r\n            window.alert(\"username or password is wrong\")\r\n        }\r\n    }\r\n        return(\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        // console.log(value.openBackEnd)\r\n                        // console.log(value.BackEndInitialValues)\r\n                        if(!value.openBackEnd)\r\n                        {\r\n                            return null\r\n                        }\r\n                        if(value.openBackEnd){return(\r\n                            <>\r\n                            <div className=\"modal-login-main-div\">\r\n                                <div className=\"modal-login-sub-div\">\r\n                                    <h5>Please Login</h5>\r\n                                <i className=\"fa fa-times\" onClick={()=>value.closeBackEndLogin()}></i>\r\n                                <form autoComplete=\"off\" noValidate onSubmit={(e)=>value.handleBackEndLoginSubmit(e)}>\r\n                                <div className=\"form-group login-user-div\">\r\n                                    <label className=\"login-user-label\">User Name</label>\r\n                                    <input type=\"text\" required name=\"user\" placeholder=\"User Name\" className=\"form-control\" onChange={(e)=>value.handleBackendFormChange(e)}></input>\r\n                                </div>\r\n                                <div className=\"form-group login-password-div\">\r\n                                    <label className=\"login-password-label\">Password</label>\r\n                                    <input type=\"password\" required name=\"password\" placeholder=\"Password\" onChange={(e)=>value.handleBackendFormChange(e)} className=\"form-control\"></input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn\" style={{backgroundColor:\"orange\",position:\"relative\",left:\"2rem\"}} type=\"submit\">Log in</button>\r\n                                </div>\r\n                            </form>\r\n                            </div>\r\n                            </div>\r\n                            </>\r\n                        )\r\n                        }\r\n                    }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n}\r\nexport default BackEndLogin\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\ColumnFiltering.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ItemTable.js",["851","852","853","854","855","856","857","858","859"],"import React,{useMemo,useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/TableStyleCss.scss'\r\nimport {useTable, useSortBy, useGlobalFilter,useFilters,usePagination} from 'react-table'\r\nimport {TableHeaderColumn} from './TableHeaderColumn'\r\nimport { ColumnFiltering } from '../Table/ColumnFiltering'\r\n\r\nexport const ItemTable = () => {\r\n    const [list,setList] = useState([{}])\r\n    function fetchList(){\r\n    api.itemsAPI().fetchAll().then(res=>{\r\n        setList(res.data)\r\n        }\r\n    )\r\n    .catch(err=>console.log(err))\r\n}\r\nuseEffect(()=>{\r\n    fetchList();\r\n},[])\r\n    const columns = useMemo(()=>TableHeaderColumn,[])\r\n    const data = useMemo(()=>list,[])\r\n    const defaultColumn= useMemo(()=>{\r\n        return {\r\n            Filter: ColumnFiltering\r\n        }\r\n    },[])\r\n    const tableInstance = useTable({\r\n        columns,data,defaultColumn\r\n    },useFilters,useSortBy,usePagination)\r\n    const {getTableProps, getTableBodyProps,headerGroups,page,nextPage,previousPage,canPreviousPage,canNextPage,pageOptions,gotoPage,pageCount,setPageSize,rows,prepareRow,footerGroups,state,getSortByToggleProps} = tableInstance\r\n    const { pageIndex, pageSize } = state\r\n    return (\r\n        <>\r\n        {/* {console.log(list)} */}\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {\r\n                    headerGroups.map((headerGroup)=>(\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map((column)=>(\r\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                        {column.render(\"Header\")} {\"   \"}<i className=\"fa fa-arrow-down\"></i>\r\n                                        <span>\r\n                                            {column.isSorted ? (column.isSortedDesc ? 'desc':'asc'):''}\r\n                                        </span>\r\n                                        <div>\r\n                                            {column.canFilter ? column.render('Filter'):null}\r\n                                        </div>\r\n                                    </th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row)=>{\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell)=>{\r\n                                    return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n        <div>\r\n            <button onClick={()=>gotoPage(0)} disabled={!canPreviousPage}>{\"<<\"}</button>\r\n            <button onClick={()=>previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n            <button onClick={()=>nextPage()} disabled={!canNextPage}>Next</button>\r\n            <button onClick={()=>gotoPage(pageCount-1)} disabled={!canNextPage}>{\">>\"}</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\ChickenSnacksSection.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\PrintOrderForm.js",["860","861"],"import React, { PureComponent } from 'react'\r\nimport {MainContextConsumer} from './MainContext'\r\nimport ReactToPrint from 'react-to-print-advanced'\r\n\r\nclass PrintOrderForm extends PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n            \r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return value.cart.map((e,index)=>(\r\n                            <div key={e.id}>\r\n                            <div className=\"main-section-item-main-card\">\r\n                            <img src={e.imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                            <div className=\"main-section-item-main-card-body\">\r\n                                <h2 className=\"cart-name\">{e.name}</h2>\r\n                                <h4 className=\"cart-price\">Price: {e.price}{` Rs/-`}</h4>\r\n                                <h2 className=\"cart-tot\">Total: {e.total}</h2>\r\n                            </div>\r\n                                <button className=\"btn btn-dec\"><i className=\"fa fa-minus\"></i></button>\r\n                                <h2 className=\"cart-quantity\">{e.count}</h2>\r\n                                <button className=\"btn btn-inc\"><i className=\"fa fa-plus\"></i></button>\r\n                                <button className=\"main-section-item-main-btn btn\">\r\n                                    Remove\r\n                                </button>\r\n                        </div>\r\n                        </div>\r\n                        ))\r\n                    }\r\n                }\r\n            </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{display:\"none\"}}>\r\n        <PrintOrderForm ref={(el) => (this.componentRef = el)} />\r\n        </div>\r\n        <ReactToPrint\r\n        content={() => this.componentRef}\r\n          trigger={() => <a href=\"#\">Print It</a>}\r\n          \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\ItemDetail5.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\CardComponents\\Data.js",["862","863","864"],"import React from 'react'\r\nimport '../StyleCss/ItemContainer.scss'\r\n\r\nconst Data = ({props,i}) => {\r\n    const {a:{itemId,imageSrc,itemName, price},} = {a:props}\r\n    const {index} = {index:i}\r\n    // console.log(index)\r\n    return (\r\n        <div id={`card-${index}`} className=\"Card\">\r\n            <img src={imageSrc} className=\"img-container\" id={`Name: ${itemName}`} autoFocus={true}></img>\r\n        </div>\r\n    )\r\n}\r\nexport default Data\r\n\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\DummyCart\\AddCart.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Table\\Columns.js",["865"],"import {ColumnFiltering} from './ColumnFiltering'\r\nexport const Columns=[\r\n    {Header:\"Id\",Footer:\"Id\",accessor:\"id\"},\r\n    {Header:\"First Name\",Footer:\"First Name\",accessor:\"first_name\"},\r\n    {Header:\"Last Name\",Footer:\"Last Name\",accessor:\"last_name\"},\r\n    {Header:\"Gender\",Footer:\"Gender\",accessor:\"gender\"},\r\n    {Header:\"Date of Birth\",Footer:\"Date of Birth\",accessor:\"data_of_birth\"}\r\n]\r\n\r\nexport const GroupedColumns=[\r\n    {Header:\"Id\",Footer:\"Id\",accessor:\"id\",disableFilters:true},\r\n    {\r\n        Header:\"Name\",\r\n        Footer:\"Name\",\r\n        columns:[\r\n            {Header:\"First Name\",Footer:\"First Name\",accessor:\"first_name\"},\r\n            {Header:\"Last Name\",Footer:\"Last Name\",accessor:\"last_name\"},\r\n        ]\r\n    },\r\n    {\r\n        Header:\"Info\",\r\n        Footer:\"Info\",\r\n        columns:[\r\n            {Header:\"Gender\",Footer:\"Gender\",accessor:\"gender\"},\r\n            {Header:\"Date of Birth\",Footer:\"Date of Birth\",accessor:\"data_of_birth\"}\r\n        ]\r\n    }\r\n]","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerContainer.js",["866"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport OwnerForm from './OwnerForm'\r\n\r\n\r\nfunction OwnerContainer() {\r\n    const [ownerList,setOwnerList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const insertOrUpdate=(formData,onSuccess)=>{\r\n        if(formData.get('ownerId')===\"0\"){\r\n            api.ownersAPI().create(formData).then(res=>{\r\n            fetchAllList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.ownersAPI().update(formData.get('ownerId'),formData).then(res=>{\r\n                fetchAllList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    function fetchAllList(){\r\n        api.ownersAPI().fetchAll().then(res=>{\r\n            setOwnerList(res.data)\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchAllList();\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.ownersAPI().delete(id).then(res=>fetchAllList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"19rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.ownerImageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.ownerName}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.ownerEmail}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.ownerUserName}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.ownerId))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <React.Fragment>\r\n            <>\r\n                    <OwnerForm insertOrUpdate={insertOrUpdate} recordForEdit={recordForEdit}></OwnerForm>\r\n                <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n                <h3>List of Items :{ownerList.length}</h3>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            {\r\n                                ownerList && [...Array(Math.ceil(ownerList.length/4))].map((element,index)=>\r\n                                <tr key={index}>\r\n                                    <td  style={{border:\"none\"}}>{imageCard(ownerList[4*index])}</td>\r\n                                    <td  style={{border:\"none\"}}>{ownerList[4*index+1]?imageCard(ownerList[4*index+1]):null}</td>\r\n                                    <td  style={{border:\"none\"}}>{ownerList[4*index+2]?imageCard(ownerList[4*index+2]):null}</td>\r\n                                    <td  style={{border:\"none\"}}>{ownerList[4*index+3]?imageCard(ownerList[4*index+3]):null}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default OwnerContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\Cart.js",["867","868","869","870"],"import React, { Component } from 'react'\r\nimport { MainContextConsumer } from '../MainContext'\r\nimport MainCartColumn from '../MainCart/MainCartColumn'\r\nimport MainCartList from '../MainCart/MainCartList'\r\nimport MainCartEmpty from '../MainCart/MainCartEmpty'\r\nimport MainCartTotal from '../MainCart/MainCartTotals'\r\nimport MainCartProceed from '../MainCart/MainCartProceed'\r\nimport { ChickenCurriesContextConsumer } from '../ChickenCurriesContext'\r\nimport ChickenCurriesCartList from '../ChickenCurriesCart/ChickenCurriesCartList'\r\nimport ChickenCurriesCartTotal from '../ChickenCurriesCart/ChickenCurriesCartTotal'\r\nimport ChickenCurriesCartEmpty from '../ChickenCurriesCart/ChickenCurriesCartEmpty'\r\n\r\nexport default class Cart extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            {/* <ChickenCurriesContextConsumer>\r\n                {value=>{\r\n                    const {cart}= value\r\n                    if(cart.length>0){\r\n                        return(\r\n                            <>\r\n                            <ChickenCurriesCartList value={value}></ChickenCurriesCartList>\r\n                            <ChickenCurriesCartTotal value={value}></ChickenCurriesCartTotal>\r\n                            </>\r\n                        )\r\n                    }else{\r\n                            return(\r\n                            <>\r\n                            <ChickenCurriesCartEmpty></ChickenCurriesCartEmpty>\r\n                            </>\r\n                            )\r\n                        }\r\n                }}\r\n            </ChickenCurriesContextConsumer> */}\r\n            <MainContextConsumer>\r\n                {value=>{\r\n                    const {cart} = value\r\n                    if(cart.length>0){\r\n                        return (\r\n                            <>\r\n                                <MainCartColumn/>\r\n                                <MainCartList value={value}></MainCartList>\r\n                                <MainCartTotal value={value}></MainCartTotal>\r\n                                <MainCartProceed value={value}></MainCartProceed>\r\n                            </>\r\n                        )\r\n                    }\r\n                    else{\r\n                            return(\r\n                            <>\r\n                            <MainCartEmpty></MainCartEmpty>\r\n                            </>\r\n                            )\r\n                        }\r\n                }\r\n                }\r\n            </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\IndexDOM.js",["871","872","873","874","875"],"import React, { Component } from 'react'\r\nimport '../StyleCss/IndexDOM.scss'\r\nimport api from '../actions/api'\r\nimport  MainCard  from './MainCard'\r\nimport MainData from './MainData'\r\n\r\nclass IndexDOM extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            count:0,\r\n            index:0,\r\n            list:[{itemId:0,itemName:\"\",price:0,imageSrc:\"\"}],\r\n        }\r\n    }\r\n    \r\n    mainElementClickHandler = ()=>{\r\n        if(this.state.count%2===0)\r\n        {\r\n        document.getElementById(\"sub-container\").style.display=\"block\"\r\n        }\r\n        else{\r\n        document.getElementById(\"sub-container\").style.display=\"none\"\r\n        }\r\n        this.setState({\r\n            count:this.state.count+1\r\n        })\r\n    }\r\n    fetchList(){\r\n        api.itemsAPI().fetchAll().then(res=>{\r\n            this.setState({\r\n            list:[...res.data],\r\n        })\r\n    }).catch(err=>console.log(err))\r\n}\r\n\r\n    componentDidMount(){\r\n        this.fetchList()\r\n    }\r\n    resetImage=()=>{\r\n        let slideImage = document.querySelectorAll('.element-course-container');\r\n        for(let i =0;i<slideImage;i++)\r\n        {\r\n            slideImage[i].style.display=\"none\";\r\n        }\r\n    }\r\n    handleSlideClick=()=>{\r\n        var x= document.getElementById('handle-div-id');\r\n        var y = x.getElementsByClassName(\"element-course-container\");\r\n        var i;\r\n        for(i=0;i<y.length;i++)\r\n        {\r\n            y[i].style.left=\"-25rem\"\r\n        }\r\n        console.log(y.length)\r\n    }\r\n    handleNextClick =()=>{\r\n        this.setState({\r\n            index:this.state.index+1\r\n        })\r\n    }\r\n    \r\n    render() {\r\n    //     const {a:{itemName}} ={a:this.state.list[0]}\r\n    // console.log(itemName)\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"main-course-container\">\r\n                    <div className=\"main-course-slider\">\r\n                        <MainData></MainData>\r\n                            {/* {\r\n                                this.state.list.map((element,index)=>(\r\n                                    <div key={this.state.list.itemId}>\r\n                                        <div className=\"element-course-container\" id=\"handle-slide-id\">\r\n                                            <div className=\"element-img-course-container\">\r\n                                                <img src={element.imageSrc} alt=\"Birayni\" className=\"img-Biryani\" onClick={this.mainElementClickHandler}></img>\r\n                                                <h2 id=\"img-name\">{element.itemName}</h2>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            } */}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={()=>this.handleNextClick}>Next</button>\r\n                </div>\r\n                <div className=\"sub-course-container\" id=\"sub-container\">\r\n                            <table>\r\n                                <tbody>\r\n                                    {\r\n                                        [...Array(Math.ceil(this.state.list.length/4))]\r\n                                        .map((element,index)=>\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <div className=\"subelement-course-container\">\r\n                                                    <img src={this.state.list[4*index].imageSrc}></img>\r\n                                                </div>\r\n                                            \r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"subelement-course-container\">\r\n                                                    <img src={this.state.list[4*index+1]?this.state.list[4*index+1].imageSrc:null}></img>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"subelement-course-container\">\r\n                                                    <img src={this.state.list[4*index+2]?this.state.list[4*index+2].imageSrc:null}></img>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"subelement-course-container\">\r\n                                                    <img src={this.state.list[4*index+3]?this.state.list[4*index+3].imageSrc:null}></img>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexDOM\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllProducts.js",["876"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\nimport '../../StyleCss/HomeMainSpanCss.scss'\r\nimport AllBiryaniProducts from './AllBiryaniProducts'\r\nimport AllChickenCurriesProducts from './AllChickenCurriesProducts'\r\nimport AllVegCurriesProducts from './AllVegCurriesProducts'\r\nimport AllVegSnacksProducts from './AllVegSnacksProducts'\r\nimport AllChickenSnacksProducts from './AllChickenSnacksProducts'\r\nimport AllMuttonCurryProducts from './AllMuttonCurryProducts'\r\nimport AllMuttonSnacksProducts from './AllMuttonSnacksProducts'\r\nimport AllRotiNaanProducts from './AllRotiNaanProducts'\r\nimport AllTandooriProducts from './AllTandooriProducts'\r\nimport AllFishPrawnsSnacksProducts from './AllFishPrawnsSnacksProducts'\r\n\r\nexport default class AllProducts extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            {/* {console.log(this.props)} */}\r\n                {\r\n                    this.props.match.params.id===\"Non-Veg\"? <h2>7 Hills Non-Vegetarian Section</h2>:<h2>7 Hills Vegetarian Section</h2>\r\n                }\r\n            <div style={{position:\"relative\",display:\"flex\"}}>\r\n                    <AllBiryaniProducts id={this.props.match.params.id}></AllBiryaniProducts>\r\n                    <AllChickenCurriesProducts id={this.props.match.params.id}></AllChickenCurriesProducts>\r\n                    <AllVegCurriesProducts id={this.props.match.params.id}></AllVegCurriesProducts>\r\n                    <AllVegSnacksProducts id={this.props.match.params.id}></AllVegSnacksProducts>\r\n                    <AllChickenSnacksProducts id={this.props.match.params.id}></AllChickenSnacksProducts>\r\n                    <AllMuttonCurryProducts id={this.props.match.params.id}></AllMuttonCurryProducts>\r\n                    <AllMuttonSnacksProducts id={this.props.match.params.id}></AllMuttonSnacksProducts>\r\n                    <AllRotiNaanProducts id={this.props.match.params.id}></AllRotiNaanProducts>\r\n                    <AllTandooriProducts id={this.props.match.params.id}></AllTandooriProducts>\r\n                    <AllFishPrawnsSnacksProducts id={this.props.match.params.id}></AllFishPrawnsSnacksProducts>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestOfSevenHillsList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\MainData.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\context\\CartItem.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\OwnerContact\\OwnerForm.js",["877","878"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/OwnerStyleSheet.css'\r\n\r\nconst defaultImageSrc= \"/image/defaultProfile.jpg\"\r\n\r\nconst initialOwnervalues ={\r\n    ownerId:0,\r\n    ownerName:\"\",\r\n    ownerUserName:\"\",\r\n    ownerPassword:\"\",\r\n    ownerEmail:\"\",\r\n    ownerAdress:\"\",\r\n    ownerImage:\"\",\r\n    ownerImageFile:null,\r\n    ownerImageSrc:defaultImageSrc\r\n}\r\nconst initiallabelstylevalues={\r\n    top: \"\",\r\n    left: \"\",\r\n    backgroundColor: \"\",\r\n    fontWeight:\"\",\r\n    opacity:\"\",\r\n    border:\"\",\r\n    transform:\"\"\r\n}\r\n\r\nfunction OwnerForm(props) {\r\n\r\n    const [values,setValues] = useState(initialOwnervalues)\r\n    const [top,setTop] = useState(initiallabelstylevalues)\r\n    const [topOne,setTopOne] = useState(initiallabelstylevalues)\r\n    const [topTwo,setTopTwo] = useState(initiallabelstylevalues)\r\n    const [topThree,setTopThree] = useState(initiallabelstylevalues)\r\n    const [topFour,setTopFour] = useState(initiallabelstylevalues)\r\n    const [errors,setErrors] = useState({})\r\n    const {insertOrUpdate,recordForEdit} = props\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const ShowPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0]){\r\n            let ownerImageFile=e.target.files[0]\r\n            const reader = new FileReader()\r\n            reader.onload=(o)=>{\r\n                setValues({\r\n                    ...values,\r\n                    ownerImageFile,\r\n                    ownerImageSrc:o.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(ownerImageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                ownerImageFile:null,\r\n                ownerImageSrc:defaultImageSrc,\r\n            })\r\n        }\r\n    }\r\n    const handleInputClick=(e)=>{\r\n        const {name,value}= e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n    const handleInputChange=(e)=>{\r\n            e.target.result=setTop({\r\n            top: \"-5rem\",\r\n            left: \"2rem\",\r\n            backgroundColor: \"white\",\r\n            fontWeight:\"900\",\r\n            opacity:\"1\",\r\n            border:\"1px solid blue\",\r\n            transform:\"scale(0.9)\"\r\n        })\r\n    }\r\n    const handleBlurClick=(e)=>{\r\n        if(e.target.value===\"\"){\r\n        setTop(initiallabelstylevalues)\r\n    }\r\n    }\r\n    \r\n    const handleInputChangeOne= (e)=>{\r\n            setTopOne({\r\n            top: \"-5rem\",\r\n            left: \"2rem\",\r\n            backgroundColor: \"white\",\r\n            fontWeight:\"900\",\r\n            opacity:\"1\",\r\n            border:\"1px solid blue\",\r\n            transform:\"scale(0.9)\"\r\n        })\r\n    }\r\n    const handleBlurClickOne=(e)=>{\r\n        if(e.target.value===\"\"){\r\n        setTopOne(initiallabelstylevalues)\r\n    }\r\n    }\r\n\r\n    const handleInputChangeTwo= (e)=>{\r\n            setTopTwo({\r\n            top: \"-5rem\",\r\n            left: \"2rem\",\r\n            backgroundColor: \"white\",\r\n            fontWeight:\"900\",\r\n            opacity:\"1\",\r\n            border:\"1px solid blue\",\r\n            transform:\"scale(0.9)\"\r\n        })\r\n    }\r\n    const handleBlurClickTwo=(e)=>{\r\n        if(e.target.value===\"\"){\r\n        setTopTwo(initiallabelstylevalues)\r\n    }\r\n    }\r\n\r\n    const handleInputChangeThree= (e)=>{\r\n            setTopThree({\r\n            top: \"-5rem\",\r\n            left: \"2rem\",\r\n            backgroundColor: \"white\",\r\n            fontWeight:\"900\",\r\n            opacity:\"1\",\r\n            border:\"1px solid blue\",\r\n            transform:\"scale(0.9)\"\r\n        })\r\n    }\r\n    const handleBlurClickThree=(e)=>{\r\n        if(e.target.value===\"\"){\r\n        setTopThree(initiallabelstylevalues)\r\n    }\r\n    }\r\n\r\n    const handleInputChangeFour= (e)=>{\r\n            setTopFour({\r\n            top: \"-6rem\",\r\n            left: \"2rem\",\r\n            backgroundColor: \"white\",\r\n            fontWeight:\"900\",\r\n            opacity:\"1\",\r\n            border:\"1px solid blue\",\r\n            transform:\"scale(0.9)\"\r\n        })\r\n        \r\n    }\r\n    const handleBlurClickFour=(e)=>{\r\n        if(e.target.value===\"\"){\r\n        setTopFour(initiallabelstylevalues)\r\n    }\r\n    }\r\n    const validate=(fieldValues = values)=>{\r\n        let tempErrors={...errors};\r\n        if(\"ownerName\" in fieldValues){\r\n            tempErrors.ownerName = fieldValues.ownerName ?\"\":\"This Field is Required\"\r\n        }\r\n        setErrors({\r\n            ...tempErrors\r\n        })\r\n        if(fieldValues === values)\r\n        {\r\n            return Object.values(tempErrors).every((x)=>x===\"\")\r\n        }\r\n        \r\n        // tempErrors.ownerUserName=fieldValues.ownerUserName===\"\"?\"This Field is Required\"\r\n    }\r\n    const handelOwnerFormSubmit = (e)=>{\r\n        e.preventDefault()\r\n        console.log(values);\r\n        // if(validate())\r\n        // {\r\n            const formdata = new FormData();\r\n            formdata.append(\"ownerId\",values.ownerId)\r\n            formdata.append(\"ownerName\",values.ownerName)\r\n            formdata.append(\"ownerUserName\",values.ownerUserName)\r\n            formdata.append(\"ownerPassword\",values.ownerPassword)\r\n            formdata.append(\"ownerEmail\",values.ownerEmail)\r\n            formdata.append(\"ownerAdress\",values.ownerAdress)\r\n            formdata.append(\"ownerImage\",values.ownerImage)\r\n            formdata.append(\"ownerImageFile\",values.ownerImageFile)\r\n            insertOrUpdate(formdata,resetForm)\r\n        // }\r\n    }\r\n    const resetForm=()=>{\r\n        setValues(initialOwnervalues)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"\">\r\n                <div className=\"\">\r\n                    <form autoComplete=\"off\" noValidate onSubmit={handelOwnerFormSubmit}>\r\n                        <div className=\"card\">\r\n                            <img className=\"card-img-top\" src={values.ownerImageSrc} style={{height:\"15rem\"}}></img>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"file\" className=\"form-control-file\" accept=\"image/*\" name=\"ownerImage\" onChange={ShowPreview} ></input>\r\n                                </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control input-control\" type=\"text\" name=\"ownerName\" value={values.ownerName}\r\n                                onClick={handleInputChange} onChange={handleInputClick} onBlur={handleBlurClick} \r\n                                ></input>\r\n                                <label className=\"labeling-control\" style={{top:top.top,left:top.left,backgroundColor:top.backgroundColor,\r\n                                fontWeight: top.fontWeight,opacity: 1,transform:top.transform ,border: top.border,}}>Owner Name</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control input-control\" type=\"text\" name=\"ownerUserName\" value={values.owneruserName}\r\n                                onClick={handleInputChangeOne} onChange={handleInputClick} onBlur={handleBlurClickOne} \r\n                                ></input>\r\n                                <label className=\"labeling-control\" style={{top:topOne.top,left:topOne.left,backgroundColor:topOne.backgroundColor,\r\n                                fontWeight: topOne.fontWeight,opacity: 1,transform:topOne.transform ,border: topOne.border,}}>Owner UserName</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control input-control\" type=\"text\" name=\"ownerPassword\" value={values.ownerPassword}\r\n                                onChange={handleInputClick} onClick={handleInputChangeTwo} onBlur={handleBlurClickTwo}\r\n                                ></input>\r\n                                <label className=\"labeling-control\" style={{top:topTwo.top,left:topTwo.left,backgroundColor:topTwo.backgroundColor,\r\n                                fontWeight: topTwo.fontWeight,opacity: 1,transform:topTwo.transform ,border: topTwo.border,}}>Owner Password</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control input-control\" type=\"text\" name=\"ownerEmail\" value={values.ownerEmail}\r\n                                onChange={handleInputClick} onClick={handleInputChangeThree} onBlur={handleBlurClickThree}\r\n                                ></input>\r\n                                <label className=\"labeling-control\" style={{\r\n                                    top:topThree.top,left:topThree.left,backgroundColor:topThree.backgroundColor,\r\n                                    fontWeight: topThree.fontWeight,opacity: 1,transform:topThree.transform ,border: topThree.border,\r\n                                    }}\r\n                                    >Owner Email</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control input-control\" type=\"text\" name=\"ownerAdress\" value={values.ownerAdress}\r\n                                onClick={handleInputChangeFour} onChange={handleInputClick} onBlur={handleBlurClickFour}\r\n                                ></textarea>\r\n                                <label className=\"labeling-control\" style={{\r\n                                    top:topFour.top,left:topFour.left,backgroundColor:topFour.backgroundColor,\r\n                                    fontWeight: topFour.fontWeight,opacity: 1,transform:topFour.transform ,border: topFour.border,\r\n                                    }}\r\n                                    >Owner Adress</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}> Save</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default OwnerForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\OwnerTable.js",["879","880","881","882","883"],"import React,{useMemo,useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/TableStyleCss.scss'\r\nimport {useTable, useSortBy, useGlobalFilter,useFilters,usePagination} from 'react-table'\r\nimport {TableHeaderOwnerColumn} from './TableHeaderColumn'\r\nimport { ColumnFiltering } from '../Table/ColumnFiltering'\r\n\r\nexport const OwnerTable = () => {\r\n    const [ownerList,setOwnerList] = useState([])\r\n\r\n    function fetchAllList(){\r\n        api.ownersAPI().fetchAll().then(res=>{\r\n            setOwnerList(res.data)\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchAllList()\r\n    },[])\r\n    const columns = useMemo(()=>TableHeaderOwnerColumn,[])\r\n    const data = useMemo(()=>ownerList,[])\r\n    const tableInstance = useTable({\r\n        columns,data\r\n    },useSortBy,usePagination)\r\n    const {getTableProps,getTableBodyProps,headerGroups,rows,prepareRow,state} = tableInstance\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {\r\n                        headerGroups.map((headerGroup)=>(\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    headerGroup.headers.map((column)=>(\r\n                                        <th {...column.getHeaderProps()}>\r\n                                            {column.render(\"Header\")}\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        rows.map((row)=>{\r\n                            prepareRow(row)\r\n                            return(\r\n                                <tr {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map((cell)=>{\r\n                                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\OrderDetails.js",["884","885","886","887","888"],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Home\\TableHeaderColumn.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestContainer.js",["889"],"import React,{useState,useEffect} from 'react'\r\nimport BestForm from '../BestOfSevenHills/BestForm'\r\nimport api from '../actions/api'\r\n\r\nconst BestContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.bestofsevenhillsAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.bestofsevenhillsAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.bestofsevenhillsAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.bestofsevenhillsAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <BestForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></BestForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BestContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksContainer.js",["890"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport VegSnacksForm from './VegSnacksForm'\r\n\r\nconst VegSnacksContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.vegsnacksAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.vegsnacksAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.vegsnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.vegsnacksAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n            <VegSnacksForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></VegSnacksForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VegSnacksContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksDetails.js",["891","892","893","894","895","896","897"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/MainSectionStyle.scss'\r\nimport ItemsCart from '../ItemsCart/ItemsCart'\r\n\r\nconst VegSnacksDetails = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [cart,setCart] = useState([])\r\n    const [tempTotal,setTempTotal] = useState(0)\r\n    const [itemsTotal,setItemTotal] = useState(0)\r\n    useEffect(()=>{\r\n        fetchList()\r\n    })\r\n    const fetchList =()=>{\r\n        api.vegsnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    const addToCart= (e,data)=>{\r\n        let id= data.id\r\n        let inCart = cart.find((item)=>item.id === id);\r\n        if(inCart)\r\n        {\r\n            e.target.innerText=\"In Cart\"\r\n            e.target.disabled=true\r\n        }\r\n        if(!inCart){\r\n            let cartItem = {...data,amount:1}\r\n            setCart([...cart,{...cartItem}])\r\n        }\r\n            setCartValues()\r\n            SaveCart()\r\n    }\r\n    const setCartValues = ()=>{\r\n        let tempTotal = 0;\r\n        let itemsTotal = 0;\r\n        cart.map((item)=>{\r\n            setTempTotal(tempTotal += item.price* item.amount)\r\n            setItemTotal(itemsTotal +=item.amount)\r\n        })\r\n    }\r\n    const SaveCart= ()=>{\r\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\r\n    }\r\n    const getCart = ()=>{\r\n        const Incart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        // console.log(Incart)\r\n    } \r\n    const increaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount= tempItem.amount+1\r\n        SaveCart()\r\n        setCartValues()\r\n    }\r\n    const decreaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount = tempItem.amount - 1;  \r\n        if(tempItem.amount===0)\r\n        {\r\n            // removeItem(id)\r\n        }\r\n        setCartValues()\r\n            SaveCart()\r\n        \r\n    }\r\n    const removeItem = (data)=>{\r\n        let id= data.id\r\n        cart.filter((item)=>item.id!=id)\r\n        \r\n            setCart([...cart])\r\n        \r\n        setCartValues()\r\n        setCart()\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"main-section-item-main-card\">\r\n        <img src={data.imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n        <div className=\"main-section-item-main-card-body\">\r\n            <h2>{data.name}</h2>\r\n            <h4>{data.price}{` Rs/-`}</h4>\r\n            <h4>{data.section}</h4>\r\n            <button className=\"main-section-item-main-card-btn btn\" onClick={(e)=>addToCart(e,data)}>ADD</button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <h2>7 Hills Veg Snacks</h2>\r\n            <div className=\"main-section-item-main-div\">\r\n            {/* <h3>List of Items :{list.length}</h3> */}\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[index])}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"main-section-incart-items-main-div\">\r\n                <div className=\"item-cart-main-div\">\r\n                    <h2>Your Cart Items</h2>\r\n                    <div className=\"cart-items\">{itemsTotal}</div>\r\n                        {/* {console.log(cart)} */}\r\n                        {\r\n                            cart && cart.map((element,index)=>\r\n                            <div key={index} className=\"cart-main-div\">\r\n                                    \r\n                                    <img src={element.imageSrc} className=\"cart-img-div\"></img>\r\n                                    <h3>{element.name}</h3>\r\n                                    <h4>Price: {`${element.price*element.amount} Rs/-`}</h4>\r\n                                    <button onClick={()=>increaseQuantity(element.id)} className=\"btn btnPlus\"><i className=\"fa fa-plus\"></i></button>\r\n                                    <label>{element.amount}</label>\r\n                                    <button onClick={()=>decreaseQuantity(element.id)} className=\"btn btnMinus\"><i className=\"fa fa-minus\"></i></button>\r\n                                    <button className=\"btn btnDelete\" onClick={()=>{removeItem(element)}}>Delete</button>\r\n                                    {/* <button onClick={()=>RemoveFromCart(element)}>Remove</button> */}\r\n                            </div>\r\n                            )}\r\n                    <div>\r\n                            <h3>your total : <span className=\"cart-total\">{tempTotal}</span>Rs/-</h3>\r\n                    </div>\r\n                    <button className=\"btn btnProceed\">Continue</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VegSnacksDetails\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksForm.js",["898"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\nconst VegSnacksForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Veg Snacks Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VegSnacksForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuContainer.js",["899"],"import React,{useEffect,useState} from 'react'\r\nimport MenuForm from './MenuForm'\r\nimport api from '../actions/api'\r\n\r\nconst MenuContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit,setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.menuAPI().create(formData).then(res=>{\r\n                fetchMenu();\r\n                onSuccess();\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        else{\r\n            api.menuAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchMenu();\r\n                onSuccess();\r\n            })\r\n            .catch(err=> console.log(err))\r\n        }\r\n    }\r\n    const fetchMenu = ()=>{\r\n        api.menuAPI().fetchAll().then(res=>setList(res.data))\r\n    }\r\n    useEffect(() => {\r\n        fetchMenu()\r\n    },[])\r\n    const showMenuDetails=(data)=>{\r\n        setRecordForEdit(data)\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are you Sure to Delete?'))\r\n        {\r\n            api.menuAPI().delete(id).then(res=>fetchMenu())\r\n            .catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <div>\r\n            <MenuForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></MenuForm>\r\n        </div>\r\n        <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :- {list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacksList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksContainer.js",["900"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport MuttonSnacksForm from './MuttonSnacksForm'\r\n\r\nconst MuttonSnacksContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.muttonsnacksAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.muttonsnacksAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.muttonsnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.muttonsnacksAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <MuttonSnacksForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></MuttonSnacksForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MuttonSnacksContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuForm.js",["901"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\n\r\nconst initialvalues = {\r\n    id:0,\r\n    name:\"\",\r\n    section:\"\",\r\n    image:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n}\r\nexport default function MenuForm(props) {\r\n    const {addOrEdit, recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    const [ errors, setErrors] = useState({})\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null){\r\n        setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"imagefile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n        setErrors({})\r\n    }\r\n    const applyErrorClass = field =>((field in errors && errors[field]===false)?\" invalid-field\":\"\")\r\n    return (\r\n        <>\r\n            <h2>Menu Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className={\"form-control-file\"+applyErrorClass('imageSrc')} onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className={\"form-control\" + applyErrorClass('name')} placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className={\"form-control\" + applyErrorClass('section')} placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n// export default MenuForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesContainer.js",["902"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport VegCurriesForm from './VegCurriesForm'\r\n\r\nconst VegCurriesContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.vegcurriesAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.vegcurriesAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.vegcurriesAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.vegcurriesAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n            <VegCurriesForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></VegCurriesForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VegCurriesContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksContainer.js",["903"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport FishPrawnsSnacksForm from './FishPrawnsSnacksForm'\r\nconst FishPrawnsSnacksContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.fishprawnssnacksAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.fishprawnssnacksAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.fishprawnssnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.fishprawnssnacksAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <FishPrawnsSnacksForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></FishPrawnsSnacksForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FishPrawnsSnacksContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksDetails.js",["904","905","906","907","908","909","910"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/MainSectionStyle.scss'\r\nimport ItemsCart from '../ItemsCart/ItemsCart'\r\n\r\nconst FishPrawnsSnacksDetails = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [cart,setCart] = useState([])\r\n    const [tempTotal,setTempTotal] = useState(0)\r\n    const [itemsTotal,setItemTotal] = useState(0)\r\n    useEffect(()=>{\r\n        fetchList()\r\n    })\r\n    const fetchList =()=>{\r\n        api.fishprawnssnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    const addToCart= (e,data)=>{\r\n        let id= data.id\r\n        let inCart = cart.find((item)=>item.id === id);\r\n        if(inCart)\r\n        {\r\n            e.target.innerText=\"In Cart\"\r\n            e.target.disabled=true\r\n        }\r\n        if(!inCart){\r\n            let cartItem = {...data,amount:1}\r\n            setCart([...cart,{...cartItem}])\r\n        }\r\n            setCartValues()\r\n            SaveCart()\r\n    }\r\n    const setCartValues = ()=>{\r\n        let tempTotal = 0;\r\n        let itemsTotal = 0;\r\n        cart.map((item)=>{\r\n            setTempTotal(tempTotal += item.price* item.amount)\r\n            setItemTotal(itemsTotal +=item.amount)\r\n        })\r\n    }\r\n    const SaveCart= ()=>{\r\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\r\n    }\r\n    const getCart = ()=>{\r\n        const Incart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        // console.log(Incart)\r\n    } \r\n    const increaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount= tempItem.amount+1\r\n        SaveCart()\r\n        setCartValues()\r\n    }\r\n    const decreaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount = tempItem.amount - 1;  \r\n        if(tempItem.amount===0)\r\n        {\r\n            // removeItem(id)\r\n        }\r\n        setCartValues()\r\n            SaveCart()\r\n        \r\n    }\r\n    const removeItem = (id)=>{\r\n        JSON.parse(localStorage.getItem(\"cart\")).filter((item)=>item.id!=id)\r\n        setCartValues()\r\n        setCart()\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"main-section-item-main-card\">\r\n        <img src={data.imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n        <div className=\"main-section-item-main-card-body\">\r\n            <h2>{data.name}</h2>\r\n            <h4>{data.price}{` Rs/-`}</h4>\r\n            <h4>{data.section}</h4>\r\n            <button className=\"main-section-item-main-card-btn btn\" onClick={(e)=>addToCart(e,data)}>ADD</button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <h2>7 Hills Fish and Prawns</h2>\r\n            <div className=\"main-section-item-main-div\">\r\n            {/* <h3>List of Items :{list.length}</h3> */}\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"main-section-incart-items-main-div\">\r\n                <div className=\"item-cart-main-div\">\r\n                    <h2>Your Cart Items</h2>\r\n                    <div className=\"cart-items\">{itemsTotal}</div>\r\n                        {console.log(cart)}\r\n                        {\r\n                            cart && cart.map((element,index)=>\r\n                            <div key={index} className=\"cart-main-div\">\r\n                                    \r\n                                    <img src={element.imageSrc} className=\"cart-img-div\"></img>\r\n                                    <h3>{element.name}</h3>\r\n                                    <h4>Price: {`${element.price*element.amount} Rs/-`}</h4>\r\n                                    <button onClick={()=>increaseQuantity(element.id)} className=\"btn btnPlus\"><i className=\"fa fa-plus\"></i></button>\r\n                                    <label>{element.amount}</label>\r\n                                    <button onClick={()=>decreaseQuantity(element.id)} className=\"btn btnMinus\"><i className=\"fa fa-minus\"></i></button>\r\n                                    <button className=\"btn btnDelete\" onClick={()=>{removeItem(element.id)}}>Delete</button>\r\n                                    {/* <button onClick={()=>RemoveFromCart(element)}>Remove</button> */}\r\n                            </div>\r\n                            )}\r\n                    <div>\r\n                            <h3>your total : <span className=\"cart-total\">{tempTotal}</span>Rs/-</h3>\r\n                    </div>\r\n                    <button className=\"btn btnProceed\">Continue</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FishPrawnsSnacksDetails\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniContainer.js",["911"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport BiryaniForm from './BiryaniForm'\r\n\r\nconst BiryaniContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.biryaniAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.biryaniAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.biryaniAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.biryaniAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <BiryaniForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></BiryaniForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BiryaniContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniDetails.js",["912","913","914","915","916","917","918","919","920","921"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/MainSectionStyle.scss'\r\nimport ItemsCart from '../ItemsCart/ItemsCart'\r\n\r\nconst BiryaniDetails = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [products,setProducts] = useState([])\r\n    const [cart,setCart] = useState([])\r\n    const [tempTotal,setTempTotal] = useState(0)\r\n    const [itemsTotal,setItemTotal] = useState(0)\r\n    useEffect(()=>{\r\n        fetchList()\r\n        setItems()\r\n    },[])\r\n    const setItems=()=>{\r\n        let tempProducts = [];\r\n        list.forEach(item=>{\r\n            const singleItem = {...item,incart:false};\r\n            tempProducts = [...tempProducts,{...singleItem}];\r\n        });\r\n        setProducts(tempProducts)\r\n    }\r\n    const fetchList =()=>{\r\n        api.biryaniAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    const addToCart= (e,data)=>{\r\n        let id= data.id\r\n        let inCart = cart.find((item)=>item.id === id);\r\n        let cartItem = {...data,amount:1,incart:false}\r\n        setCart([...cart,{...cartItem}])\r\n        if(!cart.incart)\r\n        {\r\n            e.target.innerText=\"In Cart\"\r\n            e.target.disabled=true\r\n        }\r\n            setCartValues()\r\n            SaveCart()\r\n            console.log(cart)\r\n    }\r\n    const setCartValues = ()=>{\r\n        let tempTotal = 0;\r\n        let itemsTotal = 0;\r\n        cart.map((item)=>{\r\n            setTempTotal(tempTotal += item.price* item.amount)\r\n            setItemTotal(itemsTotal +=item.amount)\r\n        })\r\n    }\r\n    const SaveCart= ()=>{\r\n        localStorage.setItem(\"cart\",JSON.stringify(cart))\r\n    }\r\n    const getCart = ()=>{\r\n        const Incart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        // console.log(Incart)\r\n    } \r\n    const increaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount= tempItem.amount+1\r\n        SaveCart()\r\n        setCartValues()\r\n    }\r\n    const decreaseQuantity = (data)=>{\r\n        let id = data;\r\n        let tempItem = cart.find((item) => item.id === id);\r\n        tempItem.amount = tempItem.amount - 1;  \r\n        if(tempItem.amount===0)\r\n        {\r\n            // removeItem(id)\r\n        }\r\n        setCartValues()\r\n            SaveCart()\r\n    }\r\n    const removeItem = (data)=>{\r\n        let id= data.id\r\n        cart.filter((item)=>item.id!=id)\r\n        \r\n            setCart([...cart])\r\n        \r\n        setCartValues()\r\n        setCart()\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"main-section-item-main-card\">\r\n        <img src={data.imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n        <div className=\"main-section-item-main-card-body\">\r\n            <h2>{data.name}</h2>\r\n            <h4>{data.price}{` Rs/-`}</h4>\r\n            <h4>{data.section}</h4>\r\n            <button className=\"main-section-item-main-card-btn btn\" onClick={(e)=>addToCart(e,data)}>ADD</button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <h2>7 Hills Biryani</h2>\r\n            <div className=\"main-section-item-main-div\">\r\n            {/* <h3>List of Items :{list.length}</h3> */}\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[index])}</td>\r\n                            </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"main-section-incart-items-main-div\">\r\n                <div className=\"item-cart-main-div\">\r\n                    <h2>Your Cart Items</h2>\r\n                    <div className=\"cart-items\">{itemsTotal}</div>\r\n                        {/* {console.log(cart)} */}\r\n                        {\r\n                            cart && cart.map((element,index)=>\r\n                            <div key={index} className=\"cart-main-div\">\r\n                                    \r\n                                    <img src={element.imageSrc} className=\"cart-img-div\"></img>\r\n                                    <h3>{element.name}</h3>\r\n                                    <h4>Price: {`${element.price*element.amount} Rs/-`}</h4>\r\n                                    <button onClick={()=>increaseQuantity(element.id)} className=\"btn btnPlus\"><i className=\"fa fa-plus\"></i></button>\r\n                                    <label>{element.amount}</label>\r\n                                    <button onClick={()=>decreaseQuantity(element.id)} className=\"btn btnMinus\"><i className=\"fa fa-minus\"></i></button>\r\n                                    <button className=\"btn btnDelete\" onClick={()=>{removeItem(element)}}>Delete</button>\r\n                                    {/* <button onClick={()=>RemoveFromCart(element)}>Remove</button> */}\r\n                            </div>\r\n                            )}\r\n                    <div>\r\n                            <h3>your total : <span className=\"cart-total\">{tempTotal}</span>Rs/-</h3>\r\n                    </div>\r\n                    <button className=\"btn btnProceed\">Continue</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BiryaniDetails\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesContainer.js",["922"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport ChickenCurriesForm from './ChickenCurriesForm'\r\n\r\nconst ChickenCurriesContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.chickencurriesAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.chickencurriesAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.chickencurriesAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.chickencurriesAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <ChickenCurriesForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></ChickenCurriesForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChickenCurriesContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RootiNaanList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksContainer.js",["923"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport ChickenSnacksForm from './ChickenSnacksForm'\r\n\r\nconst ChickenSnacksContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.chickensnacksAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.chickensnacksAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.chickensnacksAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.chickensnacksAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <ChickenSnacksForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></ChickenSnacksForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChickenSnacksContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Menu\\MenuDetails.js",["924"],"import React,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport '../StyleCss/MenuDetailsCss.scss'\r\n\r\nconst MenuDetails = () => {\r\n    const [list,setList] = useState([{}])\r\n    const fetchMenu = ()=>{\r\n        api.menuAPI().fetchAll().then(res=>setList(res.data))\r\n    }\r\n    useEffect(() => {\r\n        fetchMenu()\r\n    },[])\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"6rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n            <h5>{data.name}</h5>\r\n            <button className=\"btn btn-light\" >Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\">\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n    return (\r\n        <>\r\n        {console.log(list)}\r\n            <div>List of Items</div>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/3))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[3*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[3*index+1]?imageCard(list[3*index+1]):null}</td>\r\n                                <td>{list[3*index+2]?imageCard(list[3*index+2]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuDetails\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaanContainer.js",["925"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport RotiNaanForm from './RotiNaanForm'\r\n\r\nconst RotiNaanContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.rotinaanAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.rotinaanAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.rotinaanAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.rotinaanAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <RotiNaanForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></RotiNaanForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RotiNaanContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriContainer.js",["926"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport TandooriForm from './TandooriForm'\r\n\r\nconst TandooriContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.tandooriAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.tandooriAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.tandooriAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.tandooriAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <TandooriForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></TandooriForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TandooriContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesContainer.js",["927"],"import React ,{useEffect,useState} from 'react'\r\nimport api from '../actions/api'\r\nimport MuttonCurriesForm from './MuttonCurriesForm'\r\n\r\nconst MuttonCurriesContainer = () => {\r\n    const [list,setList] = useState([{}])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const addOrEdit = (formData,onSuccess)=>{\r\n        if(formData.get('id')===\"0\"){\r\n            api.muttoncurriesAPI().create(formData).then(res=>{\r\n            fetchList();\r\n            onSuccess();\r\n        }).catch(err => console.log(err))\r\n        }\r\n        else{\r\n            api.muttoncurriesAPI().update(formData.get('id'),formData).then(res=>{\r\n                fetchList();\r\n                onSuccess();\r\n            })\r\n        }\r\n    }\r\n    const fetchList =()=>{\r\n        api.muttoncurriesAPI().fetchAll().then(res=>setList(res.data)).catch(err => console.log(err))\r\n    }\r\n    useEffect(()=>{\r\n        fetchList()\r\n    },[])\r\n    const showMenuDetails =(data)=>{\r\n        setRecordForEdit(data);\r\n    }\r\n    const handleDelete = (e,id)=>{\r\n        e.stopPropagation();\r\n        if(window.confirm('Are You Sure to Delete ?'))\r\n        {\r\n            api.muttoncurriesAPI().delete(id).then(res=>fetchList()).catch(err=>console.log(err))\r\n        }\r\n    }\r\n    const imageCard= (data)=>(\r\n    <div className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n        <img src={data.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n        <div className=\"card-body\" style={{height:\"100%\", width:\"100%\", top:\"-0.8rem\"}}>\r\n            <h4 style={{fontSize:\"1rem\"}}>{data.name}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.price}{` Rs/-`}</h4>\r\n            <h4 style={{fontSize:\"0.7rem\"}}>{data.section}</h4>\r\n            <button className=\"btn btn-light\" onClick={()=>{showMenuDetails(data)}} style={{margin:\"0.5rem\"}}>Edit<i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></button>\r\n            <button className=\"btn btn-light delete-button\" onClick={(e)=>handleDelete(e,parseInt(data.id))}>\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    )\r\n    return (\r\n        <>\r\n        <MuttonCurriesForm addOrEdit={addOrEdit} recordForEdit={recordForEdit}></MuttonCurriesForm>\r\n            <div  style={{position:\"absolute\",minHeight:\"100rem\",minWidth:\"60rem\",left:\"25rem\",top:\"-0.5rem\"}}>\r\n            <h3>List of Items :{list.length}</h3>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        {\r\n                            list && [...Array(Math.ceil(list.length/4))].map((element,index)=>\r\n                            <tr key={index}>\r\n                                <td  style={{border:\"none\"}}>{imageCard(list[4*index])}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+1]?imageCard(list[4*index+1]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+2]?imageCard(list[4*index+2]):null}</td>\r\n                                <td  style={{border:\"none\"}}>{list[4*index+3]?imageCard(list[4*index+3]):null}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MuttonCurriesContainer\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartEmpty.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartColumn.js",["928"],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartProceed.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartTotals.js",["929"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\nimport '../../StyleCss/CartStyle.scss'\r\n\r\nclass MainCartTotal extends Component {\r\n    render() {\r\n        const {cartSubTotal,cartTax,cartTotal,clearCart} = this.props.value\r\n        return (\r\n                <>\r\n                    <div className=\"main-cart-total-main-div\">\r\n                    <h2>Your Invoice</h2>\r\n                    <h3>No of Items in Cart: {this.props.value.cart.length}</h3>\r\n                    <div className=\"main-cart-total-sub-div\">\r\n                    <h2>Sub Total :{cartSubTotal}</h2>\r\n                    <h2>Tax :{cartTax}</h2>\r\n                    {cartTotal>1000 ? <p style={{color:\"green\"}}>Free Delivery</p>:<p style={{color:\"red\"}}>Delivery Charges Applicable</p>}\r\n                    <h2>Total :{cartTotal}</h2>\r\n                    </div>\r\n                    <button className=\"btn\" style={{position:\"relative\",backgroundColor:\"red\",margin:\"1rem\",left:\"-4rem\"}} onClick={()=>{clearCart()}}>Clear Cart</button>\r\n                    </div>\r\n                </>                    \r\n        )\r\n    }\r\n}\r\nexport default MainCartTotal\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllTandooriProducts.js",["930"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllTandooriProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.tandooriProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\IndexDOM\\MainCard.js",["931"],"import React from 'react'\r\nimport '../StyleCss/ItemContainer.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst MainCard = ({props,i}) => {\r\n    const {a:{name,imageSrc,id}}={a:props}\r\n    return (\r\n        <div>\r\n            <div className={`element-course-container-${i} container-card`}>\r\n                <Link to={`./MainSection${id}`}>\r\n                <div className=\"element-img-course-container\">\r\n                    <img src={imageSrc} className=\"img-container\"></img>\r\n                    <h2 id={`image-${name}`}>\r\n                        <label className=\"img-name\" style={{fontSize:\"1.6rem\"}}>{name}</label>\r\n                    </h2>\r\n                </div> \r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MainCard\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllFishPrawnsSnacksProducts.js",["932"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllFishPrawnsSnacksProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.fishPrawnsSnacksProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllMuttonCurryProducts.js",["933"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllMuttonCurryProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.muttonCurryProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllMuttonSnacksProducts.js",["934"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllMuttonSnacksProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.muttonSnacksProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllRotiNaanProducts.js",["935"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllRotiNaanProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.rotiNaanProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllVegSnacksProducts.js",["936"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllVegSnacksProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.vegSnacksProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllVegCurriesProducts.js",["937"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllVegCurriesProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.vegCurryProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllChickenCurriesProducts.js",["938"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllChickenCurriesProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.chickenCurryProducts.map((item,index)=>{\r\n                            // if(nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllBiryaniProducts.js",["939"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllBiryaniProducts extends Component {\r\n    render() {\r\n        console.log(this.props.id)\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        // const {cartId,inCart}= value\r\n                        console.log(value)\r\n                        return (\r\n                        value.biryaniProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv=non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestOfSevenHills.js",["940","941","942"],"import React, { Component } from 'react'\r\nimport { MainContextConsumer } from '../MainContext/MainContext'\r\nimport '../StyleCss/MainSectionStyle.scss'\r\nimport MainProductDetails from '../MainContext/MainProductDetails'\r\n\r\nexport default class BestOfSevenHills extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,section,cartId} = this.props.item\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>(\r\n                        <>\r\n                        <div className=\"main-section-item-main-addcard\">\r\n                            <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                            <div className=\"main-section-item-main-card-body\">\r\n                                <h2>{name}</h2>\r\n                                <h4>{price}{` Rs/-`}</h4>\r\n                                <h4>{section}</h4>\r\n                                <button className=\"main-section-item-main-card-btn btn\" \r\n                                onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}\r\n                                }\r\n                                disabled={inCart ? true : false}>\r\n                                    {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\AllProducts\\AllChickenSnacksProducts.js",["943"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext'\r\n\r\nexport default class AllChickenSnacksProducts extends Component {\r\n    render() {\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                        value.chickenSnacksProducts.map((item,index)=>{\r\n                            // if(tempProducts.nv===non){\r\n                            return (\r\n                                item.section === this.props.id && <div key={index} className=\"card\" style={{height:\"17rem\", width:\"10rem\",zIndex:\"1\"}}>\r\n                                    <img src={item.imageSrc} className=\"card-img-top\" style={{height:\"8rem\", width:\"100%\"}}></img>\r\n                                    <div className=\"card-body\" style={{height:\"100%\", width:\"100%\"}}>\r\n                                        <h4 style={{fontSize:\"1rem\"}}>{item.name}</h4>\r\n                                        <h4 style={{fontSize:\"0.7rem\"}}>{item.price}{` Rs/-`}</h4>\r\n                                        <button className=\"btn btn-light\" \r\n                                        onClick={()=>{value.addToCart(item.cartId);value.openProductDetail(item.cartId)}\r\n                                        }\r\n                                        disabled={item.inCart ? true : false}>\r\n                                            {item.inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            // }\r\n                        }))\r\n                        }\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartEmpty.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartTotal.js",["944"],"import React, { Component } from 'react'\r\nimport { ChickenCurriesContextConsumer } from '../ChickenCurriesContext'\r\n\r\nexport default class ChickenCurriesCartTotal extends Component {\r\n    render() {\r\n        const {cartSubTotal,cartTax, cartTotal, clearCart} = this.props.value\r\n        return (\r\n            <ChickenCurriesContextConsumer>\r\n                {\r\n                    value=>{\r\n                        return (\r\n                            <>\r\n                                {/* <button className=\"btn\" style={{backgroundColor:\"red\",margin:\"1rem\"}} onClick={()=>{clearCart()}}>Clear Cart</button> */}\r\n                                <h2>Sub Total :{cartSubTotal}</h2>\r\n                                <h2>Tax :{cartTax}</h2>\r\n                                <h2>Total :{cartTotal}</h2>\r\n                            </>\r\n                        )}\r\n                }\r\n            </ChickenCurriesContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartList.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\BestOfSevenHills\\BestForm.js",["945"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst BestForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n        {console.log(values)}\r\n            <h2>Biryani Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BestForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\MainCart\\MainCartItems.js",["946","947"],"import React, { Component } from 'react'\r\nimport '../../StyleCss/CartStyle.scss'\r\n\r\nexport default class MainCartItems extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,count,total,id,cartId} = this.props.item\r\n        const {increment,decrement,removeItem} = this.props.value\r\n        return (\r\n            <>\r\n            <div className=\"main-section-item-main-card\">\r\n                            <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                            <div className=\"main-section-item-main-card-body\">\r\n                                <h2 className=\"cart-name\">{name}</h2>\r\n                                <h4 className=\"cart-price\">Price: {price}{` Rs/-`}</h4>\r\n                                <h2 className=\"cart-tot\">Total: {total}</h2>\r\n                            </div>\r\n                                <button className=\"btn btn-dec\" onClick={()=>decrement(cartId)}><i className=\"fa fa-minus\"></i></button>\r\n                                <h2 className=\"cart-quantity\">{count}</h2>\r\n                                <button className=\"btn btn-inc\" onClick={()=>increment(cartId)}><i className=\"fa fa-plus\"></i></button>\r\n                                <button className=\"main-section-item-main-btn btn\" onClick={()=>removeItem(cartId)}>\r\n                                    Remove\r\n                                </button>\r\n                            \r\n                        </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegSnacks\\VegSnacks.js",["948","949"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class VegSnacks extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,section,cartId} = this.props.item\r\n        return (\r\n            <>\r\n            \r\n            <MainContextConsumer>\r\n                {\r\n                    value=>(\r\n                        <>\r\n                        <div className=\"main-section-item-main-addcard\">\r\n                            <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                            <div className=\"main-section-item-main-card-body\">\r\n                                <h2>{name}</h2>\r\n                                <h4>{price}{` Rs/-`}</h4>\r\n                                <h4>{section}</h4>\r\n                                <button className=\"main-section-item-main-card-btn btn\" onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                disabled={inCart ? true : false}>\r\n                                    {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacksForm.js",["950"],"import React ,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst MuttonSnacksForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n        <h2>Mutton Snacks Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MuttonSnacksForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\TandooriForm.js",["951"],"import React ,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst TandooriForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Tandoori Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TandooriForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurriesForm.js",["952"],"import React ,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst MuttonCurriesForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Mutton Curries Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MuttonCurriesForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaanForm.js",["953"],"import React ,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\nconst RotiNaanForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Roti & Naan Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RotiNaanForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacksForm.js",["954"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst ChickenSnacksForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Chicken Snacks Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChickenSnacksForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenSnacks\\ChickenSnacks.js",["955","956"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class ChickenSnacks extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\Biryani.js",["957","958","959"],"import React, { Component } from 'react'\r\nimport { MainContextConsumer } from '../MainContext/MainContext'\r\nimport '../StyleCss/MainSectionStyle.scss'\r\nimport MainProductDetails from '../MainContext/MainProductDetails'\r\n\r\nexport default class Biryani extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,section,cartId} = this.props.item\r\n        return (\r\n            <MainContextConsumer>\r\n                {\r\n                    value=>(\r\n                        <>\r\n                        <div className=\"filter-main-div\">\r\n                            {/* <select value={price} onChange={(e)=>value.filterPoductPrice(e)}>\r\n                                <option value=\"\">ALL</option>\r\n                                <option value=\"highest\">highest</option>\r\n                                <option value=\"medium\">medium</option>\r\n                                <option value=\"lowest\">Lowest</option>\r\n                            </select> */}\r\n                        </div>\r\n                        <div className=\"main-section-item-main-addcard\">\r\n                            <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                            <div className=\"main-section-item-main-card-body\">\r\n                                <h2>{name}</h2>\r\n                                <h4>{price}{` Rs/-`}</h4>\r\n                                <h4>{section}</h4>\r\n                                <button className=\"main-section-item-main-card-btn btn\" \r\n                                onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}\r\n                                }\r\n                                disabled={inCart ? true : false}>\r\n                                    {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </MainContextConsumer>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurries.js",["960","961"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class ChickenCurries extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacks.js",["962","963"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class FishPrawnsSnacks extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ChickenCurries\\ChickenCurriesForm.js",["964"],"import React ,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst ChickenCurriesForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Chicken Curries Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChickenCurriesForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonSnacks\\MuttonSnacks.js",["965","966"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class MuttonSnacks extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Biryani\\BiryaniForm.js",["967"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\n\r\nconst BiryaniForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n        {console.log(values)}\r\n            <h2>Biryani Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BiryaniForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\RotiNaan\\RotiNaan.js",["968","969"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class RotiNaan extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MuttonCurries\\MuttonCurries.js",["970","971"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class MuttonCurries extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurriesForm.js",["972"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst VegCurriesForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Veg Curries Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VegCurriesForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\ItemsCart\\ItemsCart.js",[],"C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\Tandoori\\Tandoori.js",["973","974"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class Tandoori extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\VegCurries\\VegCurries.js",["975","976"],"import React, { Component } from 'react'\r\nimport {MainContextConsumer} from '../MainContext/MainContext'\r\n\r\nexport default class VegCurries extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,id,inCart,cartId,section} = this.props.item\r\n        return (\r\n            <>\r\n                <MainContextConsumer>\r\n                    {\r\n                        value=>(\r\n                            <>\r\n                            <div className=\"main-section-item-main-addcard\">\r\n                                    <img src={imageSrc} className=\"main-section-item-main-card-img\"></img>\r\n                                    <div className=\"main-section-item-main-card-body\">\r\n                                        <h2>{name}</h2>\r\n                                        <h4>{price}{` Rs/-`}</h4>\r\n                                        <h4>{section}</h4>\r\n                                        <button className=\"main-section-item-main-card-btn btn\" \r\n                                        onClick={()=>{value.addToCart(cartId);value.openProductDetail(cartId)}}\r\n                                        disabled={inCart ? true : false}>\r\n                                            {inCart ?\"In Cart\": \"Add To Cart\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </MainContextConsumer>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\FishPrawnsSnacks\\FishPrawnsSnacksForm.js",["977"],"import React,{useState,useEffect} from 'react'\r\nimport '../StyleCss/BackEndHomeStyle.scss'\r\n\r\nconst defaultImageSrc = \"/image/Biryani.jpg\"\r\nconst initialvalues={\r\n    id:\"0\",\r\n    name:\"\",\r\n    image:\"\",\r\n    price:0,\r\n    section:\"\",\r\n    imageSrc:defaultImageSrc,\r\n    imageFile:null\r\n\r\n}\r\n\r\nconst FishPrawnsSnacksForm = (props) => {\r\n    const {addOrEdit,recordForEdit} = props\r\n    const [values,setValues] = useState(initialvalues)\r\n    useEffect(()=>{\r\n        if(recordForEdit!=null)\r\n        {\r\n            setValues(recordForEdit)\r\n        }\r\n    },[recordForEdit])\r\n    const handleInput = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    const showPreview = (e)=>{\r\n        if(e.target.files && e.target.files[0])\r\n        {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader()\r\n            reader.onload=(x)=>{\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc:x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile:null,\r\n                imageSrc:defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append(\"id\",values.id)\r\n        formData.append(\"name\",values.name)\r\n        formData.append(\"price\",values.price)\r\n        formData.append(\"image\",values.image)\r\n        formData.append(\"section\",values.section)\r\n        formData.append(\"imageFile\",values.imageFile)\r\n        addOrEdit(formData,resetForm)\r\n    }\r\n    const resetForm = ()=>{\r\n        setValues(initialvalues)\r\n        document.getElementById(\"image-uploader\").value=null\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Fish Prawns Snacks Form</h2>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} className=\"card-img-top\"></img>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            {/* <label>Upload Image</label> */}\r\n                            <input type=\"file\" accept=\"image/*\" name=\"image\" className=\"form-control-file\" onChange={showPreview} id=\"image-uploader\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Item Name</label>\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Item Name\" onChange={handleInput} value={values.name}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Price</label>\r\n                            <input type=\"text\" name=\"price\" className=\"form-control\" placeholder=\"Price\" onChange={handleInput} value={values.price}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Section</label>\r\n                            <select className=\"form-control\" value={values.section} name=\"section\" onChange={handleInput}>\r\n                                <option value=\"All\">Select</option>\r\n                                <option value=\"Veg\">Vegetarian</option>\r\n                                <option value=\"Non-Veg\">Non-Vegetarian</option>\r\n                            </select>\r\n                            {/* <input type=\"text\" name=\"section\" className=\"form-control\" placeholder=\"Veg or Non-Veg\" onChange={handleInput} value={values.section}></input> */}\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" style={{width:\"15rem\"}}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FishPrawnsSnacksForm\r\n","C:\\my Application\\git my apps\\7hills\\7hillsapp\\7hillsapp\\clientapp\\src\\MainContext\\ChickenCurriesCart\\ChickenCurriesCartItem.js",["978"],"import React, { Component } from 'react'\r\n\r\nexport default class ChickenCurriesCartItem extends Component {\r\n    render() {\r\n        const {imageSrc,name,price,count,total,id} = this.props.item\r\n        const {increment,decrement,removeItem} = this.props.value\r\n        return (\r\n            <>\r\n                <h2>Your Cart</h2>\r\n                <div className=\"cart-item-main-div\">\r\n                    <div className=\"cart-img-div\">\r\n                        <label>Image</label>\r\n                        <img src={imageSrc} className=\"cart-img\"></img>\r\n                    </div>\r\n                    <div className=\"cart-name-div\">\r\n                        <label>Name</label>\r\n                        <h2 className=\"cart-name\">{name}</h2>\r\n                    </div>\r\n                    <div className=\"cart-price-div\">\r\n                        <label>Price</label>\r\n                        <h2 className=\"cart-price\">{price}</h2>\r\n                    </div>\r\n                    <div className=\"cart-quantity-div\">\r\n                        <label>Quantity</label>\r\n                        <button className=\"btn btn-dec\" onClick={()=>decrement(id)}><i className=\"fa fa-minus\"></i></button>\r\n                        <h2 className=\"cart-quantity\">{count}</h2>\r\n                        <button className=\"btn btn-inc\" onClick={()=>increment(id)}><i className=\"fa fa-plus\"></i></button>\r\n                    </div>\r\n                    <div className=\"cart-tot-div\">\r\n                        <label>Total</label>\r\n                        <h2 className=\"cart-tot\">{total}</h2>\r\n                    </div>\r\n                    <i className=\"fa fa-trash\" onClick={()=>removeItem(id)}>Remove</i>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"979","severity":1,"message":"980","line":9,"column":10,"nodeType":"981","messageId":"982","endLine":9,"endColumn":39},{"ruleId":"983","replacedBy":"984"},{"ruleId":"985","replacedBy":"986"},{"ruleId":"979","severity":1,"message":"987","line":1,"column":8,"nodeType":"981","messageId":"982","endLine":1,"endColumn":12},{"ruleId":"979","severity":1,"message":"988","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":20},{"ruleId":"979","severity":1,"message":"989","line":5,"column":8,"nodeType":"981","messageId":"982","endLine":5,"endColumn":22},{"ruleId":"979","severity":1,"message":"990","line":6,"column":10,"nodeType":"981","messageId":"982","endLine":6,"endColumn":15},{"ruleId":"979","severity":1,"message":"991","line":7,"column":10,"nodeType":"981","messageId":"982","endLine":7,"endColumn":24},{"ruleId":"979","severity":1,"message":"992","line":8,"column":10,"nodeType":"981","messageId":"982","endLine":8,"endColumn":26},{"ruleId":"979","severity":1,"message":"993","line":9,"column":10,"nodeType":"981","messageId":"982","endLine":9,"endColumn":14},{"ruleId":"979","severity":1,"message":"994","line":10,"column":8,"nodeType":"981","messageId":"982","endLine":10,"endColumn":30},{"ruleId":"979","severity":1,"message":"995","line":12,"column":8,"nodeType":"981","messageId":"982","endLine":12,"endColumn":19},{"ruleId":"979","severity":1,"message":"996","line":13,"column":26,"nodeType":"981","messageId":"982","endLine":13,"endColumn":32},{"ruleId":"979","severity":1,"message":"997","line":13,"column":34,"nodeType":"981","messageId":"982","endLine":13,"endColumn":40},{"ruleId":"979","severity":1,"message":"998","line":13,"column":42,"nodeType":"981","messageId":"982","endLine":13,"endColumn":47},{"ruleId":"979","severity":1,"message":"999","line":14,"column":8,"nodeType":"981","messageId":"982","endLine":14,"endColumn":18},{"ruleId":"979","severity":1,"message":"1000","line":15,"column":8,"nodeType":"981","messageId":"982","endLine":15,"endColumn":23},{"ruleId":"979","severity":1,"message":"1001","line":16,"column":8,"nodeType":"981","messageId":"982","endLine":16,"endColumn":14},{"ruleId":"979","severity":1,"message":"1002","line":17,"column":8,"nodeType":"981","messageId":"982","endLine":17,"endColumn":16},{"ruleId":"979","severity":1,"message":"1003","line":18,"column":9,"nodeType":"981","messageId":"982","endLine":18,"endColumn":33},{"ruleId":"979","severity":1,"message":"1004","line":19,"column":8,"nodeType":"981","messageId":"982","endLine":19,"endColumn":19},{"ruleId":"979","severity":1,"message":"1005","line":20,"column":8,"nodeType":"981","messageId":"982","endLine":20,"endColumn":15},{"ruleId":"979","severity":1,"message":"1006","line":21,"column":8,"nodeType":"981","messageId":"982","endLine":21,"endColumn":15},{"ruleId":"979","severity":1,"message":"1007","line":22,"column":8,"nodeType":"981","messageId":"982","endLine":22,"endColumn":12},{"ruleId":"979","severity":1,"message":"1008","line":23,"column":8,"nodeType":"981","messageId":"982","endLine":23,"endColumn":13},{"ruleId":"979","severity":1,"message":"1009","line":24,"column":8,"nodeType":"981","messageId":"982","endLine":24,"endColumn":23},{"ruleId":"979","severity":1,"message":"1010","line":25,"column":8,"nodeType":"981","messageId":"982","endLine":25,"endColumn":19},{"ruleId":"979","severity":1,"message":"1011","line":3,"column":8,"nodeType":"981","messageId":"982","endLine":3,"endColumn":13},{"ruleId":"979","severity":1,"message":"1010","line":6,"column":8,"nodeType":"981","messageId":"982","endLine":6,"endColumn":19},{"ruleId":"979","severity":1,"message":"1012","line":130,"column":16,"nodeType":"981","messageId":"982","endLine":130,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1014","line":178,"column":37,"nodeType":"1015","messageId":"1016","endLine":178,"endColumn":38},{"ruleId":"979","severity":1,"message":"1017","line":509,"column":13,"nodeType":"981","messageId":"982","endLine":509,"endColumn":34},{"ruleId":"979","severity":1,"message":"1018","line":510,"column":13,"nodeType":"981","messageId":"982","endLine":510,"endColumn":33},{"ruleId":"979","severity":1,"message":"1019","line":511,"column":13,"nodeType":"981","messageId":"982","endLine":511,"endColumn":32},{"ruleId":"979","severity":1,"message":"1020","line":512,"column":13,"nodeType":"981","messageId":"982","endLine":512,"endColumn":38},{"ruleId":"979","severity":1,"message":"1021","line":513,"column":13,"nodeType":"981","messageId":"982","endLine":513,"endColumn":37},{"ruleId":"979","severity":1,"message":"1022","line":514,"column":13,"nodeType":"981","messageId":"982","endLine":514,"endColumn":41},{"ruleId":"979","severity":1,"message":"1023","line":515,"column":13,"nodeType":"981","messageId":"982","endLine":515,"endColumn":37},{"ruleId":"979","severity":1,"message":"1024","line":516,"column":13,"nodeType":"981","messageId":"982","endLine":516,"endColumn":36},{"ruleId":"979","severity":1,"message":"1025","line":517,"column":13,"nodeType":"981","messageId":"982","endLine":517,"endColumn":33},{"ruleId":"979","severity":1,"message":"1026","line":518,"column":13,"nodeType":"981","messageId":"982","endLine":518,"endColumn":33},{"ruleId":"979","severity":1,"message":"1027","line":519,"column":13,"nodeType":"981","messageId":"982","endLine":519,"endColumn":30},{"ruleId":"979","severity":1,"message":"1028","line":1,"column":10,"nodeType":"981","messageId":"982","endLine":1,"endColumn":19},{"ruleId":"979","severity":1,"message":"1029","line":2,"column":9,"nodeType":"981","messageId":"982","endLine":2,"endColumn":24},{"ruleId":"979","severity":1,"message":"1004","line":3,"column":8,"nodeType":"981","messageId":"982","endLine":3,"endColumn":19},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":29,"nodeType":"1032","endLine":15,"endColumn":46},{"ruleId":"979","severity":1,"message":"1033","line":3,"column":9,"nodeType":"981","messageId":"982","endLine":3,"endColumn":13},{"ruleId":"979","severity":1,"message":"995","line":7,"column":8,"nodeType":"981","messageId":"982","endLine":7,"endColumn":19},{"ruleId":"979","severity":1,"message":"999","line":10,"column":8,"nodeType":"981","messageId":"982","endLine":10,"endColumn":18},{"ruleId":"979","severity":1,"message":"1000","line":11,"column":8,"nodeType":"981","messageId":"982","endLine":11,"endColumn":23},{"ruleId":"979","severity":1,"message":"1034","line":12,"column":8,"nodeType":"981","messageId":"982","endLine":12,"endColumn":14},{"ruleId":"979","severity":1,"message":"1035","line":14,"column":8,"nodeType":"981","messageId":"982","endLine":14,"endColumn":16},{"ruleId":"979","severity":1,"message":"1036","line":33,"column":8,"nodeType":"981","messageId":"982","endLine":33,"endColumn":15},{"ruleId":"979","severity":1,"message":"1037","line":38,"column":10,"nodeType":"981","messageId":"982","endLine":38,"endColumn":24},{"ruleId":"979","severity":1,"message":"1011","line":2,"column":8,"nodeType":"981","messageId":"982","endLine":2,"endColumn":13},{"ruleId":"979","severity":1,"message":"1038","line":72,"column":11,"nodeType":"981","messageId":"982","endLine":72,"endColumn":19},{"ruleId":"1030","severity":1,"message":"1031","line":95,"column":21,"nodeType":"1032","endLine":95,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":33,"nodeType":"1032","endLine":15,"endColumn":50},{"ruleId":"979","severity":1,"message":"1039","line":1,"column":24,"nodeType":"981","messageId":"982","endLine":1,"endColumn":33},{"ruleId":"979","severity":1,"message":"1040","line":1,"column":34,"nodeType":"981","messageId":"982","endLine":1,"endColumn":44},{"ruleId":"1030","severity":1,"message":"1031","line":21,"column":33,"nodeType":"1032","endLine":21,"endColumn":50},{"ruleId":"979","severity":1,"message":"993","line":4,"column":9,"nodeType":"981","messageId":"982","endLine":4,"endColumn":13},{"ruleId":"1030","severity":1,"message":"1031","line":60,"column":9,"nodeType":"1032","endLine":60,"endColumn":97},{"ruleId":"979","severity":1,"message":"1041","line":4,"column":9,"nodeType":"981","messageId":"982","endLine":4,"endColumn":16},{"ruleId":"979","severity":1,"message":"1041","line":4,"column":9,"nodeType":"981","messageId":"982","endLine":4,"endColumn":16},{"ruleId":"979","severity":1,"message":"1042","line":23,"column":109,"nodeType":"981","messageId":"982","endLine":23,"endColumn":129},{"ruleId":"979","severity":1,"message":"1041","line":4,"column":9,"nodeType":"981","messageId":"982","endLine":4,"endColumn":16},{"ruleId":"979","severity":1,"message":"1042","line":23,"column":188,"nodeType":"981","messageId":"982","endLine":23,"endColumn":208},{"ruleId":"979","severity":1,"message":"1043","line":6,"column":12,"nodeType":"981","messageId":"982","endLine":6,"endColumn":16},{"ruleId":"979","severity":1,"message":"1044","line":7,"column":27,"nodeType":"981","messageId":"982","endLine":7,"endColumn":43},{"ruleId":"979","severity":1,"message":"1045","line":23,"column":11,"nodeType":"981","messageId":"982","endLine":23,"endColumn":21},{"ruleId":"979","severity":1,"message":"1046","line":26,"column":11,"nodeType":"981","messageId":"982","endLine":26,"endColumn":23},{"ruleId":"979","severity":1,"message":"1039","line":1,"column":24,"nodeType":"981","messageId":"982","endLine":1,"endColumn":33},{"ruleId":"1047","severity":1,"message":"1048","line":33,"column":32,"nodeType":"1049","messageId":"1050","endLine":33,"endColumn":34},{"ruleId":"1047","severity":1,"message":"1048","line":34,"column":36,"nodeType":"1049","messageId":"1050","endLine":34,"endColumn":38},{"ruleId":"1047","severity":1,"message":"1048","line":35,"column":81,"nodeType":"1049","messageId":"1050","endLine":35,"endColumn":83},{"ruleId":"1047","severity":1,"message":"1048","line":38,"column":46,"nodeType":"1049","messageId":"1050","endLine":38,"endColumn":48},{"ruleId":"1047","severity":1,"message":"1048","line":55,"column":71,"nodeType":"1049","messageId":"1050","endLine":55,"endColumn":73},{"ruleId":"979","severity":1,"message":"1051","line":8,"column":12,"nodeType":"981","messageId":"982","endLine":8,"endColumn":20},{"ruleId":"979","severity":1,"message":"1052","line":16,"column":11,"nodeType":"981","messageId":"982","endLine":16,"endColumn":19},{"ruleId":"1047","severity":1,"message":"1048","line":14,"column":15,"nodeType":"1049","messageId":"1050","endLine":14,"endColumn":17},{"ruleId":"1047","severity":1,"message":"1048","line":17,"column":19,"nodeType":"1049","messageId":"1050","endLine":17,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1054","line":30,"column":7,"nodeType":"1055","endLine":30,"endColumn":12,"suggestions":"1056"},{"ruleId":"979","severity":1,"message":"1057","line":31,"column":14,"nodeType":"981","messageId":"982","endLine":31,"endColumn":19},{"ruleId":"1047","severity":1,"message":"1048","line":32,"column":15,"nodeType":"1049","messageId":"1050","endLine":32,"endColumn":17},{"ruleId":"1030","severity":1,"message":"1031","line":65,"column":29,"nodeType":"1032","endLine":65,"endColumn":56},{"ruleId":"1058","severity":1,"message":"1059","line":5,"column":1,"nodeType":"1060","endLine":275,"endColumn":3},{"ruleId":"979","severity":1,"message":"1033","line":2,"column":9,"nodeType":"981","messageId":"982","endLine":2,"endColumn":13},{"ruleId":"979","severity":1,"message":"1061","line":2,"column":8,"nodeType":"981","messageId":"982","endLine":2,"endColumn":16},{"ruleId":"979","severity":1,"message":"1011","line":6,"column":8,"nodeType":"981","messageId":"982","endLine":6,"endColumn":13},{"ruleId":"979","severity":1,"message":"1043","line":19,"column":12,"nodeType":"981","messageId":"982","endLine":19,"endColumn":16},{"ruleId":"979","severity":1,"message":"1012","line":20,"column":12,"nodeType":"981","messageId":"982","endLine":20,"endColumn":18},{"ruleId":"979","severity":1,"message":"1062","line":20,"column":19,"nodeType":"981","messageId":"982","endLine":20,"endColumn":28},{"ruleId":"979","severity":1,"message":"1063","line":22,"column":11,"nodeType":"981","messageId":"982","endLine":22,"endColumn":26},{"ruleId":"979","severity":1,"message":"1064","line":33,"column":11,"nodeType":"981","messageId":"982","endLine":33,"endColumn":30},{"ruleId":"1065","severity":1,"message":"1066","line":157,"column":21,"nodeType":"1032","endLine":157,"endColumn":24},{"ruleId":"1065","severity":1,"message":"1066","line":157,"column":53,"nodeType":"1032","endLine":157,"endColumn":83},{"ruleId":"979","severity":1,"message":"1067","line":4,"column":10,"nodeType":"981","messageId":"982","endLine":4,"endColumn":17},{"ruleId":"979","severity":1,"message":"1068","line":41,"column":10,"nodeType":"981","messageId":"982","endLine":41,"endColumn":18},{"ruleId":"979","severity":1,"message":"1069","line":75,"column":11,"nodeType":"981","messageId":"982","endLine":75,"endColumn":20},{"ruleId":"979","severity":1,"message":"1070","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":19},{"ruleId":"979","severity":1,"message":"1071","line":9,"column":14,"nodeType":"981","messageId":"982","endLine":9,"endColumn":17},{"ruleId":"979","severity":1,"message":"1072","line":10,"column":12,"nodeType":"981","messageId":"982","endLine":10,"endColumn":16},{"ruleId":"979","severity":1,"message":"1073","line":11,"column":12,"nodeType":"981","messageId":"982","endLine":11,"endColumn":20},{"ruleId":"979","severity":1,"message":"1074","line":1,"column":34,"nodeType":"981","messageId":"982","endLine":1,"endColumn":41},{"ruleId":"979","severity":1,"message":"1035","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":16},{"ruleId":"979","severity":1,"message":"1033","line":5,"column":9,"nodeType":"981","messageId":"982","endLine":5,"endColumn":13},{"ruleId":"979","severity":1,"message":"1075","line":7,"column":7,"nodeType":"981","messageId":"982","endLine":7,"endColumn":17},{"ruleId":"979","severity":1,"message":"1076","line":8,"column":7,"nodeType":"981","messageId":"982","endLine":8,"endColumn":16},{"ruleId":"979","severity":1,"message":"1077","line":9,"column":7,"nodeType":"981","messageId":"982","endLine":9,"endColumn":16},{"ruleId":"979","severity":1,"message":"1078","line":10,"column":7,"nodeType":"981","messageId":"982","endLine":10,"endColumn":16},{"ruleId":"979","severity":1,"message":"1079","line":17,"column":12,"nodeType":"981","messageId":"982","endLine":17,"endColumn":22},{"ruleId":"979","severity":1,"message":"1080","line":17,"column":23,"nodeType":"981","messageId":"982","endLine":17,"endColumn":36},{"ruleId":"979","severity":1,"message":"1081","line":18,"column":12,"nodeType":"981","messageId":"982","endLine":18,"endColumn":19},{"ruleId":"979","severity":1,"message":"1082","line":18,"column":20,"nodeType":"981","messageId":"982","endLine":18,"endColumn":30},{"ruleId":"979","severity":1,"message":"1083","line":19,"column":12,"nodeType":"981","messageId":"982","endLine":19,"endColumn":16},{"ruleId":"979","severity":1,"message":"1084","line":20,"column":12,"nodeType":"981","messageId":"982","endLine":20,"endColumn":20},{"ruleId":"979","severity":1,"message":"1085","line":20,"column":21,"nodeType":"981","messageId":"982","endLine":20,"endColumn":32},{"ruleId":"1053","severity":1,"message":"1086","line":29,"column":7,"nodeType":"1055","endLine":29,"endColumn":9,"suggestions":"1087"},{"ruleId":"979","severity":1,"message":"1088","line":59,"column":11,"nodeType":"981","messageId":"982","endLine":59,"endColumn":22},{"ruleId":"1089","severity":1,"message":"1090","line":87,"column":24,"nodeType":"1091","messageId":"1092","endLine":87,"endColumn":26},{"ruleId":"979","severity":1,"message":"1093","line":116,"column":11,"nodeType":"981","messageId":"982","endLine":116,"endColumn":21},{"ruleId":"1030","severity":1,"message":"1031","line":126,"column":37,"nodeType":"1032","endLine":126,"endColumn":62},{"ruleId":"979","severity":1,"message":"1094","line":145,"column":11,"nodeType":"981","messageId":"982","endLine":145,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1095","line":150,"column":36,"nodeType":"1049","messageId":"1050","endLine":150,"endColumn":38},{"ruleId":"979","severity":1,"message":"1096","line":155,"column":11,"nodeType":"981","messageId":"982","endLine":155,"endColumn":21},{"ruleId":"1030","severity":1,"message":"1031","line":165,"column":9,"nodeType":"1032","endLine":165,"endColumn":60},{"ruleId":"979","severity":1,"message":"1079","line":176,"column":15,"nodeType":"981","messageId":"982","endLine":176,"endColumn":25},{"ruleId":"1030","severity":1,"message":"1031","line":26,"column":29,"nodeType":"1032","endLine":26,"endColumn":84},{"ruleId":"1030","severity":1,"message":"1031","line":46,"column":25,"nodeType":"1032","endLine":46,"endColumn":90},{"ruleId":"979","severity":1,"message":"988","line":2,"column":8,"nodeType":"981","messageId":"982","endLine":2,"endColumn":20},{"ruleId":"979","severity":1,"message":"1097","line":3,"column":8,"nodeType":"981","messageId":"982","endLine":3,"endColumn":19},{"ruleId":"979","severity":1,"message":"1098","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":16},{"ruleId":"979","severity":1,"message":"1099","line":5,"column":8,"nodeType":"981","messageId":"982","endLine":5,"endColumn":17},{"ruleId":"979","severity":1,"message":"1100","line":9,"column":8,"nodeType":"981","messageId":"982","endLine":9,"endColumn":20},{"ruleId":"1101","severity":1,"message":"1102","line":26,"column":116,"nodeType":"1103","messageId":"1050","endLine":26,"endColumn":124},{"ruleId":"979","severity":1,"message":"1104","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":21},{"ruleId":"979","severity":1,"message":"1105","line":4,"column":10,"nodeType":"981","messageId":"982","endLine":4,"endColumn":20},{"ruleId":"979","severity":1,"message":"1039","line":1,"column":15,"nodeType":"981","messageId":"982","endLine":1,"endColumn":24},{"ruleId":"979","severity":1,"message":"1106","line":2,"column":8,"nodeType":"981","messageId":"982","endLine":2,"endColumn":22},{"ruleId":"979","severity":1,"message":"1107","line":3,"column":8,"nodeType":"981","messageId":"982","endLine":3,"endColumn":31},{"ruleId":"979","severity":1,"message":"995","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":19},{"ruleId":"979","severity":1,"message":"1097","line":5,"column":8,"nodeType":"981","messageId":"982","endLine":5,"endColumn":19},{"ruleId":"979","severity":1,"message":"1108","line":6,"column":8,"nodeType":"981","messageId":"982","endLine":6,"endColumn":24},{"ruleId":"979","severity":1,"message":"1035","line":7,"column":8,"nodeType":"981","messageId":"982","endLine":7,"endColumn":16},{"ruleId":"1030","severity":1,"message":"1031","line":23,"column":37,"nodeType":"1032","endLine":23,"endColumn":83},{"ruleId":"979","severity":1,"message":"1033","line":2,"column":9,"nodeType":"981","messageId":"982","endLine":2,"endColumn":13},{"ruleId":"1109","severity":1,"message":"1110","line":13,"column":17,"nodeType":"1111","messageId":"1112","endLine":13,"endColumn":43},{"ruleId":"1109","severity":1,"message":"1110","line":14,"column":17,"nodeType":"1111","messageId":"1112","endLine":14,"endColumn":43},{"ruleId":"979","severity":1,"message":"1113","line":12,"column":11,"nodeType":"981","messageId":"982","endLine":12,"endColumn":34},{"ruleId":"979","severity":1,"message":"1114","line":18,"column":11,"nodeType":"981","messageId":"982","endLine":18,"endColumn":35},{"ruleId":"979","severity":1,"message":"1115","line":4,"column":30,"nodeType":"981","messageId":"982","endLine":4,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1116","line":21,"column":35,"nodeType":"1055","endLine":21,"endColumn":37,"suggestions":"1117"},{"ruleId":"979","severity":1,"message":"1083","line":30,"column":58,"nodeType":"981","messageId":"982","endLine":30,"endColumn":62},{"ruleId":"979","severity":1,"message":"1118","line":30,"column":113,"nodeType":"981","messageId":"982","endLine":30,"endColumn":124},{"ruleId":"979","severity":1,"message":"1119","line":30,"column":144,"nodeType":"981","messageId":"982","endLine":30,"endColumn":155},{"ruleId":"979","severity":1,"message":"1120","line":30,"column":172,"nodeType":"981","messageId":"982","endLine":30,"endColumn":184},{"ruleId":"979","severity":1,"message":"1042","line":30,"column":191,"nodeType":"981","messageId":"982","endLine":30,"endColumn":211},{"ruleId":"979","severity":1,"message":"1121","line":31,"column":13,"nodeType":"981","messageId":"982","endLine":31,"endColumn":22},{"ruleId":"979","severity":1,"message":"1122","line":31,"column":24,"nodeType":"981","messageId":"982","endLine":31,"endColumn":32},{"ruleId":"1030","severity":1,"message":"1031","line":16,"column":29,"nodeType":"1032","endLine":16,"endColumn":95},{"ruleId":"1065","severity":1,"message":"1123","line":47,"column":26,"nodeType":"1032","endLine":47,"endColumn":38},{"ruleId":"979","severity":1,"message":"1124","line":5,"column":15,"nodeType":"981","messageId":"982","endLine":5,"endColumn":21},{"ruleId":"979","severity":1,"message":"1125","line":5,"column":41,"nodeType":"981","messageId":"982","endLine":5,"endColumn":46},{"ruleId":"1030","severity":1,"message":"1031","line":10,"column":13,"nodeType":"1032","endLine":10,"endColumn":101},{"ruleId":"979","severity":1,"message":"1126","line":1,"column":9,"nodeType":"981","messageId":"982","endLine":1,"endColumn":24},{"ruleId":"1030","severity":1,"message":"1031","line":44,"column":9,"nodeType":"1032","endLine":44,"endColumn":102},{"ruleId":"979","severity":1,"message":"1127","line":8,"column":10,"nodeType":"981","messageId":"982","endLine":8,"endColumn":39},{"ruleId":"979","severity":1,"message":"1128","line":9,"column":8,"nodeType":"981","messageId":"982","endLine":9,"endColumn":30},{"ruleId":"979","severity":1,"message":"1129","line":10,"column":8,"nodeType":"981","messageId":"982","endLine":10,"endColumn":31},{"ruleId":"979","severity":1,"message":"1130","line":11,"column":8,"nodeType":"981","messageId":"982","endLine":11,"endColumn":31},{"ruleId":"979","severity":1,"message":"1131","line":4,"column":9,"nodeType":"981","messageId":"982","endLine":4,"endColumn":17},{"ruleId":"1030","severity":1,"message":"1031","line":98,"column":53,"nodeType":"1032","endLine":98,"endColumn":98},{"ruleId":"1030","severity":1,"message":"1031","line":104,"column":53,"nodeType":"1032","endLine":104,"endColumn":132},{"ruleId":"1030","severity":1,"message":"1031","line":109,"column":53,"nodeType":"1032","endLine":109,"endColumn":132},{"ruleId":"1030","severity":1,"message":"1031","line":114,"column":53,"nodeType":"1032","endLine":114,"endColumn":132},{"ruleId":"979","severity":1,"message":"1132","line":2,"column":9,"nodeType":"981","messageId":"982","endLine":2,"endColumn":28},{"ruleId":"979","severity":1,"message":"1038","line":156,"column":11,"nodeType":"981","messageId":"982","endLine":156,"endColumn":19},{"ruleId":"1030","severity":1,"message":"1031","line":197,"column":29,"nodeType":"1032","endLine":197,"endColumn":111},{"ruleId":"979","severity":1,"message":"1115","line":4,"column":30,"nodeType":"981","messageId":"982","endLine":4,"endColumn":45},{"ruleId":"979","severity":1,"message":"1133","line":4,"column":46,"nodeType":"981","messageId":"982","endLine":4,"endColumn":56},{"ruleId":"979","severity":1,"message":"1126","line":6,"column":10,"nodeType":"981","messageId":"982","endLine":6,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1134","line":21,"column":40,"nodeType":"1055","endLine":21,"endColumn":42,"suggestions":"1135"},{"ruleId":"979","severity":1,"message":"1136","line":25,"column":73,"nodeType":"981","messageId":"982","endLine":25,"endColumn":78},{"ruleId":"979","severity":1,"message":"1137","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":20},{"ruleId":"979","severity":1,"message":"1138","line":4,"column":23,"nodeType":"981","messageId":"982","endLine":4,"endColumn":43},{"ruleId":"979","severity":1,"message":"1139","line":5,"column":8,"nodeType":"981","messageId":"982","endLine":5,"endColumn":21},{"ruleId":"979","severity":1,"message":"1007","line":6,"column":8,"nodeType":"981","messageId":"982","endLine":6,"endColumn":12},{"ruleId":"979","severity":1,"message":"1140","line":36,"column":28,"nodeType":"981","messageId":"982","endLine":36,"endColumn":36},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"979","severity":1,"message":"1141","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1090","line":35,"column":24,"nodeType":"1091","messageId":"1092","endLine":35,"endColumn":26},{"ruleId":"979","severity":1,"message":"1142","line":43,"column":11,"nodeType":"981","messageId":"982","endLine":43,"endColumn":18},{"ruleId":"979","severity":1,"message":"1143","line":44,"column":15,"nodeType":"981","messageId":"982","endLine":44,"endColumn":21},{"ruleId":"1047","severity":1,"message":"1095","line":68,"column":36,"nodeType":"1049","messageId":"1050","endLine":68,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":77,"column":9,"nodeType":"1032","endLine":77,"endColumn":78},{"ruleId":"1030","severity":1,"message":"1031","line":112,"column":37,"nodeType":"1032","endLine":112,"endColumn":90},{"ruleId":"1030","severity":1,"message":"1031","line":72,"column":21,"nodeType":"1032","endLine":72,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":43,"column":9,"nodeType":"1032","endLine":43,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":72,"column":21,"nodeType":"1032","endLine":72,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":39,"column":9,"nodeType":"1032","endLine":39,"endColumn":97},{"ruleId":"979","severity":1,"message":"1141","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":17},{"ruleId":"1089","severity":1,"message":"1090","line":35,"column":24,"nodeType":"1091","messageId":"1092","endLine":35,"endColumn":26},{"ruleId":"979","severity":1,"message":"1142","line":43,"column":11,"nodeType":"981","messageId":"982","endLine":43,"endColumn":18},{"ruleId":"979","severity":1,"message":"1143","line":44,"column":15,"nodeType":"981","messageId":"982","endLine":44,"endColumn":21},{"ruleId":"1047","severity":1,"message":"1095","line":67,"column":72,"nodeType":"1049","messageId":"1050","endLine":67,"endColumn":74},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":9,"nodeType":"1032","endLine":73,"endColumn":78},{"ruleId":"1030","severity":1,"message":"1031","line":108,"column":37,"nodeType":"1032","endLine":108,"endColumn":90},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"979","severity":1,"message":"1141","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":17},{"ruleId":"979","severity":1,"message":"1051","line":8,"column":12,"nodeType":"981","messageId":"982","endLine":8,"endColumn":20},{"ruleId":"1053","severity":1,"message":"1144","line":15,"column":7,"nodeType":"1055","endLine":15,"endColumn":9,"suggestions":"1145"},{"ruleId":"979","severity":1,"message":"1146","line":29,"column":13,"nodeType":"981","messageId":"982","endLine":29,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1090","line":44,"column":24,"nodeType":"1091","messageId":"1092","endLine":44,"endColumn":26},{"ruleId":"979","severity":1,"message":"1142","line":52,"column":11,"nodeType":"981","messageId":"982","endLine":52,"endColumn":18},{"ruleId":"979","severity":1,"message":"1143","line":53,"column":15,"nodeType":"981","messageId":"982","endLine":53,"endColumn":21},{"ruleId":"1047","severity":1,"message":"1095","line":76,"column":36,"nodeType":"1049","messageId":"1050","endLine":76,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":85,"column":9,"nodeType":"1032","endLine":85,"endColumn":78},{"ruleId":"1030","severity":1,"message":"1031","line":120,"column":37,"nodeType":"1032","endLine":120,"endColumn":90},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":9,"nodeType":"1032","endLine":15,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1030","severity":1,"message":"1031","line":40,"column":9,"nodeType":"1032","endLine":40,"endColumn":97},{"ruleId":"1147","severity":1,"message":"1148","line":23,"column":21,"nodeType":"1149","endLine":23,"endColumn":31},{"ruleId":"979","severity":1,"message":"1132","line":2,"column":9,"nodeType":"981","messageId":"982","endLine":2,"endColumn":28},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":12,"column":21,"nodeType":"1032","endLine":12,"endColumn":67},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"1030","severity":1,"message":"1031","line":18,"column":37,"nodeType":"1032","endLine":18,"endColumn":125},{"ruleId":"979","severity":1,"message":"1150","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":26},{"ruleId":"979","severity":1,"message":"1151","line":8,"column":36,"nodeType":"981","messageId":"982","endLine":8,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":29,"nodeType":"1032","endLine":15,"endColumn":93},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":37,"nodeType":"1032","endLine":15,"endColumn":125},{"ruleId":"979","severity":1,"message":"1094","line":6,"column":49,"nodeType":"981","messageId":"982","endLine":6,"endColumn":58},{"ruleId":"1030","severity":1,"message":"1031","line":74,"column":21,"nodeType":"1032","endLine":74,"endColumn":73},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":48,"nodeType":"981","messageId":"982","endLine":6,"endColumn":50},{"ruleId":"1030","severity":1,"message":"1031","line":11,"column":29,"nodeType":"1032","endLine":11,"endColumn":93},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":15,"column":29,"nodeType":"1032","endLine":15,"endColumn":93},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":72,"column":21,"nodeType":"1032","endLine":72,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"979","severity":1,"message":"1150","line":4,"column":8,"nodeType":"981","messageId":"982","endLine":4,"endColumn":26},{"ruleId":"979","severity":1,"message":"1151","line":8,"column":36,"nodeType":"981","messageId":"982","endLine":8,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":23,"column":29,"nodeType":"1032","endLine":23,"endColumn":93},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"1030","severity":1,"message":"1031","line":75,"column":21,"nodeType":"1032","endLine":75,"endColumn":73},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"979","severity":1,"message":"1151","line":6,"column":36,"nodeType":"981","messageId":"982","endLine":6,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":14,"column":37,"nodeType":"1032","endLine":14,"endColumn":101},{"ruleId":"1030","severity":1,"message":"1031","line":73,"column":21,"nodeType":"1032","endLine":73,"endColumn":73},{"ruleId":"1030","severity":1,"message":"1031","line":13,"column":25,"nodeType":"1032","endLine":13,"endColumn":66},"no-unused-vars","'ChickenCurriesContextProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1152"],"no-negated-in-lhs",["1153"],"'logo' is defined but never used.","'ItemsNewForm' is defined but never used.","'ItemsContainer' is defined but never used.","'Table' is defined but never used.","'SortingColumns' is defined but never used.","'PagginationTable' is defined but never used.","'Card' is defined but never used.","'OwnerContactContainers' is defined but never used.","'ItemDetails' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'SignupForm' is defined but never used.","'SignUpContainer' is defined but never used.","'Footer' is defined but never used.","'Consumer' is defined but never used.","'VegSnacksContextProvider' is defined but never used.","'ProductList' is defined but never used.","'Product' is defined but never used.","'Details' is defined but never used.","'Cart' is defined but never used.","'Modal' is defined but never used.","'SignupContainer' is defined but never used.","'AddCartList' is defined but never used.","'axios' is defined but never used.","'search' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'tempVegSnacksProducts' is assigned a value but never used.","'tempVegCurryProducts' is assigned a value but never used.","'tempBiryaniProducts' is assigned a value but never used.","'tempChickenSnacksProducts' is assigned a value but never used.","'tempMuttonSnacksProducts' is assigned a value but never used.","'tempFishPrawnsSnacksProducts' is assigned a value but never used.","'tempChickenCurryProducts' is assigned a value but never used.","'tempMuttonCurryProducts' is assigned a value but never used.","'tempTandooriProducts' is assigned a value but never used.","'tempRotiNaanProducts' is assigned a value but never used.","'tempDummyProducts' is assigned a value but never used.","'parseSync' is defined but never used.","'ProductConsumer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Signup' is defined but never used.","'UserCart' is defined but never used.","'Default' is defined but never used.","'PrintOrderForm' is defined but never used.","'validate' is assigned a value but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'Columns' is defined but never used.","'getSortByToggleProps' is assigned a value but never used.","'list' is assigned a value but never used.","'setRecordForEdit' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'products' is assigned a value but never used.","'setItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchListById'. Either include it or remove the dependency array.","ArrayExpression",["1154"],"'check' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Contacts' is defined but never used.","'setSearch' is assigned a value but never used.","'handleLoginForm' is assigned a value but never used.","'handleLoginFormBlur' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'actions' is defined but never used.","'newState' is defined but never used.","'addoredit' is assigned a value but never used.","'AllProducts' is defined but never used.","'stI' is assigned a value but never used.","'clr0' is assigned a value but never used.","'bgColor0' is assigned a value but never used.","'useMemo' is defined but never used.","'PAGE_ITEMS' is assigned a value but never used.","'PAGE_CART' is assigned a value but never used.","'cartItems' is assigned a value but never used.","'cartTotal' is assigned a value but never used.","'buttonsDOM' is assigned a value but never used.","'setButtonsDOM' is assigned a value but never used.","'buttons' is assigned a value but never used.","'setButtons' is assigned a value but never used.","'page' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBagButtons'. Either include it or remove the dependency array.",["1155"],"'renderItems' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'renderCart' is assigned a value but never used.","'clearCart' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'navigateTo' is assigned a value but never used.","'MenuDetails' is defined but never used.","'MenuForm' is defined but never used.","'OwnerForm' is defined but never used.","'BackEndLogin' is defined but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'VegSnacksForm' is defined but never used.","'OwnerTable' is defined but never used.","'BiryaniDetails' is defined but never used.","'FishPrawnsSnacksDetails' is defined but never used.","'VegSnacksDetails' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleBackendFormChange' is assigned a value but never used.","'handleBackEndLoginSubmit' is assigned a value but never used.","'useGlobalFilter' is defined but never used.","React Hook useMemo has a missing dependency: 'list'. Either include it or remove the dependency array.",["1156"],"'pageOptions' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'footerGroups' is assigned a value but never used.","'pageIndex' is assigned a value but never used.","'pageSize' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'itemId' is assigned a value but never used.","'price' is assigned a value but never used.","'ColumnFiltering' is defined but never used.","'ChickenCurriesContextConsumer' is defined but never used.","'ChickenCurriesCartList' is defined but never used.","'ChickenCurriesCartTotal' is defined but never used.","'ChickenCurriesCartEmpty' is defined but never used.","'MainCard' is defined but never used.","'MainContextConsumer' is defined but never used.","'useFilters' is defined but never used.","React Hook useMemo has a missing dependency: 'ownerList'. Either include it or remove the dependency array.",["1157"],"'state' is assigned a value but never used.","'ReactToPrint' is defined but never used.","'PrintContextConsumer' is defined but never used.","'MainCartItems' is defined but never used.","'imageSrc' is assigned a value but never used.","'ItemsCart' is defined but never used.","'getCart' is assigned a value but never used.","'Incart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setItems'. Either include it or remove the dependency array.",["1158"],"'inCart' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'MainProductDetails' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1163","fix":"1164"},{"desc":"1165","fix":"1166"},{"desc":"1167","fix":"1168"},"Update the dependencies array to be: [fetchListById, ids]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [getBagButtons]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [list]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [ownerList]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [setItems]",{"range":"1177","text":"1178"},[1157,1162],"[fetchListById, ids]",[1027,1029],"[getBagButtons]",[700,702],"[list]",[759,761],"[ownerList]",[511,513],"[setItems]"]